Index.PACKAGES = {"adjuvant" : [{"name" : "adjuvant.Accumulators", "shortDescription" : "", "object" : "adjuvant\/Accumulators$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "adjuvant.Accumulators.main", "link" : "adjuvant\/Accumulators$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "makeCounter", "tail" : "(start: Int, incr: Int): () => Int", "member" : "adjuvant.Accumulators.makeCounter", "link" : "adjuvant\/Accumulators$.html#makeCounter(start:Int,incr:Int):()=>Int", "kind" : "def"}, {"label" : "withOutputToString", "tail" : "(f: ((String) => Unit) => Unit, encoding: Charset): String", "member" : "adjuvant.Accumulators.withOutputToString", "link" : "adjuvant\/Accumulators$.html#withOutputToString(f:(String=>Unit)=>Unit,encoding:java.nio.charset.Charset):String", "kind" : "def"}, {"label" : "withOutputToString", "tail" : "(f: ((String) => Unit) => Unit): String", "member" : "adjuvant.Accumulators.withOutputToString", "link" : "adjuvant\/Accumulators$.html#withOutputToString(f:(String=>Unit)=>Unit):String", "kind" : "def"}, {"label" : "withCounter", "tail" : "(f: (() => Unit) => Unit): Int", "member" : "adjuvant.Accumulators.withCounter", "link" : "adjuvant\/Accumulators$.html#withCounter(f:(()=>Unit)=>Unit):Int", "kind" : "def"}, {"label" : "withSummer", "tail" : "(init: A, plus: (A, A) => A)(f: ((A) => Unit) => Unit): A", "member" : "adjuvant.Accumulators.withSummer", "link" : "adjuvant\/Accumulators$.html#withSummer[A](init:A,plus:(A,A)=>A)(f:(A=>Unit)=>Unit):A", "kind" : "def"}, {"label" : "withMinimizer", "tail" : "(init: A)(f: ((A) => Unit) => Unit)(ev: (A) => Ordered[A]): A", "member" : "adjuvant.Accumulators.withMinimizer", "link" : "adjuvant\/Accumulators$.html#withMinimizer[A](init:A)(f:(A=>Unit)=>Unit)(implicitev:A=>Ordered[A]):A", "kind" : "def"}, {"label" : "withMaximizer", "tail" : "(init: A)(f: ((A) => Unit) => Unit)(ev: (A) => Ordered[A]): A", "member" : "adjuvant.Accumulators.withMaximizer", "link" : "adjuvant\/Accumulators$.html#withMaximizer[A](init:A)(f:(A=>Unit)=>Unit)(implicitev:A=>Ordered[A]):A", "kind" : "def"}, {"label" : "withReducer", "tail" : "(init: A, folder: (A, A) => A)(f: ((A) => Unit) => Unit): A", "member" : "adjuvant.Accumulators.withReducer", "link" : "adjuvant\/Accumulators$.html#withReducer[A](init:A,folder:(A,A)=>A)(f:(A=>Unit)=>Unit):A", "kind" : "def"}, {"label" : "withNconc", "tail" : "(f: ((List[A]) => Unit) => Unit): List[A]", "member" : "adjuvant.Accumulators.withNconc", "link" : "adjuvant\/Accumulators$.html#withNconc[A](f:(List[A]=>Unit)=>Unit):List[A]", "kind" : "def"}, {"label" : "withSetCollector", "tail" : "(f: ((A) => Unit) => Unit): Set[A]", "member" : "adjuvant.Accumulators.withSetCollector", "link" : "adjuvant\/Accumulators$.html#withSetCollector[A](f:(A=>Unit)=>Unit):Set[A]", "kind" : "def"}, {"label" : "withCollector", "tail" : "(f: ((A) => Unit) => Unit): List[A]", "member" : "adjuvant.Accumulators.withCollector", "link" : "adjuvant\/Accumulators$.html#withCollector[A](f:(A=>Unit)=>Unit):List[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "adjuvant\/Accumulators$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "adjuvant\/Accumulators$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "adjuvant\/Accumulators$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "adjuvant\/Accumulators$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "adjuvant\/Accumulators$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "adjuvant\/Accumulators$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "adjuvant\/Accumulators$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "adjuvant\/Accumulators$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "adjuvant\/Accumulators$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "adjuvant\/Accumulators$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "adjuvant\/Accumulators$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "adjuvant\/Accumulators$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "adjuvant\/Accumulators$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "adjuvant\/Accumulators$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "adjuvant\/Accumulators$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "adjuvant\/Accumulators$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "adjuvant\/Accumulators$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "adjuvant\/Accumulators$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "adjuvant\/Accumulators$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "adjuvant.Adjuvant", "shortDescription" : "", "object" : "adjuvant\/Adjuvant$.html", "members_object" : [{"label" : "existingFile", "tail" : "(fNames: Seq[String], default: String): String", "member" : "adjuvant.Adjuvant.existingFile", "link" : "adjuvant\/Adjuvant$.html#existingFile(fNames:Seq[String],default:String):String", "kind" : "def"}, {"label" : "sizedSet", "tail" : "(targetSize: Int, generate: () => A): Set[A]", "member" : "adjuvant.Adjuvant.sizedSet", "link" : "adjuvant\/Adjuvant$.html#sizedSet[A](targetSize:Int,generate:()=>A):Set[A]", "kind" : "def"}, {"label" : "printTime", "tail" : "(time: Long): String", "member" : "adjuvant.Adjuvant.printTime", "link" : "adjuvant\/Adjuvant$.html#printTime(time:Long):String", "kind" : "def"}, {"label" : "member", "tail" : "(x: Any, ys: Seq[Any]): Boolean", "member" : "adjuvant.Adjuvant.member", "link" : "adjuvant\/Adjuvant$.html#member(x:Any,ys:Seq[Any]):Boolean", "kind" : "def"}, {"label" : "intersect", "tail" : "(xs: Seq[Any], ys: Seq[Any]): Seq[Any]", "member" : "adjuvant.Adjuvant.intersect", "link" : "adjuvant\/Adjuvant$.html#intersect(xs:Seq[Any],ys:Seq[Any]):Seq[Any]", "kind" : "def"}, {"label" : "diff", "tail" : "(xs: Seq[Any], ys: Seq[Any]): Seq[Any]", "member" : "adjuvant.Adjuvant.diff", "link" : "adjuvant\/Adjuvant$.html#diff(xs:Seq[Any],ys:Seq[Any]):Seq[Any]", "kind" : "def"}, {"label" : "eql", "tail" : "(x: Any, y: Any): Boolean", "member" : "adjuvant.Adjuvant.eql", "link" : "adjuvant\/Adjuvant$.html#eql(x:Any,y:Any):Boolean", "kind" : "def"}, {"label" : "directoryExists", "tail" : "(dname: String): Boolean", "member" : "adjuvant.Adjuvant.directoryExists", "link" : "adjuvant\/Adjuvant$.html#directoryExists(dname:String):Boolean", "kind" : "def"}, {"label" : "filterFile", "tail" : "(from: String, to: String, keepIf: (String) => Boolean): Unit", "member" : "adjuvant.Adjuvant.filterFile", "link" : "adjuvant\/Adjuvant$.html#filterFile(from:String,to:String,keepIf:String=>Boolean):Unit", "kind" : "def"}, {"label" : "copyFile", "tail" : "(from: String, to: String): Int", "member" : "adjuvant.Adjuvant.copyFile", "link" : "adjuvant\/Adjuvant$.html#copyFile(from:String,to:String):Int", "kind" : "def"}, {"label" : "makeTmpFileName", "tail" : "(prefix: String, suffix: String): String", "member" : "adjuvant.Adjuvant.makeTmpFileName", "link" : "adjuvant\/Adjuvant$.html#makeTmpFileName(prefix:String,suffix:String):String", "kind" : "def"}, {"label" : "openGraphicalFile", "tail" : "(fileName: String): String", "member" : "adjuvant.Adjuvant.openGraphicalFile", "link" : "adjuvant\/Adjuvant$.html#openGraphicalFile(fileName:String):String", "kind" : "def"}, {"label" : "uniquify", "tail" : "(seq1: Seq[A]): Seq[A]", "member" : "adjuvant.Adjuvant.uniquify", "link" : "adjuvant\/Adjuvant$.html#uniquify[A](seq1:Seq[A]):Seq[A]", "kind" : "def"}, {"label" : "trace", "tail" : "(msg: String, a: A): A", "member" : "adjuvant.Adjuvant.trace", "link" : "adjuvant\/Adjuvant$.html#trace[A](msg:String,a:A):A", "kind" : "def"}, {"label" : "trace", "tail" : "(a: A): A", "member" : "adjuvant.Adjuvant.trace", "link" : "adjuvant\/Adjuvant$.html#trace[A](a:A):A", "kind" : "def"}, {"label" : "sameElementsAnyOrder", "tail" : "(seq1: Seq[A], seq2: Seq[A]): Boolean", "member" : "adjuvant.Adjuvant.sameElementsAnyOrder", "link" : "adjuvant\/Adjuvant$.html#sameElementsAnyOrder[A](seq1:Seq[A],seq2:Seq[A]):Boolean", "kind" : "def"}, {"label" : "findSimplifier", "tail" : "(tag: String, target: T, verbose: Boolean, simplifiers: List[(String, () => T)]): T", "member" : "adjuvant.Adjuvant.findSimplifier", "link" : "adjuvant\/Adjuvant$.html#findSimplifier[T](tag:String,target:T,verbose:Boolean,simplifiers:List[(String,()=>T)]):T", "kind" : "def"}, {"label" : "simplifierUsed", "tail" : ": Map[(String, String), Int]", "member" : "adjuvant.Adjuvant.simplifierUsed", "link" : "adjuvant\/Adjuvant$.html#simplifierUsed:scala.collection.mutable.Map[(String,String),Int]", "kind" : "val"}, {"label" : "findSimplifierDebug", "tail" : "(tag: String, target: T, simplifiers: List[(String, () => T)]): T", "member" : "adjuvant.Adjuvant.findSimplifierDebug", "link" : "adjuvant\/Adjuvant$.html#findSimplifierDebug[T](tag:String,target:T,simplifiers:List[(String,()=>T)]):T", "kind" : "def"}, {"label" : "partitionBy", "tail" : "(domain: Set[S], f: (S) => T): Set[Set[S]]", "member" : "adjuvant.Adjuvant.partitionBy", "link" : "adjuvant\/Adjuvant$.html#partitionBy[S,T](domain:Set[S],f:S=>T):Set[Set[S]]", "kind" : "def"}, {"label" : "memoize", "tail" : "(f: (F) => T): (F) => T", "member" : "adjuvant.Adjuvant.memoize", "link" : "adjuvant\/Adjuvant$.html#memoize[F,T](f:F=>T):F=>T", "kind" : "def"}, {"label" : "fixedPoint", "tail" : "(seed: V, f: (V) => V, cmp: (V, V) => Boolean, invariant: (V) => Boolean): V", "member" : "adjuvant.Adjuvant.fixedPoint", "link" : "adjuvant\/Adjuvant$.html#fixedPoint[V](seed:V,f:V=>V,cmp:(V,V)=>Boolean,invariant:V=>Boolean):V", "kind" : "def"}, {"label" : "fixedPoint", "tail" : "(seed: V, f: (V) => V, cmp: (V, V) => Boolean): V", "member" : "adjuvant.Adjuvant.fixedPoint", "link" : "adjuvant\/Adjuvant$.html#fixedPoint[V](seed:V,f:V=>V,cmp:(V,V)=>Boolean):V", "kind" : "def"}, {"label" : "removeAdjacent", "tail" : "(xs: Seq[A], cmp: (A, A) => Boolean): Seq[A]", "member" : "adjuvant.Adjuvant.removeAdjacent", "link" : "adjuvant\/Adjuvant$.html#removeAdjacent[A](xs:Seq[A],cmp:(A,A)=>Boolean):Seq[A]", "kind" : "def"}, {"label" : "findAdjacent", "tail" : "(xs: Seq[A], cmp: (A, A) => Boolean): Boolean", "member" : "adjuvant.Adjuvant.findAdjacent", "link" : "adjuvant\/Adjuvant$.html#findAdjacent[A](xs:Seq[A],cmp:(A,A)=>Boolean):Boolean", "kind" : "def"}, {"label" : "searchReplace", "tail" : "(seq: Seq[A], search: A, replace: A): Seq[A]", "member" : "adjuvant.Adjuvant.searchReplace", "link" : "adjuvant\/Adjuvant$.html#searchReplace[A](seq:Seq[A],search:A,replace:A):Seq[A]", "kind" : "def"}, {"label" : "searchReplace", "tail" : "(xs: Seq[A], search: A, replace: Seq[A]): Seq[A]", "member" : "adjuvant.Adjuvant.searchReplace", "link" : "adjuvant\/Adjuvant$.html#searchReplace[A](xs:Seq[A],search:A,replace:Seq[A]):Seq[A]", "kind" : "def"}, {"label" : "traceGraph", "tail" : "(v0: V, edges: (V) => Seq[(L, V)]): (Vector[V], Vector[Seq[(L, Int)]])", "member" : "adjuvant.Adjuvant.traceGraph", "link" : "adjuvant\/Adjuvant$.html#traceGraph[V,L](v0:V,edges:V=>Seq[(L,V)]):(Vector[V],Vector[Seq[(L,Int)]])", "kind" : "def"}, {"label" : "conj", "tail" : "(seq: Seq[T], obj: T): Seq[T]", "member" : "adjuvant.Adjuvant.conj", "link" : "adjuvant\/Adjuvant$.html#conj[T](seq:Seq[T],obj:T):Seq[T]", "kind" : "def"}, {"label" : "conj", "tail" : "(it: Iterable[T], obj: T): Iterable[T]", "member" : "adjuvant.Adjuvant.conj", "link" : "adjuvant\/Adjuvant$.html#conj[T](it:Iterable[T],obj:T):Iterable[T]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "adjuvant\/Adjuvant$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "adjuvant\/Adjuvant$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "adjuvant\/Adjuvant$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "adjuvant\/Adjuvant$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "adjuvant\/Adjuvant$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "adjuvant\/Adjuvant$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "adjuvant\/Adjuvant$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "adjuvant\/Adjuvant$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "adjuvant\/Adjuvant$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "adjuvant\/Adjuvant$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "adjuvant\/Adjuvant$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "adjuvant\/Adjuvant$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "adjuvant\/Adjuvant$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "adjuvant\/Adjuvant$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "adjuvant\/Adjuvant$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "adjuvant\/Adjuvant$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "adjuvant\/Adjuvant$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "adjuvant\/Adjuvant$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "adjuvant\/Adjuvant$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "adjuvant.BellmanFord", "shortDescription" : "", "object" : "adjuvant\/BellmanFord$.html", "members_object" : [{"label" : "Dijkstra", "tail" : "(vertices: Seq[V], source: V, edges: Seq[((V, V), Double)]): (Map[V, Double], Map[V, V])", "member" : "adjuvant.BellmanFord.Dijkstra", "link" : "adjuvant\/BellmanFord$.html#Dijkstra[V](vertices:Seq[V],source:V,edges:Seq[((V,V),Double)]):(Map[V,Double],Map[V,V])", "kind" : "def"}, {"label" : "generateVerticesSet", "tail" : "(finals: Int, num: Int): Set[Int]", "member" : "adjuvant.BellmanFord.generateVerticesSet", "link" : "adjuvant\/BellmanFord$.html#generateVerticesSet(finals:Int,num:Int):Set[Int]", "kind" : "def"}, {"label" : "reconstructPath", "tail" : "(pred: Map[V, V], v: V): List[V]", "member" : "adjuvant.BellmanFord.reconstructPath", "link" : "adjuvant\/BellmanFord$.html#reconstructPath[V](pred:Map[V,V],v:V):List[V]", "kind" : "def"}, {"label" : "shortestPath", "tail" : "(vertices: Seq[V], source: V, edges: Seq[((V, V), Double)]): (Map[V, Double], Map[V, V])", "member" : "adjuvant.BellmanFord.shortestPath", "link" : "adjuvant\/BellmanFord$.html#shortestPath[V](vertices:Seq[V],source:V,edges:Seq[((V,V),Double)]):(Map[V,Double],Map[V,V])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "adjuvant\/BellmanFord$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "adjuvant\/BellmanFord$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "adjuvant\/BellmanFord$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "adjuvant\/BellmanFord$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "adjuvant\/BellmanFord$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "adjuvant\/BellmanFord$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "adjuvant\/BellmanFord$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "adjuvant\/BellmanFord$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "adjuvant\/BellmanFord$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "adjuvant\/BellmanFord$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "adjuvant\/BellmanFord$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "adjuvant\/BellmanFord$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "adjuvant\/BellmanFord$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "adjuvant\/BellmanFord$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "adjuvant\/BellmanFord$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "adjuvant\/BellmanFord$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "adjuvant\/BellmanFord$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "adjuvant\/BellmanFord$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "adjuvant\/BellmanFord$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "adjuvant.CLcompat", "shortDescription" : "", "object" : "adjuvant\/CLcompat$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "adjuvant.CLcompat.main", "link" : "adjuvant\/CLcompat$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "block", "tail" : "(body: ((A) => Nothing) => A): A", "member" : "adjuvant.CLcompat.block", "link" : "adjuvant\/CLcompat$.html#block[A](body:(A=>Nothing)=>A):A", "kind" : "def"}, {"label" : "mapcan", "tail" : "(f: (A1, A2) => List[B], L1: List[A1], L2: List[A2]): List[B]", "member" : "adjuvant.CLcompat.mapcan", "link" : "adjuvant\/CLcompat$.html#mapcan[A1,A2,B](f:(A1,A2)=>List[B],L1:List[A1],L2:List[A2]):List[B]", "kind" : "def"}, {"label" : "merge", "tail" : "(clauses1: List[A], clauses2: List[A], clauseLess: (A, A) => Boolean): List[A]", "member" : "adjuvant.CLcompat.merge", "link" : "adjuvant\/CLcompat$.html#merge[A](clauses1:List[A],clauses2:List[A],clauseLess:(A,A)=>Boolean):List[A]", "kind" : "def"}, {"label" : "every", "tail" : "(L1: List[A], L2: List[B])(f: (A, B) => Boolean): Boolean", "member" : "adjuvant.CLcompat.every", "link" : "adjuvant\/CLcompat$.html#every[A,B](L1:List[A],L2:List[B])(f:(A,B)=>Boolean):Boolean", "kind" : "def"}, {"label" : "prog2", "tail" : "(_unused: A, val2: B, code2: => C): B", "member" : "adjuvant.CLcompat.prog2", "link" : "adjuvant\/CLcompat$.html#prog2[A,B,C](_unused:A,val2:B,code2:=>C):B", "kind" : "def"}, {"label" : "prog1", "tail" : "(val1: A, code2: => B): A", "member" : "adjuvant.CLcompat.prog1", "link" : "adjuvant\/CLcompat$.html#prog1[A,B](val1:A,code2:=>B):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "adjuvant\/CLcompat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "adjuvant\/CLcompat$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "adjuvant\/CLcompat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "adjuvant\/CLcompat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "adjuvant\/CLcompat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "adjuvant\/CLcompat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "adjuvant\/CLcompat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "adjuvant\/CLcompat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "adjuvant\/CLcompat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "adjuvant\/CLcompat$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "adjuvant\/CLcompat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "adjuvant\/CLcompat$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "adjuvant\/CLcompat$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "adjuvant\/CLcompat$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "adjuvant\/CLcompat$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "adjuvant\/CLcompat$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "adjuvant\/CLcompat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "adjuvant\/CLcompat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "adjuvant\/CLcompat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "adjuvant.GnuPlot", "shortDescription" : "", "object" : "adjuvant\/GnuPlot$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "adjuvant.GnuPlot.main", "link" : "adjuvant\/GnuPlot$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "gnuPlot", "tail" : "(dataToPlot: Seq[A])(terminals: Set[String], title: String, comment: String, xAxisLabel: String, xLog: Boolean, yAxisLabel: String, yLog: Boolean, grid: Boolean, outputFileBaseName: String, plotWith: String, key: String, gnuFileCB: (String) => Unit, verbose: Boolean, view: Boolean): Unit", "member" : "adjuvant.GnuPlot.gnuPlot", "link" : "adjuvant\/GnuPlot$.html#gnuPlot[A](dataToPlot:Seq[A])(terminals:Set[String],title:String,comment:String,xAxisLabel:String,xLog:Boolean,yAxisLabel:String,yLog:Boolean,grid:Boolean,outputFileBaseName:String,plotWith:String,key:String,gnuFileCB:String=>Unit,verbose:Boolean,view:Boolean):Unit", "kind" : "def"}, {"label" : "GnuPlotDescriptor", "tail" : "", "member" : "adjuvant.GnuPlot.GnuPlotDescriptor", "link" : "adjuvant\/GnuPlot$.html#GnuPlotDescriptorextendsProductwithSerializable", "kind" : "case class"}, {"label" : "writeCsv", "tail" : "(dataToPlot: Seq[(String, Seq[Double], Seq[Double])], xAxisLabel: String, outputFileBaseName: String, verbose: Boolean): Unit", "member" : "adjuvant.GnuPlot.writeCsv", "link" : "adjuvant\/GnuPlot$.html#writeCsv(dataToPlot:Seq[(String,Seq[Double],Seq[Double])],xAxisLabel:String,outputFileBaseName:String,verbose:Boolean):Unit", "kind" : "def"}, {"label" : "gnuPlotPath", "tail" : ": String", "member" : "adjuvant.GnuPlot.gnuPlotPath", "link" : "adjuvant\/GnuPlot$.html#gnuPlotPath:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "adjuvant\/GnuPlot$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "adjuvant\/GnuPlot$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "adjuvant\/GnuPlot$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "adjuvant\/GnuPlot$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "adjuvant\/GnuPlot$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "adjuvant\/GnuPlot$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "adjuvant\/GnuPlot$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "adjuvant\/GnuPlot$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "adjuvant\/GnuPlot$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "adjuvant\/GnuPlot$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "adjuvant\/GnuPlot$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "adjuvant\/GnuPlot$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "adjuvant\/GnuPlot$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "adjuvant\/GnuPlot$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "adjuvant\/GnuPlot$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "adjuvant\/GnuPlot$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "adjuvant\/GnuPlot$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "adjuvant\/GnuPlot$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "adjuvant\/GnuPlot$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "adjuvant.successor", "shortDescription" : "", "members_case class" : [{"label" : "apply", "tail" : "(f: (A) => A): A", "member" : "adjuvant.successor.apply", "link" : "adjuvant\/successor.html#apply(f:A=>A):A", "kind" : "def"}, {"label" : "current", "tail" : ": A", "member" : "adjuvant.successor.current", "link" : "adjuvant\/successor.html#current:A", "kind" : "var"}, {"member" : "adjuvant.successor#<init>", "error" : "unsupported entity"}, {"label" : "init", "tail" : ": A", "member" : "adjuvant.successor.init", "link" : "adjuvant\/successor.html#init:A", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "adjuvant\/successor.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "adjuvant\/successor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "adjuvant\/successor.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "adjuvant\/successor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "adjuvant\/successor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "adjuvant\/successor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "adjuvant\/successor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "adjuvant\/successor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "adjuvant\/successor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "adjuvant\/successor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "adjuvant\/successor.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "adjuvant\/successor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "adjuvant\/successor.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "adjuvant\/successor.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "adjuvant\/successor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "adjuvant\/successor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "adjuvant\/successor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "adjuvant\/successor.html", "kind" : "case class"}], "genusbdd" : [{"name" : "genusbdd.GenusBdd", "shortDescription" : "", "object" : "genusbdd\/GenusBdd$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "genusbdd.GenusBdd.main", "link" : "genusbdd\/GenusBdd$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "bddToDnf", "tail" : "(bdd: Bdd, intToTd: Map[Int, SimpleTypeD]): SimpleTypeD", "member" : "genusbdd.GenusBdd.bddToDnf", "link" : "genusbdd\/GenusBdd$.html#bddToDnf(bdd:bdd.Bdd,intToTd:scala.collection.immutable.Map[Int,genus.SimpleTypeD]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "prettyOr", "tail" : "(terms: List[SimpleTypeD]): SimpleTypeD", "member" : "genusbdd.GenusBdd.prettyOr", "link" : "genusbdd\/GenusBdd$.html#prettyOr(terms:List[genus.SimpleTypeD]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "prettyAnd", "tail" : "(terms: List[SimpleTypeD]): SimpleTypeD", "member" : "genusbdd.GenusBdd.prettyAnd", "link" : "genusbdd\/GenusBdd$.html#prettyAnd(terms:List[genus.SimpleTypeD]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genusbdd\/GenusBdd$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genusbdd\/GenusBdd$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genusbdd\/GenusBdd$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genusbdd\/GenusBdd$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genusbdd\/GenusBdd$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genusbdd\/GenusBdd$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genusbdd\/GenusBdd$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genusbdd\/GenusBdd$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genusbdd\/GenusBdd$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genusbdd\/GenusBdd$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genusbdd\/GenusBdd$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genusbdd\/GenusBdd$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "genusbdd\/GenusBdd$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genusbdd\/GenusBdd$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genusbdd\/GenusBdd$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genusbdd\/GenusBdd$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genusbdd\/GenusBdd$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genusbdd\/GenusBdd$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genusbdd\/GenusBdd$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "subtypep", "tail" : "(that: GenusBdd): Option[Boolean]", "member" : "genusbdd.GenusBdd.subtypep", "link" : "genusbdd\/GenusBdd.html#subtypep(that:genusbdd.GenusBdd):Option[Boolean]", "kind" : "def"}, {"label" : "satisfyingTypeDesignators", "tail" : "(delta: Bdd): LazyList[SimpleTypeD]", "member" : "genusbdd.GenusBdd.satisfyingTypeDesignators", "link" : "genusbdd\/GenusBdd.html#satisfyingTypeDesignators(delta:bdd.Bdd):LazyList[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "labelToString", "tail" : "(label: Int): String", "member" : "genusbdd.GenusBdd.labelToString", "link" : "genusbdd\/GenusBdd.html#labelToString(label:Int):String", "kind" : "def"}, {"label" : "typep", "tail" : "(a: Any): Boolean", "member" : "genusbdd.GenusBdd.typep", "link" : "genusbdd\/GenusBdd.html#typep(a:Any):Boolean", "kind" : "def"}, {"label" : "cnf", "tail" : ": SimpleTypeD", "member" : "genusbdd.GenusBdd.cnf", "link" : "genusbdd\/GenusBdd.html#cnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "dnf", "tail" : ": SimpleTypeD", "member" : "genusbdd.GenusBdd.dnf", "link" : "genusbdd\/GenusBdd.html#dnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "intToTd", "tail" : ": Map[Int, SimpleTypeD]", "member" : "genusbdd.GenusBdd.intToTd", "link" : "genusbdd\/GenusBdd.html#intToTd:scala.collection.immutable.Map[Int,genus.SimpleTypeD]", "kind" : "lazy val"}, {"label" : "toBdd", "tail" : "(td: SimpleTypeD): Bdd", "member" : "genusbdd.GenusBdd.toBdd", "link" : "genusbdd\/GenusBdd.html#toBdd(td:genus.SimpleTypeD):bdd.Bdd", "kind" : "def"}, {"label" : "bdd", "tail" : ": Bdd", "member" : "genusbdd.GenusBdd.bdd", "link" : "genusbdd\/GenusBdd.html#bdd:bdd.Bdd", "kind" : "val"}, {"member" : "genusbdd.GenusBdd#<init>", "error" : "unsupported entity"}, {"label" : "tdToInt", "tail" : ": Map[SimpleTypeD, Int]", "member" : "genusbdd.GenusBdd.tdToInt", "link" : "genusbdd\/GenusBdd.html#tdToInt:scala.collection.mutable.Map[genus.SimpleTypeD,Int]", "kind" : "val"}, {"label" : "td", "tail" : ": SimpleTypeD", "member" : "genusbdd.GenusBdd.td", "link" : "genusbdd\/GenusBdd.html#td:genus.SimpleTypeD", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "genusbdd\/GenusBdd.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genusbdd\/GenusBdd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genusbdd\/GenusBdd.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genusbdd\/GenusBdd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genusbdd\/GenusBdd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genusbdd\/GenusBdd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genusbdd\/GenusBdd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genusbdd\/GenusBdd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genusbdd\/GenusBdd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genusbdd\/GenusBdd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genusbdd\/GenusBdd.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genusbdd\/GenusBdd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genusbdd\/GenusBdd.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genusbdd\/GenusBdd.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genusbdd\/GenusBdd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genusbdd\/GenusBdd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genusbdd\/GenusBdd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "genusbdd\/GenusBdd.html", "kind" : "case class"}], "teamDaysOct2022" : [{"name" : "teamDaysOct2022.TeamDays", "shortDescription" : "", "object" : "teamDaysOct2022\/TeamDays$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "teamDaysOct2022.TeamDays.main", "link" : "teamDaysOct2022\/TeamDays$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "genDistinguishFinalDfa", "tail" : "(): String", "member" : "teamDaysOct2022.TeamDays.genDistinguishFinalDfa", "link" : "teamDaysOct2022\/TeamDays$.html#genDistinguishFinalDfa():String", "kind" : "def"}, {"label" : "genSampleDfa", "tail" : "(): Unit", "member" : "teamDaysOct2022.TeamDays.genSampleDfa", "link" : "teamDaysOct2022\/TeamDays$.html#genSampleDfa():Unit", "kind" : "def"}, {"label" : "genExpr2SampleDfa", "tail" : "(): Unit", "member" : "teamDaysOct2022.TeamDays.genExpr2SampleDfa", "link" : "teamDaysOct2022\/TeamDays$.html#genExpr2SampleDfa():Unit", "kind" : "def"}, {"label" : "dotDir", "tail" : ": String", "member" : "teamDaysOct2022.TeamDays.dotDir", "link" : "teamDaysOct2022\/TeamDays$.html#dotDir:String", "kind" : "val"}, {"label" : "genExprSampleDfa", "tail" : "(): Unit", "member" : "teamDaysOct2022.TeamDays.genExprSampleDfa", "link" : "teamDaysOct2022\/TeamDays$.html#genExprSampleDfa():Unit", "kind" : "def"}, {"label" : "JStr", "tail" : "", "member" : "teamDaysOct2022.TeamDays.JStr", "link" : "teamDaysOct2022\/TeamDays$.html#JStrextendsTeamDays.JConst", "kind" : "final class"}, {"label" : "JNum", "tail" : "", "member" : "teamDaysOct2022.TeamDays.JNum", "link" : "teamDaysOct2022\/TeamDays$.html#JNumextendsTeamDays.JConst", "kind" : "final class"}, {"label" : "JConst", "tail" : "", "member" : "teamDaysOct2022.TeamDays.JConst", "link" : "teamDaysOct2022\/TeamDays$.html#JConstextendsTeamDays.JExpr", "kind" : "abstract class"}, {"label" : "JMinus", "tail" : "", "member" : "teamDaysOct2022.TeamDays.JMinus", "link" : "teamDaysOct2022\/TeamDays$.html#JMinusextendsTeamDays.JBinary", "kind" : "final class"}, {"label" : "JPlus", "tail" : "", "member" : "teamDaysOct2022.TeamDays.JPlus", "link" : "teamDaysOct2022\/TeamDays$.html#JPlusextendsTeamDays.JBinary", "kind" : "final class"}, {"label" : "JBinary", "tail" : "", "member" : "teamDaysOct2022.TeamDays.JBinary", "link" : "teamDaysOct2022\/TeamDays$.html#JBinaryextendsTeamDays.JExpr", "kind" : "abstract class"}, {"label" : "JExpr", "tail" : "", "member" : "teamDaysOct2022.TeamDays.JExpr", "link" : "teamDaysOct2022\/TeamDays$.html#JExprextendsAnyRef", "kind" : "abstract class"}, {"label" : "genSimpleSampleDfa", "tail" : "(): Unit", "member" : "teamDaysOct2022.TeamDays.genSimpleSampleDfa", "link" : "teamDaysOct2022\/TeamDays$.html#genSimpleSampleDfa():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "teamDaysOct2022\/TeamDays$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "teamDaysOct2022\/TeamDays$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "teamDaysOct2022\/TeamDays$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "teamDaysOct2022\/TeamDays$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "teamDaysOct2022\/TeamDays$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "teamDaysOct2022\/TeamDays$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "teamDaysOct2022\/TeamDays$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "teamDaysOct2022\/TeamDays$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "teamDaysOct2022\/TeamDays$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "teamDaysOct2022\/TeamDays$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "teamDaysOct2022\/TeamDays$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "teamDaysOct2022\/TeamDays$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "teamDaysOct2022\/TeamDays$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "teamDaysOct2022\/TeamDays$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "teamDaysOct2022\/TeamDays$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "teamDaysOct2022\/TeamDays$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "teamDaysOct2022\/TeamDays$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "teamDaysOct2022\/TeamDays$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "teamDaysOct2022\/TeamDays$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "treereduce" : [{"name" : "treereduce.DoubleFoldTest", "shortDescription" : "", "object" : "treereduce\/DoubleFoldTest$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "treereduce.DoubleFoldTest.main", "link" : "treereduce\/DoubleFoldTest$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "rationalFoldTest", "tail" : "(): Unit", "member" : "treereduce.DoubleFoldTest.rationalFoldTest", "link" : "treereduce\/DoubleFoldTest$.html#rationalFoldTest():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "treereduce\/DoubleFoldTest$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "treereduce\/DoubleFoldTest$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "treereduce\/DoubleFoldTest$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "treereduce\/DoubleFoldTest$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "treereduce\/DoubleFoldTest$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "treereduce\/DoubleFoldTest$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "treereduce\/DoubleFoldTest$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/DoubleFoldTest$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/DoubleFoldTest$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/DoubleFoldTest$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "treereduce\/DoubleFoldTest$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "treereduce\/DoubleFoldTest$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "treereduce\/DoubleFoldTest$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "treereduce\/DoubleFoldTest$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "treereduce\/DoubleFoldTest$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "treereduce\/DoubleFoldTest$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "treereduce\/DoubleFoldTest$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "treereduce\/DoubleFoldTest$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "treereduce\/DoubleFoldTest$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "treereduce.ListSpecificTreeReduce", "shortDescription" : "", "object" : "treereduce\/ListSpecificTreeReduce$.html", "members_object" : [{"label" : "treeFold", "tail" : "(m: List[A])(z: A)(f: (A, A) => A): A", "member" : "treereduce.ListSpecificTreeReduce.treeFold", "link" : "treereduce\/ListSpecificTreeReduce$.html#treeFold[A](m:List[A])(z:A)(f:(A,A)=>A):A", "kind" : "def"}, {"label" : "pairWiseFold", "tail" : "(z: A)(mList: List[A], f: (A, A) => A): A", "member" : "treereduce.ListSpecificTreeReduce.pairWiseFold", "link" : "treereduce\/ListSpecificTreeReduce$.html#pairWiseFold[A](z:A)(mList:List[A],f:(A,A)=>A):A", "kind" : "def"}, {"label" : "paired", "tail" : "(data: List[A]): (List[(A, A)], Option[A])", "member" : "treereduce.ListSpecificTreeReduce.paired", "link" : "treereduce\/ListSpecificTreeReduce$.html#paired[A](data:List[A]):(List[(A,A)],Option[A])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "treereduce\/ListSpecificTreeReduce$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "treereduce\/ListSpecificTreeReduce$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "treereduce\/ListSpecificTreeReduce$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "treereduce\/ListSpecificTreeReduce$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "treereduce\/ListSpecificTreeReduce$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "treereduce\/ListSpecificTreeReduce$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "treereduce\/ListSpecificTreeReduce$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/ListSpecificTreeReduce$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/ListSpecificTreeReduce$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/ListSpecificTreeReduce$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "treereduce\/ListSpecificTreeReduce$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "treereduce\/ListSpecificTreeReduce$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "treereduce\/ListSpecificTreeReduce$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "treereduce\/ListSpecificTreeReduce$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "treereduce\/ListSpecificTreeReduce$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "treereduce\/ListSpecificTreeReduce$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "treereduce\/ListSpecificTreeReduce$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "treereduce\/ListSpecificTreeReduce$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "treereduce\/ListSpecificTreeReduce$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "treereduce.RationalFoldTest", "shortDescription" : "", "object" : "treereduce\/RationalFoldTest$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "treereduce.RationalFoldTest.main", "link" : "treereduce\/RationalFoldTest$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "rationalFoldTestBounds", "tail" : "(bounds: List[Int], randomize: Boolean, verbose: Boolean, gnuFileCB: (String) => Unit): Unit", "member" : "treereduce.RationalFoldTest.rationalFoldTestBounds", "link" : "treereduce\/RationalFoldTest$.html#rationalFoldTestBounds(bounds:List[Int],randomize:Boolean,verbose:Boolean,gnuFileCB:String=>Unit):Unit", "kind" : "def"}, {"label" : "rationalFoldTest", "tail" : "(maxBound: Int, verbose: Boolean, randomize: Boolean, gnuFileCB: (String) => Unit): Unit", "member" : "treereduce.RationalFoldTest.rationalFoldTest", "link" : "treereduce\/RationalFoldTest$.html#rationalFoldTest(maxBound:Int,verbose:Boolean,randomize:Boolean,gnuFileCB:String=>Unit):Unit", "kind" : "def"}, {"label" : "time", "tail" : "(repetitions: Int, name: String, block: => R): Double", "member" : "treereduce.RationalFoldTest.time", "link" : "treereduce\/RationalFoldTest$.html#time[R](repetitions:Int,name:String,block:=>R):Double", "kind" : "def"}, {"label" : "time1", "tail" : "(block: => R): Double", "member" : "treereduce.RationalFoldTest.time1", "link" : "treereduce\/RationalFoldTest$.html#time1[R](block:=>R):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "treereduce\/RationalFoldTest$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "treereduce\/RationalFoldTest$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "treereduce\/RationalFoldTest$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "treereduce\/RationalFoldTest$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "treereduce\/RationalFoldTest$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "treereduce\/RationalFoldTest$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "treereduce\/RationalFoldTest$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/RationalFoldTest$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/RationalFoldTest$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/RationalFoldTest$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "treereduce\/RationalFoldTest$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "treereduce\/RationalFoldTest$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "treereduce\/RationalFoldTest$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "treereduce\/RationalFoldTest$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "treereduce\/RationalFoldTest$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "treereduce\/RationalFoldTest$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "treereduce\/RationalFoldTest$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "treereduce\/RationalFoldTest$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "treereduce\/RationalFoldTest$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "treereduce.TreeParallelReduce", "shortDescription" : "", "object" : "treereduce\/TreeParallelReduce$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "treereduce.TreeParallelReduce.main", "link" : "treereduce\/TreeParallelReduce$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "pairMapReduce", "tail" : "(m: M[A])(init: B, seqOp: (A) => B, combOp: (B, B) => B)(pairable: Pairable[M]): B", "member" : "treereduce.TreeParallelReduce.pairMapReduce", "link" : "treereduce\/TreeParallelReduce$.html#pairMapReduce[M[_],A,B](m:M[A])(init:B,seqOp:A=>B,combOp:(B,B)=>B)(implicitpairable:treereduce.TreeParallelReduce.Pairable[M]):B", "kind" : "def"}, {"label" : "arrayPairable", "tail" : ": Pairable[Array]", "member" : "treereduce.TreeParallelReduce.arrayPairable", "link" : "treereduce\/TreeParallelReduce$.html#arrayPairable:treereduce.TreeParallelReduce.Pairable[Array]", "kind" : "implicit val"}, {"label" : "parArrayPairable", "tail" : ": Pairable[ParArray]", "member" : "treereduce.TreeParallelReduce.parArrayPairable", "link" : "treereduce\/TreeParallelReduce$.html#parArrayPairable:treereduce.TreeParallelReduce.Pairable[scala.collection.parallel.mutable.ParArray]", "kind" : "implicit val"}, {"label" : "parSeqPairable", "tail" : ": Pairable[ParSeq]", "member" : "treereduce.TreeParallelReduce.parSeqPairable", "link" : "treereduce\/TreeParallelReduce$.html#parSeqPairable:treereduce.TreeParallelReduce.Pairable[scala.collection.parallel.immutable.ParSeq]", "kind" : "implicit val"}, {"label" : "listPairable", "tail" : ": Pairable[List]", "member" : "treereduce.TreeParallelReduce.listPairable", "link" : "treereduce\/TreeParallelReduce$.html#listPairable:treereduce.TreeParallelReduce.Pairable[List]", "kind" : "implicit val"}, {"label" : "iteratorPairable", "tail" : ": Pairable[Iterator]", "member" : "treereduce.TreeParallelReduce.iteratorPairable", "link" : "treereduce\/TreeParallelReduce$.html#iteratorPairable:treereduce.TreeParallelReduce.Pairable[Iterator]", "kind" : "implicit val"}, {"label" : "indexedSeqPairable", "tail" : ": Pairable[IndexedSeq]", "member" : "treereduce.TreeParallelReduce.indexedSeqPairable", "link" : "treereduce\/TreeParallelReduce$.html#indexedSeqPairable:treereduce.TreeParallelReduce.Pairable[IndexedSeq]", "kind" : "implicit val"}, {"label" : "Pairable", "tail" : "", "member" : "treereduce.TreeParallelReduce.Pairable", "link" : "treereduce\/TreeParallelReduce$.html#Pairable[F[_]]extendsAnyRef", "kind" : "trait"}, {"label" : "addInt", "tail" : "(a: Int, b: Int): Int", "member" : "treereduce.TreeParallelReduce.addInt", "link" : "treereduce\/TreeParallelReduce$.html#addInt(a:Int,b:Int):Int", "kind" : "def"}, {"label" : "id", "tail" : "(a: A): A", "member" : "treereduce.TreeParallelReduce.id", "link" : "treereduce\/TreeParallelReduce$.html#id[A](a:A):A", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "treereduce\/TreeParallelReduce$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "treereduce\/TreeParallelReduce$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "treereduce\/TreeParallelReduce$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "treereduce\/TreeParallelReduce$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "treereduce\/TreeParallelReduce$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "treereduce\/TreeParallelReduce$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "treereduce\/TreeParallelReduce$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/TreeParallelReduce$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/TreeParallelReduce$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/TreeParallelReduce$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "treereduce\/TreeParallelReduce$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "treereduce\/TreeParallelReduce$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "treereduce\/TreeParallelReduce$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "treereduce\/TreeParallelReduce$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "treereduce\/TreeParallelReduce$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "treereduce\/TreeParallelReduce$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "treereduce\/TreeParallelReduce$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "treereduce\/TreeParallelReduce$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "treereduce\/TreeParallelReduce$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "treereduce.TreeReduce", "shortDescription" : "", "object" : "treereduce\/TreeReduce$.html", "members_object" : [{"label" : "RichReducible", "tail" : "", "member" : "treereduce.TreeReduce.RichReducible", "link" : "treereduce\/TreeReduce$.html#RichReducible[A,M[_]]extendsAnyRef", "kind" : "implicit class"}, {"label" : "treeMapReduceIntern", "tail" : "(m: M[A])(init: B)(seqOp: (A) => B, combOp: (B, B) => B)(reducible: TreeReducible[M]): B", "member" : "treereduce.TreeReduce.treeMapReduceIntern", "link" : "treereduce\/TreeReduce$.html#treeMapReduceIntern[A,B,M[_]](m:M[A])(init:B)(seqOp:A=>B,combOp:(B,B)=>B)(implicitreducible:treereduce.TreeReducible[M]):B", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "treereduce\/TreeReduce$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "treereduce\/TreeReduce$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "treereduce\/TreeReduce$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "treereduce\/TreeReduce$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "treereduce\/TreeReduce$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "treereduce\/TreeReduce$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "treereduce\/TreeReduce$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/TreeReduce$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/TreeReduce$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/TreeReduce$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "treereduce\/TreeReduce$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "treereduce\/TreeReduce$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "treereduce\/TreeReduce$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "treereduce\/TreeReduce$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "treereduce\/TreeReduce$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "treereduce\/TreeReduce$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "treereduce\/TreeReduce$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "treereduce\/TreeReduce$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "treereduce\/TreeReduce$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "treereduce.TreeReducible", "object" : "treereduce\/TreeReducible$.html", "members_object" : [{"label" : "arrayTreeReducible", "tail" : ": TreeReducible[Array]", "member" : "treereduce.TreeReducible.arrayTreeReducible", "link" : "treereduce\/TreeReducible$.html#arrayTreeReducible:treereduce.TreeReducible[Array]", "kind" : "implicit val"}, {"label" : "traversableOnceTreeReducible", "tail" : "(): TreeReducible[T]", "member" : "treereduce.TreeReducible.traversableOnceTreeReducible", "link" : "treereduce\/TreeReducible$.html#traversableOnceTreeReducible[T[X]<:IterableOnce[X]]:treereduce.TreeReducible[T]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "treereduce\/TreeReducible$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "treereduce\/TreeReducible$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "treereduce\/TreeReducible$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "treereduce\/TreeReducible$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "treereduce\/TreeReducible$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "treereduce\/TreeReducible$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "treereduce\/TreeReducible$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/TreeReducible$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/TreeReducible$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/TreeReducible$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "treereduce\/TreeReducible$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "treereduce\/TreeReducible$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "treereduce\/TreeReducible$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "treereduce\/TreeReducible$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "treereduce\/TreeReducible$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "treereduce\/TreeReducible$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "treereduce\/TreeReducible$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "treereduce\/TreeReducible$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "treereduce\/TreeReducible$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "treereduce\/TreeReducible.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "treereduce\/TreeReducible.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "treereduce\/TreeReducible.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "treereduce\/TreeReducible.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "treereduce\/TreeReducible.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "treereduce\/TreeReducible.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "treereduce\/TreeReducible.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "treereduce\/TreeReducible.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/TreeReducible.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/TreeReducible.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "treereduce\/TreeReducible.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "treereduce\/TreeReducible.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "treereduce\/TreeReducible.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "treereduce\/TreeReducible.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "treereduce\/TreeReducible.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "treereduce\/TreeReducible.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "treereduce\/TreeReducible.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "treereduce\/TreeReducible.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "treereduce\/TreeReducible.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "treereduce\/TreeReducible.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "foldLeft", "tail" : "(m: M[A])(z: B)(op: (B, A) => B): B", "member" : "treereduce.TreeReducible.foldLeft", "link" : "treereduce\/TreeReducible.html#foldLeft[A,B](m:M[A])(z:B)(op:(B,A)=>B):B", "kind" : "abstract def"}], "shortDescription" : ""}], "genus" : [{"name" : "genus.ClosedWorldView", "shortDescription" : "", "object" : "genus\/ClosedWorldView$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "genus.WorldView.toString", "link" : "genus\/ClosedWorldView$.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/ClosedWorldView$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/ClosedWorldView$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/ClosedWorldView$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/ClosedWorldView$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/ClosedWorldView$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/ClosedWorldView$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/ClosedWorldView$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/ClosedWorldView$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/ClosedWorldView$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/ClosedWorldView$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/ClosedWorldView$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/ClosedWorldView$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/ClosedWorldView$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/ClosedWorldView$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/ClosedWorldView$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/ClosedWorldView$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/ClosedWorldView$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/ClosedWorldView$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "genus.GenusImplicits", "shortDescription" : "", "object" : "genus\/GenusImplicits$.html", "members_object" : [{"label" : "classToTd", "tail" : "(raw: Class[_]): SimpleTypeD", "member" : "genus.GenusImplicits.classToTd", "link" : "genus\/GenusImplicits$.html#classToTd(raw:Class[_]):genus.SimpleTypeD", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/GenusImplicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/GenusImplicits$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/GenusImplicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/GenusImplicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/GenusImplicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/GenusImplicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/GenusImplicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/GenusImplicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/GenusImplicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/GenusImplicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/GenusImplicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/GenusImplicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "genus\/GenusImplicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/GenusImplicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/GenusImplicits$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/GenusImplicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/GenusImplicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/GenusImplicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/GenusImplicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "genus.NormalForm", "shortDescription" : "", "object" : "genus\/NormalForm$.html", "members_object" : [{"label" : "ValueSet", "tail" : "", "member" : "scala.Enumeration.ValueSet", "link" : "genus\/NormalForm$.html#ValueSetextendsAbstractSet[Enumeration.this.Value]withSortedSet[Enumeration.this.Value]withSortedSetOps[Enumeration.this.Value,scala.collection.immutable.SortedSet,Enumeration.this.ValueSet]withStrictOptimizedIterableOps[Enumeration.this.Value,scala.collection.immutable.Set,Enumeration.this.ValueSet]withSerializable", "kind" : "class"}, {"label" : "ValueOrdering", "tail" : "", "member" : "scala.Enumeration.ValueOrdering", "link" : "genus\/NormalForm$.html#ValueOrdering", "kind" : "implicit object"}, {"label" : "Val", "tail" : "", "member" : "scala.Enumeration.Val", "link" : "genus\/NormalForm$.html#ValextendsEnumeration.this.ValuewithSerializable", "kind" : "class"}, {"label" : "Value", "tail" : "", "member" : "scala.Enumeration.Value", "link" : "genus\/NormalForm$.html#ValueextendsOrdered[Enumeration.this.Value]withSerializable", "kind" : "abstract class"}, {"label" : "Cnf", "tail" : ": Value", "member" : "genus.NormalForm.Cnf", "link" : "genus\/NormalForm$.html#Cnf:genus.NormalForm.Value", "kind" : "val"}, {"label" : "Dnf", "tail" : ": Value", "member" : "genus.NormalForm.Dnf", "link" : "genus\/NormalForm$.html#Dnf:genus.NormalForm.Value", "kind" : "val"}, {"label" : "NormalForm", "tail" : "", "member" : "genus.NormalForm.NormalForm", "link" : "genus\/NormalForm$.html#NormalForm=genus.NormalForm.Value", "kind" : "type"}, {"label" : "Value", "tail" : "(i: Int, name: String): Value", "member" : "scala.Enumeration.Value", "link" : "genus\/NormalForm$.html#Value(i:Int,name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(name: String): Value", "member" : "scala.Enumeration.Value", "link" : "genus\/NormalForm$.html#Value(name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(i: Int): Value", "member" : "scala.Enumeration.Value", "link" : "genus\/NormalForm$.html#Value(i:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(): Value", "member" : "scala.Enumeration.Value", "link" : "genus\/NormalForm$.html#Value:Enumeration.this.Value", "kind" : "final def"}, {"label" : "withName", "tail" : "(s: String): Value", "member" : "scala.Enumeration.withName", "link" : "genus\/NormalForm$.html#withName(s:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "apply", "tail" : "(x: Int): Value", "member" : "scala.Enumeration.apply", "link" : "genus\/NormalForm$.html#apply(x:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "maxId", "tail" : "(): Int", "member" : "scala.Enumeration.maxId", "link" : "genus\/NormalForm$.html#maxId:Int", "kind" : "final def"}, {"label" : "nextName", "tail" : ": Iterator[String]", "member" : "scala.Enumeration.nextName", "link" : "genus\/NormalForm$.html#nextName:Iterator[String]", "kind" : "var"}, {"label" : "nextId", "tail" : ": Int", "member" : "scala.Enumeration.nextId", "link" : "genus\/NormalForm$.html#nextId:Int", "kind" : "var"}, {"label" : "values", "tail" : "(): ValueSet", "member" : "scala.Enumeration.values", "link" : "genus\/NormalForm$.html#values:Enumeration.this.ValueSet", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Enumeration.toString", "link" : "genus\/NormalForm$.html#toString():String", "kind" : "def"}, {"label" : "readResolve", "tail" : "(): AnyRef", "member" : "scala.Enumeration.readResolve", "link" : "genus\/NormalForm$.html#readResolve():AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/NormalForm$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/NormalForm$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/NormalForm$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/NormalForm$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/NormalForm$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/NormalForm$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/NormalForm$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/NormalForm$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/NormalForm$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/NormalForm$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/NormalForm$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/NormalForm$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/NormalForm$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/NormalForm$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/NormalForm$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/NormalForm$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/NormalForm$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/NormalForm$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "genus.OpenWorldView", "shortDescription" : "", "object" : "genus\/OpenWorldView$.html", "members_object" : [{"label" : "toString", "tail" : "(): String", "member" : "genus.WorldView.toString", "link" : "genus\/OpenWorldView$.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/OpenWorldView$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/OpenWorldView$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/OpenWorldView$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/OpenWorldView$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/OpenWorldView$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/OpenWorldView$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/OpenWorldView$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/OpenWorldView$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/OpenWorldView$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/OpenWorldView$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/OpenWorldView$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/OpenWorldView$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/OpenWorldView$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/OpenWorldView$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/OpenWorldView$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/OpenWorldView$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/OpenWorldView$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/OpenWorldView$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "genus.RandomType", "shortDescription" : "", "object" : "genus\/RandomType$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "genus.RandomType.main", "link" : "genus\/RandomType$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "test192", "tail" : "(): Unit", "member" : "genus.RandomType.test192", "link" : "genus\/RandomType$.html#test192():Unit", "kind" : "def"}, {"label" : "test179", "tail" : "(): Unit", "member" : "genus.RandomType.test179", "link" : "genus\/RandomType$.html#test179():Unit", "kind" : "def"}, {"label" : "sanityTest", "tail" : "(): Unit", "member" : "genus.RandomType.sanityTest", "link" : "genus\/RandomType$.html#sanityTest():Unit", "kind" : "def"}, {"label" : "randomType", "tail" : "(depth: Int, avoid: Boolean): SimpleTypeD", "member" : "genus.RandomType.randomType", "link" : "genus\/RandomType$.html#randomType(depth:Int,avoid:Boolean):genus.SimpleTypeD", "kind" : "def"}, {"label" : "randomType", "tail" : "(depth: Int, filter: (SimpleTypeD) => Boolean, avoid: Boolean): SimpleTypeD", "member" : "genus.RandomType.randomType", "link" : "genus\/RandomType$.html#randomType(depth:Int,filter:genus.SimpleTypeD=>Boolean,avoid:Boolean):genus.SimpleTypeD", "kind" : "def"}, {"label" : "randomType", "tail" : "(depth: Int, filter: Option[Boolean]): SimpleTypeD", "member" : "genus.RandomType.randomType", "link" : "genus\/RandomType$.html#randomType(depth:Int,filter:Option[Boolean]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "interestingValues", "tail" : ": Vector[Any]", "member" : "genus.RandomType.interestingValues", "link" : "genus\/RandomType$.html#interestingValues:Vector[Any]", "kind" : "val"}, {"label" : "interestingTypes", "tail" : "(): Vector[SimpleTypeD]", "member" : "genus.RandomType.interestingTypes", "link" : "genus\/RandomType$.html#interestingTypes():Vector[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "evenp", "tail" : "(a: Any): Boolean", "member" : "genus.RandomType.evenp", "link" : "genus\/RandomType$.html#evenp(a:Any):Boolean", "kind" : "def"}, {"label" : "class2type", "tail" : "(c: Class[_]): SimpleTypeD", "member" : "genus.RandomType.class2type", "link" : "genus\/RandomType$.html#class2type(c:Class[_]):genus.SimpleTypeD", "kind" : "implicit def"}, {"label" : "Class2X", "tail" : "", "member" : "genus.RandomType.Class2X", "link" : "genus\/RandomType$.html#Class2XextendsRandomType.Abstract2X", "kind" : "class"}, {"label" : "Class1X", "tail" : "", "member" : "genus.RandomType.Class1X", "link" : "genus\/RandomType$.html#Class1XextendsRandomType.Abstract1X", "kind" : "class"}, {"label" : "Abstract2X", "tail" : "", "member" : "genus.RandomType.Abstract2X", "link" : "genus\/RandomType$.html#Abstract2XextendsRandomType.Trait3X", "kind" : "abstract class"}, {"label" : "Abstract1X", "tail" : "", "member" : "genus.RandomType.Abstract1X", "link" : "genus\/RandomType$.html#Abstract1XextendsAnyRef", "kind" : "abstract class"}, {"label" : "Trait3X", "tail" : "", "member" : "genus.RandomType.Trait3X", "link" : "genus\/RandomType$.html#Trait3XextendsRandomType.Trait2X", "kind" : "trait"}, {"label" : "Trait2X", "tail" : "", "member" : "genus.RandomType.Trait2X", "link" : "genus\/RandomType$.html#Trait2XextendsAnyRef", "kind" : "trait"}, {"label" : "Trait1X", "tail" : "", "member" : "genus.RandomType.Trait1X", "link" : "genus\/RandomType$.html#Trait1XextendsAnyRef", "kind" : "trait"}, {"label" : "ADT3", "tail" : "", "member" : "genus.RandomType.ADT3", "link" : "genus\/RandomType$.html#ADT3extendsRandomType.ADT_abstr", "kind" : "class"}, {"label" : "ADT2", "tail" : "", "member" : "genus.RandomType.ADT2", "link" : "genus\/RandomType$.html#ADT2extendsRandomType.ADT_abstr", "kind" : "class"}, {"label" : "ADT1", "tail" : "", "member" : "genus.RandomType.ADT1", "link" : "genus\/RandomType$.html#ADT1extendsRandomType.ADT_abstr", "kind" : "class"}, {"label" : "ADT_abstr", "tail" : "", "member" : "genus.RandomType.ADT_abstr", "link" : "genus\/RandomType$.html#ADT_abstrextendsAnyRef", "kind" : "sealed abstract class"}, {"label" : "Abstract2", "tail" : "", "member" : "genus.RandomType.Abstract2", "link" : "genus\/RandomType$.html#Abstract2extendsRandomType.Trait3", "kind" : "abstract class"}, {"label" : "Abstract1", "tail" : "", "member" : "genus.RandomType.Abstract1", "link" : "genus\/RandomType$.html#Abstract1extendsAnyRef", "kind" : "abstract class"}, {"label" : "Trait3", "tail" : "", "member" : "genus.RandomType.Trait3", "link" : "genus\/RandomType$.html#Trait3extendsRandomType.Trait2", "kind" : "trait"}, {"label" : "Trait2", "tail" : "", "member" : "genus.RandomType.Trait2", "link" : "genus\/RandomType$.html#Trait2extendsAnyRef", "kind" : "trait"}, {"label" : "Trait1", "tail" : "", "member" : "genus.RandomType.Trait1", "link" : "genus\/RandomType$.html#Trait1extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/RandomType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/RandomType$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/RandomType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/RandomType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/RandomType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/RandomType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/RandomType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/RandomType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/RandomType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/RandomType$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/RandomType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/RandomType$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "genus\/RandomType$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/RandomType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/RandomType$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/RandomType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/RandomType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/RandomType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/RandomType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "genus.SAnd", "shortDescription" : "An intersection type, which is the intersection of zero or more types.", "object" : "genus\/SAnd$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "genus.SAnd.main", "link" : "genus\/SAnd$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "createAnd", "tail" : "(tds: Seq[SimpleTypeD]): SimpleTypeD", "member" : "genus.SAnd.createAnd", "link" : "genus\/SAnd$.html#createAnd(tds:Seq[genus.SimpleTypeD]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SAnd$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SAnd$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SAnd$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SAnd$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SAnd$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SAnd$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SAnd$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SAnd$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SAnd$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SAnd$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SAnd$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SAnd$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "genus\/SAnd$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SAnd$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/SAnd$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/SAnd$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SAnd$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SAnd$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SAnd$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "computeDnf", "tail" : "(): SimpleTypeD", "member" : "genus.SAnd.computeDnf", "link" : "genus\/SAnd.html#computeDnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizeOnce", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SAnd.canonicalizeOnce", "link" : "genus\/SAnd.html#canonicalizeOnce(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion177", "tail" : "(): SimpleTypeD", "member" : "genus.SAnd.conversion177", "link" : "genus\/SAnd.html#conversion177():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversionD3", "tail" : "(): SimpleTypeD", "member" : "genus.SAnd.conversionD3", "link" : "genus\/SAnd.html#conversionD3():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversionD1", "tail" : "(): SimpleTypeD", "member" : "genus.SAnd.conversionD1", "link" : "genus\/SAnd.html#conversionD1():genus.SimpleTypeD", "kind" : "def"}, {"label" : "subtypepDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SAnd.subtypepDown", "link" : "genus\/SAnd.html#subtypepDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "disjointDown", "tail" : "(t2: SimpleTypeD): Option[Boolean]", "member" : "genus.SAnd.disjointDown", "link" : "genus\/SAnd.html#disjointDown(t2:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "inhabitedDown", "tail" : "(): Option[Boolean]", "member" : "genus.SAnd.inhabitedDown", "link" : "genus\/SAnd.html#inhabitedDown:Option[Boolean]", "kind" : "def"}, {"label" : "typep", "tail" : "(a: Any): Boolean", "member" : "genus.SAnd.typep", "link" : "genus\/SAnd.html#typep(a:Any):Boolean", "kind" : "def"}, {"label" : "comboFilter", "tail" : "(seq: Seq[A], f: (A) => Boolean): Seq[A]", "member" : "genus.SAnd.comboFilter", "link" : "genus\/SAnd.html#comboFilter[A](seq:Seq[A],f:A=>Boolean):Seq[A]", "kind" : "def"}, {"label" : "dualCombinator", "tail" : "(a: Seq[A], b: Seq[A]): Seq[A]", "member" : "genus.SAnd.dualCombinator", "link" : "genus\/SAnd.html#dualCombinator[A](a:Seq[A],b:Seq[A]):Seq[A]", "kind" : "def"}, {"label" : "combinator", "tail" : "(a: Seq[A], b: Seq[A]): Seq[A]", "member" : "genus.SAnd.combinator", "link" : "genus\/SAnd.html#combinator[A](a:Seq[A],b:Seq[A]):Seq[A]", "kind" : "def"}, {"label" : "dualCombination", "tail" : "(td: SimpleTypeD): Boolean", "member" : "genus.SAnd.dualCombination", "link" : "genus\/SAnd.html#dualCombination(td:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"label" : "sameCombination", "tail" : "(td: SimpleTypeD): Boolean", "member" : "genus.SAnd.sameCombination", "link" : "genus\/SAnd.html#sameCombination(td:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"label" : "annihilator", "tail" : "(a: SimpleTypeD, b: SimpleTypeD): Option[Boolean]", "member" : "genus.SAnd.annihilator", "link" : "genus\/SAnd.html#annihilator(a:genus.SimpleTypeD,b:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "zero", "tail" : ": SimpleTypeD", "member" : "genus.SAnd.zero", "link" : "genus\/SAnd.html#zero:genus.SimpleTypeD", "kind" : "val"}, {"label" : "unit", "tail" : ": SimpleTypeD", "member" : "genus.SAnd.unit", "link" : "genus\/SAnd.html#unit:genus.SimpleTypeD", "kind" : "val"}, {"label" : "createDual", "tail" : "(tds: Seq[SimpleTypeD]): SimpleTypeD", "member" : "genus.SAnd.createDual", "link" : "genus\/SAnd.html#createDual(tds:Seq[genus.SimpleTypeD]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "create", "tail" : "(tds: Seq[SimpleTypeD]): SimpleTypeD", "member" : "genus.SAnd.create", "link" : "genus\/SAnd.html#create(tds:Seq[genus.SimpleTypeD]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "genus.SAnd.toLaTeX", "link" : "genus\/SAnd.html#toLaTeX():String", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "genus.SAnd.toMachineReadable", "link" : "genus\/SAnd.html#toMachineReadable():String", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "genus.SAnd.toDot", "link" : "genus\/SAnd.html#toDot():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "genus.SAnd.toString", "link" : "genus\/SAnd.html#toString():String", "kind" : "def"}, {"member" : "genus.SAnd#<init>", "error" : "unsupported entity"}, {"label" : "tds", "tail" : ": SimpleTypeD*", "member" : "genus.SAnd.tds", "link" : "genus\/SAnd.html#tds:genus.SimpleTypeD*", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "genus\/SAnd.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "searchReplaceDown", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SCombination.searchReplaceDown", "link" : "genus\/SAnd.html#searchReplaceDown(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "leafTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "genus.SCombination.leafTypes", "link" : "genus\/SAnd.html#leafTypes():Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "computeNf", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.computeNf", "link" : "genus\/SAnd.html#computeNf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "cmpToSameClassObj", "tail" : "(td: SimpleTypeD): Boolean", "member" : "genus.SCombination.cmpToSameClassObj", "link" : "genus\/SAnd.html#cmpToSameClassObj(td:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"label" : "conversion99", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SCombination.conversion99", "link" : "genus\/SAnd.html#conversion99(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion98", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion98", "link" : "genus\/SAnd.html#conversion98():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion17", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion17", "link" : "genus\/SAnd.html#conversion17():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion16", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion16", "link" : "genus\/SAnd.html#conversion16():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion15", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion15", "link" : "genus\/SAnd.html#conversion15():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion14", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion14", "link" : "genus\/SAnd.html#conversion14():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion13", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion13", "link" : "genus\/SAnd.html#conversion13():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion12", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion12", "link" : "genus\/SAnd.html#conversion12():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion11", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion11", "link" : "genus\/SAnd.html#conversion11():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion10", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion10", "link" : "genus\/SAnd.html#conversion10():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion9", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion9", "link" : "genus\/SAnd.html#conversion9():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion8", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion8", "link" : "genus\/SAnd.html#conversion8():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion7", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SCombination.conversion7", "link" : "genus\/SAnd.html#conversion7(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion6", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion6", "link" : "genus\/SAnd.html#conversion6():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion5", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion5", "link" : "genus\/SAnd.html#conversion5():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion4", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion4", "link" : "genus\/SAnd.html#conversion4():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion3", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion3", "link" : "genus\/SAnd.html#conversion3():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion2", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion2", "link" : "genus\/SAnd.html#conversion2():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion1", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion1", "link" : "genus\/SAnd.html#conversion1():genus.SimpleTypeD", "kind" : "def"}, {"label" : "searchReplaceInType", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceInType", "link" : "genus\/SAnd.html#searchReplaceInType(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "typeEquivalent", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.typeEquivalent", "link" : "genus\/SAnd.html#typeEquivalent(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "supertypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.supertypep", "link" : "genus\/SAnd.html#supertypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalize", "link" : "genus\/SAnd.html#canonicalize(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizedHash", "tail" : ": Map[Option[NormalForm], SimpleTypeD]", "member" : "genus.SimpleTypeD.canonicalizedHash", "link" : "genus\/SAnd.html#canonicalizedHash:scala.collection.mutable.Map[Option[genus.NormalForm.NormalForm],genus.SimpleTypeD]", "kind" : "val"}, {"label" : "canonicalizeN", "tail" : "(n: Int, verbose: Boolean, nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalizeN", "link" : "genus\/SAnd.html#canonicalizeN(n:Int,verbose:Boolean,nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toNf", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.toNf", "link" : "genus\/SAnd.html#toNf(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "computeCnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeCnf", "link" : "genus\/SAnd.html#computeCnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toCnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toCnf", "link" : "genus\/SAnd.html#toCnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "toDnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toDnf", "link" : "genus\/SAnd.html#toDnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "subtypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.subtypep", "link" : "genus\/SAnd.html#subtypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownSubtypes", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownSubtypes", "link" : "genus\/SAnd.html#knownSubtypes:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "inhabited", "tail" : ": Option[Boolean]", "member" : "genus.SimpleTypeD.inhabited", "link" : "genus\/SAnd.html#inhabited:Option[Boolean]", "kind" : "lazy val"}, {"label" : "disjoint", "tail" : "(td: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.disjoint", "link" : "genus\/SAnd.html#disjoint(td:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownDisjoint", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownDisjoint", "link" : "genus\/SAnd.html#knownDisjoint:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "^^", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.^^", "link" : "genus\/SAnd.html#^^(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "-", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.-", "link" : "genus\/SAnd.html#-(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.unary_!", "link" : "genus\/SAnd.html#unary_!:genus.SimpleTypeD", "kind" : "def"}, {"label" : "&&", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.&&", "link" : "genus\/SAnd.html#&&(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "||", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.||", "link" : "genus\/SAnd.html#||(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SAnd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SAnd.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SAnd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SAnd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SAnd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SAnd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SAnd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SAnd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SAnd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SAnd.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SAnd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SAnd.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SAnd.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SAnd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SAnd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SAnd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "genus\/SAnd.html", "kind" : "case class"}, {"name" : "genus.SanityCheck", "shortDescription" : "", "object" : "genus\/SanityCheck$.html", "members_object" : [{"label" : "makeNumber", "tail" : "(): Unit", "member" : "genus.SanityCheck.makeNumber", "link" : "genus\/SanityCheck$.html#makeNumber():Unit", "kind" : "def"}, {"label" : "describeSubclasses", "tail" : "(cl: Class[_]): Unit", "member" : "genus.SanityCheck.describeSubclasses", "link" : "genus\/SanityCheck$.html#describeSubclasses(cl:Class[_]):Unit", "kind" : "def"}, {"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "genus.SanityCheck.main", "link" : "genus\/SanityCheck$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "reflect", "tail" : ": Reflections", "member" : "genus.SanityCheck.reflect", "link" : "genus\/SanityCheck$.html#reflect:org.reflections.Reflections", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SanityCheck$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SanityCheck$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SanityCheck$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SanityCheck$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SanityCheck$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SanityCheck$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SanityCheck$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SanityCheck$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SanityCheck$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SanityCheck$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SanityCheck$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SanityCheck$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "genus\/SanityCheck$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SanityCheck$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/SanityCheck$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/SanityCheck$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SanityCheck$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SanityCheck$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SanityCheck$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "genus.SAtomic", "shortDescription" : "The atoms of our type system: a simple type built from a native Scala\/Java type.", "object" : "genus\/SAtomic$.html", "members_object" : [{"label" : "reflections", "tail" : ": Reflections", "member" : "genus.SAtomic.reflections", "link" : "genus\/SAtomic$.html#reflections:org.reflections.Reflections", "kind" : "val"}, {"label" : "isInstantiatable", "tail" : "(cl: Class[_]): Boolean", "member" : "genus.SAtomic.isInstantiatable", "link" : "genus\/SAtomic$.html#isInstantiatable(cl:Class[_]):Boolean", "kind" : "def"}, {"label" : "isInterface", "tail" : "(cl: Class[_]): Boolean", "member" : "genus.SAtomic.isInterface", "link" : "genus\/SAtomic$.html#isInterface(cl:Class[_]):Boolean", "kind" : "def"}, {"label" : "isAbstract", "tail" : "(cl: Class[_]): Boolean", "member" : "genus.SAtomic.isAbstract", "link" : "genus\/SAtomic$.html#isAbstract(cl:Class[_]):Boolean", "kind" : "def"}, {"label" : "isFinal", "tail" : "(cl: Class[_]): Boolean", "member" : "genus.SAtomic.isFinal", "link" : "genus\/SAtomic$.html#isFinal(cl:Class[_]):Boolean", "kind" : "def"}, {"label" : "existsCommonInstantiatableSubclass", "tail" : "(c1: Class[_], c2: Class[_]): Boolean", "member" : "genus.SAtomic.existsCommonInstantiatableSubclass", "link" : "genus\/SAtomic$.html#existsCommonInstantiatableSubclass(c1:Class[_],c2:Class[_]):Boolean", "kind" : "def"}, {"label" : "existsInstantiatableSubclass", "tail" : "(cl: Class[_]): Boolean", "member" : "genus.SAtomic.existsInstantiatableSubclass", "link" : "genus\/SAtomic$.html#existsInstantiatableSubclass(cl:Class[_]):Boolean", "kind" : "def"}, {"label" : "instantiatableSubclasses", "tail" : "(cl: Class[_]): Array[Class[_]]", "member" : "genus.SAtomic.instantiatableSubclasses", "link" : "genus\/SAtomic$.html#instantiatableSubclasses(cl:Class[_]):Array[Class[_]]", "kind" : "def"}, {"label" : "withWorldView", "tail" : "(wv: WorldView, code: => T): T", "member" : "genus.SAtomic.withWorldView", "link" : "genus\/SAtomic$.html#withWorldView[T](wv:genus.WorldView,code:=>T):T", "kind" : "def"}, {"label" : "withClosedWorldView", "tail" : "(code: => T): T", "member" : "genus.SAtomic.withClosedWorldView", "link" : "genus\/SAtomic$.html#withClosedWorldView[T](code:=>T):T", "kind" : "def"}, {"label" : "withOpenWorldView", "tail" : "(code: => T): T", "member" : "genus.SAtomic.withOpenWorldView", "link" : "genus\/SAtomic$.html#withOpenWorldView[T](code:=>T):T", "kind" : "def"}, {"label" : "getWorldView", "tail" : "(): WorldView", "member" : "genus.SAtomic.getWorldView", "link" : "genus\/SAtomic$.html#getWorldView():genus.WorldView", "kind" : "def"}, {"label" : "worldView", "tail" : ": DynamicVariable[WorldView]", "member" : "genus.SAtomic.worldView", "link" : "genus\/SAtomic$.html#worldView:scala.util.DynamicVariable[genus.WorldView]", "kind" : "val"}, {"label" : "apply", "tail" : "(ct: Class[_]): SimpleTypeD", "member" : "genus.SAtomic.apply", "link" : "genus\/SAtomic$.html#apply(ct:Class[_]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "knownSAtomics", "tail" : ": Map[(WorldView, Class[_]), SAtomic]", "member" : "genus.SAtomic.knownSAtomics", "link" : "genus\/SAtomic$.html#knownSAtomics:scala.collection.mutable.Map[(genus.WorldView,Class[_]),genus.SAtomic]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SAtomic$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SAtomic$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SAtomic$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SAtomic$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SAtomic$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SAtomic$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SAtomic$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SAtomic$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SAtomic$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SAtomic$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SAtomic$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SAtomic$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "genus\/SAtomic$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SAtomic$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/SAtomic$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/SAtomic$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SAtomic$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SAtomic$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SAtomic$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "cmpToSameClassObj", "tail" : "(td: SimpleTypeD): Boolean", "member" : "genus.SAtomic.cmpToSameClassObj", "link" : "genus\/SAtomic.html#cmpToSameClassObj(td:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"label" : "canonicalizeOnce", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SAtomic.canonicalizeOnce", "link" : "genus\/SAtomic.html#canonicalizeOnce(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "subtypepDown", "tail" : "(s: SimpleTypeD): Option[Boolean]", "member" : "genus.SAtomic.subtypepDown", "link" : "genus\/SAtomic.html#subtypepDown(s:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "disjointDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SAtomic.disjointDown", "link" : "genus\/SAtomic.html#disjointDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "inhabitedDown", "tail" : "(): Some[Boolean]", "member" : "genus.SAtomic.inhabitedDown", "link" : "genus\/SAtomic.html#inhabitedDown:Some[Boolean]", "kind" : "def"}, {"label" : "typep", "tail" : "(a: Any): Boolean", "member" : "genus.SAtomic.typep", "link" : "genus\/SAtomic.html#typep(a:Any):Boolean", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "genus.SAtomic.toMachineReadable", "link" : "genus\/SAtomic.html#toMachineReadable():String", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "genus.SAtomic.toLaTeX", "link" : "genus\/SAtomic.html#toLaTeX():String", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "genus.SAtomic.toDot", "link" : "genus\/SAtomic.html#toDot():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "genus.SAtomic.toString", "link" : "genus\/SAtomic.html#toString():String", "kind" : "def"}, {"label" : "shortTypeName", "tail" : "(): String", "member" : "genus.SAtomic.shortTypeName", "link" : "genus\/SAtomic.html#shortTypeName():String", "kind" : "def"}, {"label" : "wv", "tail" : ": WorldView", "member" : "genus.SAtomic.wv", "link" : "genus\/SAtomic.html#wv:genus.WorldView", "kind" : "val"}, {"member" : "genus.SAtomic#<init>", "error" : "unsupported entity"}, {"label" : "ct", "tail" : ": Class[_]", "member" : "genus.SAtomic.ct", "link" : "genus\/SAtomic.html#ct:Class[_]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "genus\/SAtomic.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "searchReplaceDown", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceDown", "link" : "genus\/SAtomic.html#searchReplaceDown(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "searchReplaceInType", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceInType", "link" : "genus\/SAtomic.html#searchReplaceInType(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "leafTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "genus.SimpleTypeD.leafTypes", "link" : "genus\/SAtomic.html#leafTypes():Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "typeEquivalent", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.typeEquivalent", "link" : "genus\/SAtomic.html#typeEquivalent(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "supertypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.supertypep", "link" : "genus\/SAtomic.html#supertypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalize", "link" : "genus\/SAtomic.html#canonicalize(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizedHash", "tail" : ": Map[Option[NormalForm], SimpleTypeD]", "member" : "genus.SimpleTypeD.canonicalizedHash", "link" : "genus\/SAtomic.html#canonicalizedHash:scala.collection.mutable.Map[Option[genus.NormalForm.NormalForm],genus.SimpleTypeD]", "kind" : "val"}, {"label" : "canonicalizeN", "tail" : "(n: Int, verbose: Boolean, nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalizeN", "link" : "genus\/SAtomic.html#canonicalizeN(n:Int,verbose:Boolean,nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toNf", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.toNf", "link" : "genus\/SAtomic.html#toNf(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "computeCnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeCnf", "link" : "genus\/SAtomic.html#computeCnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toCnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toCnf", "link" : "genus\/SAtomic.html#toCnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "computeDnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeDnf", "link" : "genus\/SAtomic.html#computeDnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toDnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toDnf", "link" : "genus\/SAtomic.html#toDnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "subtypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.subtypep", "link" : "genus\/SAtomic.html#subtypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownSubtypes", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownSubtypes", "link" : "genus\/SAtomic.html#knownSubtypes:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "inhabited", "tail" : ": Option[Boolean]", "member" : "genus.SimpleTypeD.inhabited", "link" : "genus\/SAtomic.html#inhabited:Option[Boolean]", "kind" : "lazy val"}, {"label" : "disjoint", "tail" : "(td: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.disjoint", "link" : "genus\/SAtomic.html#disjoint(td:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownDisjoint", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownDisjoint", "link" : "genus\/SAtomic.html#knownDisjoint:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "^^", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.^^", "link" : "genus\/SAtomic.html#^^(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "-", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.-", "link" : "genus\/SAtomic.html#-(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.unary_!", "link" : "genus\/SAtomic.html#unary_!:genus.SimpleTypeD", "kind" : "def"}, {"label" : "&&", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.&&", "link" : "genus\/SAtomic.html#&&(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "||", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.||", "link" : "genus\/SAtomic.html#||(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SAtomic.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SAtomic.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SAtomic.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SAtomic.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SAtomic.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SAtomic.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SAtomic.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SAtomic.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SAtomic.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SAtomic.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SAtomic.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SAtomic.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SAtomic.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SAtomic.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SAtomic.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SAtomic.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "genus\/SAtomic.html", "kind" : "case class"}, {"name" : "genus.SAtomicTest", "shortDescription" : "", "object" : "genus\/SAtomicTest$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "genus.SAtomicTest.main", "link" : "genus\/SAtomicTest$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SAtomicTest$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SAtomicTest$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SAtomicTest$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SAtomicTest$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SAtomicTest$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SAtomicTest$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SAtomicTest$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SAtomicTest$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SAtomicTest$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SAtomicTest$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SAtomicTest$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SAtomicTest$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "genus\/SAtomicTest$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SAtomicTest$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/SAtomicTest$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/SAtomicTest$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SAtomicTest$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SAtomicTest$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SAtomicTest$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "genus.SCombination", "shortDescription" : "", "members_class" : [{"label" : "searchReplaceDown", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SCombination.searchReplaceDown", "link" : "genus\/SCombination.html#searchReplaceDown(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "leafTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "genus.SCombination.leafTypes", "link" : "genus\/SCombination.html#leafTypes():Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "computeNf", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.computeNf", "link" : "genus\/SCombination.html#computeNf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "cmpToSameClassObj", "tail" : "(td: SimpleTypeD): Boolean", "member" : "genus.SCombination.cmpToSameClassObj", "link" : "genus\/SCombination.html#cmpToSameClassObj(td:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"label" : "canonicalizeOnce", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SCombination.canonicalizeOnce", "link" : "genus\/SCombination.html#canonicalizeOnce(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion99", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SCombination.conversion99", "link" : "genus\/SCombination.html#conversion99(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion98", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion98", "link" : "genus\/SCombination.html#conversion98():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion17", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion17", "link" : "genus\/SCombination.html#conversion17():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion16", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion16", "link" : "genus\/SCombination.html#conversion16():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion15", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion15", "link" : "genus\/SCombination.html#conversion15():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion14", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion14", "link" : "genus\/SCombination.html#conversion14():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion13", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion13", "link" : "genus\/SCombination.html#conversion13():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion12", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion12", "link" : "genus\/SCombination.html#conversion12():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion11", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion11", "link" : "genus\/SCombination.html#conversion11():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion10", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion10", "link" : "genus\/SCombination.html#conversion10():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion9", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion9", "link" : "genus\/SCombination.html#conversion9():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion8", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion8", "link" : "genus\/SCombination.html#conversion8():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion7", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SCombination.conversion7", "link" : "genus\/SCombination.html#conversion7(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion6", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion6", "link" : "genus\/SCombination.html#conversion6():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion5", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion5", "link" : "genus\/SCombination.html#conversion5():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion4", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion4", "link" : "genus\/SCombination.html#conversion4():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion3", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion3", "link" : "genus\/SCombination.html#conversion3():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion2", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion2", "link" : "genus\/SCombination.html#conversion2():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion1", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion1", "link" : "genus\/SCombination.html#conversion1():genus.SimpleTypeD", "kind" : "def"}, {"label" : "dualCombination", "tail" : "(td: SimpleTypeD): Boolean", "member" : "genus.SCombination.dualCombination", "link" : "genus\/SCombination.html#dualCombination(td:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"label" : "sameCombination", "tail" : "(td: SimpleTypeD): Boolean", "member" : "genus.SCombination.sameCombination", "link" : "genus\/SCombination.html#sameCombination(td:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"member" : "genus.SCombination#<init>", "error" : "unsupported entity"}, {"label" : "tds", "tail" : ": SimpleTypeD*", "member" : "genus.SCombination.tds", "link" : "genus\/SCombination.html#tds:genus.SimpleTypeD*", "kind" : "val"}, {"label" : "searchReplaceInType", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceInType", "link" : "genus\/SCombination.html#searchReplaceInType(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "typeEquivalent", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.typeEquivalent", "link" : "genus\/SCombination.html#typeEquivalent(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "supertypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.supertypep", "link" : "genus\/SCombination.html#supertypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalize", "link" : "genus\/SCombination.html#canonicalize(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizedHash", "tail" : ": Map[Option[NormalForm], SimpleTypeD]", "member" : "genus.SimpleTypeD.canonicalizedHash", "link" : "genus\/SCombination.html#canonicalizedHash:scala.collection.mutable.Map[Option[genus.NormalForm.NormalForm],genus.SimpleTypeD]", "kind" : "val"}, {"label" : "canonicalizeN", "tail" : "(n: Int, verbose: Boolean, nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalizeN", "link" : "genus\/SCombination.html#canonicalizeN(n:Int,verbose:Boolean,nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toNf", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.toNf", "link" : "genus\/SCombination.html#toNf(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "computeCnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeCnf", "link" : "genus\/SCombination.html#computeCnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toCnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toCnf", "link" : "genus\/SCombination.html#toCnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "computeDnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeDnf", "link" : "genus\/SCombination.html#computeDnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toDnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toDnf", "link" : "genus\/SCombination.html#toDnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "subtypepDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.subtypepDown", "link" : "genus\/SCombination.html#subtypepDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "subtypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.subtypep", "link" : "genus\/SCombination.html#subtypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownSubtypes", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownSubtypes", "link" : "genus\/SCombination.html#knownSubtypes:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "disjointDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.disjointDown", "link" : "genus\/SCombination.html#disjointDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "inhabited", "tail" : ": Option[Boolean]", "member" : "genus.SimpleTypeD.inhabited", "link" : "genus\/SCombination.html#inhabited:Option[Boolean]", "kind" : "lazy val"}, {"label" : "inhabitedDown", "tail" : "(): Option[Boolean]", "member" : "genus.SimpleTypeD.inhabitedDown", "link" : "genus\/SCombination.html#inhabitedDown:Option[Boolean]", "kind" : "def"}, {"label" : "disjoint", "tail" : "(td: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.disjoint", "link" : "genus\/SCombination.html#disjoint(td:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownDisjoint", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownDisjoint", "link" : "genus\/SCombination.html#knownDisjoint:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "^^", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.^^", "link" : "genus\/SCombination.html#^^(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "-", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.-", "link" : "genus\/SCombination.html#-(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.unary_!", "link" : "genus\/SCombination.html#unary_!:genus.SimpleTypeD", "kind" : "def"}, {"label" : "&&", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.&&", "link" : "genus\/SCombination.html#&&(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "||", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.||", "link" : "genus\/SCombination.html#||(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "genus.SimpleTypeD.toLaTeX", "link" : "genus\/SCombination.html#toLaTeX():String", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "genus.SimpleTypeD.toDot", "link" : "genus\/SCombination.html#toDot():String", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "genus.SimpleTypeD.toMachineReadable", "link" : "genus\/SCombination.html#toMachineReadable():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SCombination.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SCombination.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SCombination.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SCombination.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SCombination.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SCombination.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SCombination.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SCombination.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SCombination.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SCombination.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SCombination.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SCombination.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "genus\/SCombination.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SCombination.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/SCombination.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/SCombination.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SCombination.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SCombination.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SCombination.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "conversion177", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion177", "link" : "genus\/SCombination.html#conversion177():genus.SimpleTypeD", "kind" : "abstract def"}, {"label" : "conversionD3", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversionD3", "link" : "genus\/SCombination.html#conversionD3():genus.SimpleTypeD", "kind" : "abstract def"}, {"label" : "conversionD1", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversionD1", "link" : "genus\/SCombination.html#conversionD1():genus.SimpleTypeD", "kind" : "abstract def"}, {"label" : "comboFilter", "tail" : "(seq: Seq[A], f: (A) => Boolean): Seq[A]", "member" : "genus.SCombination.comboFilter", "link" : "genus\/SCombination.html#comboFilter[A](seq:Seq[A],f:A=>Boolean):Seq[A]", "kind" : "abstract def"}, {"label" : "dualCombinator", "tail" : "(a: Seq[A], b: Seq[A]): Seq[A]", "member" : "genus.SCombination.dualCombinator", "link" : "genus\/SCombination.html#dualCombinator[A](a:Seq[A],b:Seq[A]):Seq[A]", "kind" : "abstract def"}, {"label" : "combinator", "tail" : "(a: Seq[A], b: Seq[A]): Seq[A]", "member" : "genus.SCombination.combinator", "link" : "genus\/SCombination.html#combinator[A](a:Seq[A],b:Seq[A]):Seq[A]", "kind" : "abstract def"}, {"label" : "annihilator", "tail" : "(a: SimpleTypeD, b: SimpleTypeD): Option[Boolean]", "member" : "genus.SCombination.annihilator", "link" : "genus\/SCombination.html#annihilator(a:genus.SimpleTypeD,b:genus.SimpleTypeD):Option[Boolean]", "kind" : "abstract def"}, {"label" : "zero", "tail" : ": SimpleTypeD", "member" : "genus.SCombination.zero", "link" : "genus\/SCombination.html#zero:genus.SimpleTypeD", "kind" : "abstract val"}, {"label" : "unit", "tail" : ": SimpleTypeD", "member" : "genus.SCombination.unit", "link" : "genus\/SCombination.html#unit:genus.SimpleTypeD", "kind" : "abstract val"}, {"label" : "createDual", "tail" : "(tds: Seq[SimpleTypeD]): SimpleTypeD", "member" : "genus.SCombination.createDual", "link" : "genus\/SCombination.html#createDual(tds:Seq[genus.SimpleTypeD]):genus.SimpleTypeD", "kind" : "abstract def"}, {"label" : "create", "tail" : "(tds: Seq[SimpleTypeD]): SimpleTypeD", "member" : "genus.SCombination.create", "link" : "genus\/SCombination.html#create(tds:Seq[genus.SimpleTypeD]):genus.SimpleTypeD", "kind" : "abstract def"}, {"label" : "typep", "tail" : "(a: Any): Boolean", "member" : "genus.SimpleTypeD.typep", "link" : "genus\/SCombination.html#typep(a:Any):Boolean", "kind" : "abstract def"}], "class" : "genus\/SCombination.html", "kind" : "class"}, {"name" : "genus.SDouble", "shortDescription" : "", "object" : "genus\/SDouble$.html", "members_object" : [{"label" : "cmpToSameClassObj", "tail" : "(t: SimpleTypeD): Boolean", "member" : "genus.SSatisfies.cmpToSameClassObj", "link" : "genus\/SDouble$.html#cmpToSameClassObj(t:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"label" : "subtypepDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SSatisfies.subtypepDown", "link" : "genus\/SDouble$.html#subtypepDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "inhabitedDown", "tail" : "(): Option[Boolean]", "member" : "genus.SSatisfies.inhabitedDown", "link" : "genus\/SDouble$.html#inhabitedDown:Option[Boolean]", "kind" : "def"}, {"label" : "disjointDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SSatisfies.disjointDown", "link" : "genus\/SDouble$.html#disjointDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "genus.SSatisfies.toDot", "link" : "genus\/SDouble$.html#toDot():String", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "genus.SSatisfies.toMachineReadable", "link" : "genus\/SDouble$.html#toMachineReadable():String", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "genus.SSatisfies.toLaTeX", "link" : "genus\/SDouble$.html#toLaTeX():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "genus.SSatisfies.toString", "link" : "genus\/SDouble$.html#toString():String", "kind" : "def"}, {"label" : "typep", "tail" : "(a: Any): Boolean", "member" : "genus.SSatisfies.typep", "link" : "genus\/SDouble$.html#typep(a:Any):Boolean", "kind" : "def"}, {"label" : "printable", "tail" : ": String", "member" : "genus.SSatisfies.printable", "link" : "genus\/SDouble$.html#printable:String", "kind" : "val"}, {"label" : "f", "tail" : ": (Any) => Boolean", "member" : "genus.SSatisfies.f", "link" : "genus\/SDouble$.html#f:Any=>Boolean", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "genus\/SDouble$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "searchReplaceDown", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceDown", "link" : "genus\/SDouble$.html#searchReplaceDown(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "searchReplaceInType", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceInType", "link" : "genus\/SDouble$.html#searchReplaceInType(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "leafTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "genus.SimpleTypeD.leafTypes", "link" : "genus\/SDouble$.html#leafTypes():Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "typeEquivalent", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.typeEquivalent", "link" : "genus\/SDouble$.html#typeEquivalent(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "supertypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.supertypep", "link" : "genus\/SDouble$.html#supertypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalize", "link" : "genus\/SDouble$.html#canonicalize(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizedHash", "tail" : ": Map[Option[NormalForm], SimpleTypeD]", "member" : "genus.SimpleTypeD.canonicalizedHash", "link" : "genus\/SDouble$.html#canonicalizedHash:scala.collection.mutable.Map[Option[genus.NormalForm.NormalForm],genus.SimpleTypeD]", "kind" : "val"}, {"label" : "canonicalizeOnce", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalizeOnce", "link" : "genus\/SDouble$.html#canonicalizeOnce(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizeN", "tail" : "(n: Int, verbose: Boolean, nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalizeN", "link" : "genus\/SDouble$.html#canonicalizeN(n:Int,verbose:Boolean,nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toNf", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.toNf", "link" : "genus\/SDouble$.html#toNf(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "computeCnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeCnf", "link" : "genus\/SDouble$.html#computeCnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toCnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toCnf", "link" : "genus\/SDouble$.html#toCnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "computeDnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeDnf", "link" : "genus\/SDouble$.html#computeDnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toDnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toDnf", "link" : "genus\/SDouble$.html#toDnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "subtypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.subtypep", "link" : "genus\/SDouble$.html#subtypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownSubtypes", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownSubtypes", "link" : "genus\/SDouble$.html#knownSubtypes:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "inhabited", "tail" : ": Option[Boolean]", "member" : "genus.SimpleTypeD.inhabited", "link" : "genus\/SDouble$.html#inhabited:Option[Boolean]", "kind" : "lazy val"}, {"label" : "disjoint", "tail" : "(td: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.disjoint", "link" : "genus\/SDouble$.html#disjoint(td:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownDisjoint", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownDisjoint", "link" : "genus\/SDouble$.html#knownDisjoint:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "^^", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.^^", "link" : "genus\/SDouble$.html#^^(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "-", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.-", "link" : "genus\/SDouble$.html#-(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.unary_!", "link" : "genus\/SDouble$.html#unary_!:genus.SimpleTypeD", "kind" : "def"}, {"label" : "&&", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.&&", "link" : "genus\/SDouble$.html#&&(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "||", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.||", "link" : "genus\/SDouble$.html#||(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SDouble$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SDouble$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SDouble$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SDouble$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SDouble$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SDouble$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SDouble$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SDouble$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SDouble$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SDouble$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SDouble$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SDouble$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SDouble$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SDouble$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SDouble$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SDouble$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "genus.SEmpty", "shortDescription" : "The empty type, subtype of all types.", "object" : "genus\/SEmpty$.html", "members_object" : [{"label" : "cmpToSameClassObj", "tail" : "(t: SimpleTypeD): Boolean", "member" : "genus.SEmpty.cmpToSameClassObj", "link" : "genus\/SEmpty$.html#cmpToSameClassObj(t:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"label" : "subtypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SEmpty.subtypep", "link" : "genus\/SEmpty$.html#subtypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "disjointDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SEmpty.disjointDown", "link" : "genus\/SEmpty$.html#disjointDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "inhabitedDown", "tail" : "(): Some[Boolean]", "member" : "genus.SEmpty.inhabitedDown", "link" : "genus\/SEmpty$.html#inhabitedDown:Some[Boolean]", "kind" : "def"}, {"label" : "typep", "tail" : "(a: Any): Boolean", "member" : "genus.SEmpty.typep", "link" : "genus\/SEmpty$.html#typep(a:Any):Boolean", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "genus.SEmpty.toMachineReadable", "link" : "genus\/SEmpty$.html#toMachineReadable():String", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "genus.SEmpty.toLaTeX", "link" : "genus\/SEmpty$.html#toLaTeX():String", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "genus.SEmpty.toDot", "link" : "genus\/SEmpty$.html#toDot():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "genus.SEmpty.toString", "link" : "genus\/SEmpty$.html#toString():String", "kind" : "def"}, {"label" : "searchReplaceDown", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceDown", "link" : "genus\/SEmpty$.html#searchReplaceDown(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "searchReplaceInType", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceInType", "link" : "genus\/SEmpty$.html#searchReplaceInType(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "leafTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "genus.SimpleTypeD.leafTypes", "link" : "genus\/SEmpty$.html#leafTypes():Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "typeEquivalent", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.typeEquivalent", "link" : "genus\/SEmpty$.html#typeEquivalent(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "supertypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.supertypep", "link" : "genus\/SEmpty$.html#supertypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalize", "link" : "genus\/SEmpty$.html#canonicalize(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizedHash", "tail" : ": Map[Option[NormalForm], SimpleTypeD]", "member" : "genus.SimpleTypeD.canonicalizedHash", "link" : "genus\/SEmpty$.html#canonicalizedHash:scala.collection.mutable.Map[Option[genus.NormalForm.NormalForm],genus.SimpleTypeD]", "kind" : "val"}, {"label" : "canonicalizeOnce", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalizeOnce", "link" : "genus\/SEmpty$.html#canonicalizeOnce(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizeN", "tail" : "(n: Int, verbose: Boolean, nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalizeN", "link" : "genus\/SEmpty$.html#canonicalizeN(n:Int,verbose:Boolean,nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toNf", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.toNf", "link" : "genus\/SEmpty$.html#toNf(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "computeCnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeCnf", "link" : "genus\/SEmpty$.html#computeCnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toCnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toCnf", "link" : "genus\/SEmpty$.html#toCnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "computeDnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeDnf", "link" : "genus\/SEmpty$.html#computeDnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toDnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toDnf", "link" : "genus\/SEmpty$.html#toDnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "subtypepDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.subtypepDown", "link" : "genus\/SEmpty$.html#subtypepDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownSubtypes", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownSubtypes", "link" : "genus\/SEmpty$.html#knownSubtypes:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "inhabited", "tail" : ": Option[Boolean]", "member" : "genus.SimpleTypeD.inhabited", "link" : "genus\/SEmpty$.html#inhabited:Option[Boolean]", "kind" : "lazy val"}, {"label" : "disjoint", "tail" : "(td: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.disjoint", "link" : "genus\/SEmpty$.html#disjoint(td:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownDisjoint", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownDisjoint", "link" : "genus\/SEmpty$.html#knownDisjoint:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "^^", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.^^", "link" : "genus\/SEmpty$.html#^^(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "-", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.-", "link" : "genus\/SEmpty$.html#-(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.unary_!", "link" : "genus\/SEmpty$.html#unary_!:genus.SimpleTypeD", "kind" : "def"}, {"label" : "&&", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.&&", "link" : "genus\/SEmpty$.html#&&(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "||", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.||", "link" : "genus\/SEmpty$.html#||(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SEmpty$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SEmpty$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SEmpty$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SEmpty$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SEmpty$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SEmpty$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SEmpty$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SEmpty$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SEmpty$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SEmpty$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SEmpty$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SEmpty$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SEmpty$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/SEmpty$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/SEmpty$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SEmpty$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SEmpty$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SEmpty$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "genus.SEql", "shortDescription" : "The equal type, a type which is equal to a given object.", "object" : "genus\/SEql$.html", "members_object" : [{"label" : "apply", "tail" : "(a: Any): SimpleTypeD", "member" : "genus.SEql.apply", "link" : "genus\/SEql$.html#apply(a:Any):genus.SimpleTypeD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SEql$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SEql$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SEql$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SEql$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SEql$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SEql$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SEql$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SEql$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SEql$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SEql$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SEql$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SEql$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "genus\/SEql$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SEql$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/SEql$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/SEql$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SEql$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SEql$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SEql$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "cmpToSameClassObj", "tail" : "(t: SimpleTypeD): Boolean", "member" : "genus.SEql.cmpToSameClassObj", "link" : "genus\/SEql.html#cmpToSameClassObj(t:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"label" : "subtypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SEql.subtypep", "link" : "genus\/SEql.html#subtypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "disjointDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SEql.disjointDown", "link" : "genus\/SEql.html#disjointDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "inhabitedDown", "tail" : "(): Option[Boolean]", "member" : "genus.SEql.inhabitedDown", "link" : "genus\/SEql.html#inhabitedDown:Option[Boolean]", "kind" : "def"}, {"label" : "typep", "tail" : "(b: Any): Boolean", "member" : "genus.SEql.typep", "link" : "genus\/SEql.html#typep(b:Any):Boolean", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "genus.SEql.toDot", "link" : "genus\/SEql.html#toDot():String", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "genus.SEql.toLaTeX", "link" : "genus\/SEql.html#toLaTeX():String", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "genus.SEql.toMachineReadable", "link" : "genus\/SEql.html#toMachineReadable():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "genus.SEql.toString", "link" : "genus\/SEql.html#toString():String", "kind" : "def"}, {"member" : "genus.SEql#<init>", "error" : "unsupported entity"}, {"label" : "a", "tail" : ": (SimpleTypeD, Any)", "member" : "genus.SEql.a", "link" : "genus\/SEql.html#a:(genus.SimpleTypeD,Any)", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "genus\/SEql.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "leafTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "genus.SMemberImpl.leafTypes", "link" : "genus\/SEql.html#leafTypes():Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "canonicalizeOnce", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SMemberImpl.canonicalizeOnce", "link" : "genus\/SEql.html#canonicalizeOnce(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "xs", "tail" : ": Vector[(SimpleTypeD, Any)]", "member" : "genus.SMemberImpl.xs", "link" : "genus\/SEql.html#xs:Vector[(genus.SimpleTypeD,Any)]", "kind" : "val"}, {"label" : "searchReplaceDown", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceDown", "link" : "genus\/SEql.html#searchReplaceDown(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "searchReplaceInType", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceInType", "link" : "genus\/SEql.html#searchReplaceInType(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "typeEquivalent", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.typeEquivalent", "link" : "genus\/SEql.html#typeEquivalent(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "supertypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.supertypep", "link" : "genus\/SEql.html#supertypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalize", "link" : "genus\/SEql.html#canonicalize(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizedHash", "tail" : ": Map[Option[NormalForm], SimpleTypeD]", "member" : "genus.SimpleTypeD.canonicalizedHash", "link" : "genus\/SEql.html#canonicalizedHash:scala.collection.mutable.Map[Option[genus.NormalForm.NormalForm],genus.SimpleTypeD]", "kind" : "val"}, {"label" : "canonicalizeN", "tail" : "(n: Int, verbose: Boolean, nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalizeN", "link" : "genus\/SEql.html#canonicalizeN(n:Int,verbose:Boolean,nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toNf", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.toNf", "link" : "genus\/SEql.html#toNf(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "computeCnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeCnf", "link" : "genus\/SEql.html#computeCnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toCnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toCnf", "link" : "genus\/SEql.html#toCnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "computeDnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeDnf", "link" : "genus\/SEql.html#computeDnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toDnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toDnf", "link" : "genus\/SEql.html#toDnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "subtypepDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.subtypepDown", "link" : "genus\/SEql.html#subtypepDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownSubtypes", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownSubtypes", "link" : "genus\/SEql.html#knownSubtypes:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "inhabited", "tail" : ": Option[Boolean]", "member" : "genus.SimpleTypeD.inhabited", "link" : "genus\/SEql.html#inhabited:Option[Boolean]", "kind" : "lazy val"}, {"label" : "disjoint", "tail" : "(td: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.disjoint", "link" : "genus\/SEql.html#disjoint(td:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownDisjoint", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownDisjoint", "link" : "genus\/SEql.html#knownDisjoint:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "^^", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.^^", "link" : "genus\/SEql.html#^^(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "-", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.-", "link" : "genus\/SEql.html#-(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.unary_!", "link" : "genus\/SEql.html#unary_!:genus.SimpleTypeD", "kind" : "def"}, {"label" : "&&", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.&&", "link" : "genus\/SEql.html#&&(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "||", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.||", "link" : "genus\/SEql.html#||(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SEql.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SEql.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SEql.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SEql.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SEql.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SEql.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SEql.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SEql.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SEql.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SEql.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SEql.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SEql.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SEql.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SEql.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SEql.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SEql.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "genus\/SEql.html", "kind" : "case class"}, {"name" : "genus.SimpleTypeD", "shortDescription" : "A general type of our type system.", "members_class" : [{"label" : "searchReplaceDown", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceDown", "link" : "genus\/SimpleTypeD.html#searchReplaceDown(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "searchReplaceInType", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceInType", "link" : "genus\/SimpleTypeD.html#searchReplaceInType(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "leafTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "genus.SimpleTypeD.leafTypes", "link" : "genus\/SimpleTypeD.html#leafTypes():Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "typeEquivalent", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.typeEquivalent", "link" : "genus\/SimpleTypeD.html#typeEquivalent(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "cmpToSameClassObj", "tail" : "(t: SimpleTypeD): Boolean", "member" : "genus.SimpleTypeD.cmpToSameClassObj", "link" : "genus\/SimpleTypeD.html#cmpToSameClassObj(t:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"label" : "supertypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.supertypep", "link" : "genus\/SimpleTypeD.html#supertypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalize", "link" : "genus\/SimpleTypeD.html#canonicalize(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizedHash", "tail" : ": Map[Option[NormalForm], SimpleTypeD]", "member" : "genus.SimpleTypeD.canonicalizedHash", "link" : "genus\/SimpleTypeD.html#canonicalizedHash:scala.collection.mutable.Map[Option[genus.NormalForm.NormalForm],genus.SimpleTypeD]", "kind" : "val"}, {"label" : "canonicalizeOnce", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalizeOnce", "link" : "genus\/SimpleTypeD.html#canonicalizeOnce(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizeN", "tail" : "(n: Int, verbose: Boolean, nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalizeN", "link" : "genus\/SimpleTypeD.html#canonicalizeN(n:Int,verbose:Boolean,nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toNf", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.toNf", "link" : "genus\/SimpleTypeD.html#toNf(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "computeCnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeCnf", "link" : "genus\/SimpleTypeD.html#computeCnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toCnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toCnf", "link" : "genus\/SimpleTypeD.html#toCnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "computeDnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeDnf", "link" : "genus\/SimpleTypeD.html#computeDnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toDnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toDnf", "link" : "genus\/SimpleTypeD.html#toDnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "subtypepDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.subtypepDown", "link" : "genus\/SimpleTypeD.html#subtypepDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "subtypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.subtypep", "link" : "genus\/SimpleTypeD.html#subtypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownSubtypes", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownSubtypes", "link" : "genus\/SimpleTypeD.html#knownSubtypes:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "disjointDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.disjointDown", "link" : "genus\/SimpleTypeD.html#disjointDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "inhabited", "tail" : ": Option[Boolean]", "member" : "genus.SimpleTypeD.inhabited", "link" : "genus\/SimpleTypeD.html#inhabited:Option[Boolean]", "kind" : "lazy val"}, {"label" : "inhabitedDown", "tail" : "(): Option[Boolean]", "member" : "genus.SimpleTypeD.inhabitedDown", "link" : "genus\/SimpleTypeD.html#inhabitedDown:Option[Boolean]", "kind" : "def"}, {"label" : "disjoint", "tail" : "(td: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.disjoint", "link" : "genus\/SimpleTypeD.html#disjoint(td:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownDisjoint", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownDisjoint", "link" : "genus\/SimpleTypeD.html#knownDisjoint:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "^^", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.^^", "link" : "genus\/SimpleTypeD.html#^^(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "-", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.-", "link" : "genus\/SimpleTypeD.html#-(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.unary_!", "link" : "genus\/SimpleTypeD.html#unary_!:genus.SimpleTypeD", "kind" : "def"}, {"label" : "&&", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.&&", "link" : "genus\/SimpleTypeD.html#&&(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "||", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.||", "link" : "genus\/SimpleTypeD.html#||(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "genus.SimpleTypeD.toLaTeX", "link" : "genus\/SimpleTypeD.html#toLaTeX():String", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "genus.SimpleTypeD.toDot", "link" : "genus\/SimpleTypeD.html#toDot():String", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "genus.SimpleTypeD.toMachineReadable", "link" : "genus\/SimpleTypeD.html#toMachineReadable():String", "kind" : "def"}, {"member" : "genus.SimpleTypeD#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SimpleTypeD.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SimpleTypeD.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SimpleTypeD.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SimpleTypeD.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SimpleTypeD.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SimpleTypeD.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SimpleTypeD.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SimpleTypeD.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SimpleTypeD.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SimpleTypeD.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SimpleTypeD.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SimpleTypeD.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "genus\/SimpleTypeD.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SimpleTypeD.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/SimpleTypeD.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/SimpleTypeD.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SimpleTypeD.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SimpleTypeD.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SimpleTypeD.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "typep", "tail" : "(a: Any): Boolean", "member" : "genus.SimpleTypeD.typep", "link" : "genus\/SimpleTypeD.html#typep(a:Any):Boolean", "kind" : "abstract def"}], "class" : "genus\/SimpleTypeD.html", "kind" : "class"}, {"name" : "genus.SInt", "shortDescription" : "", "object" : "genus\/SInt$.html", "members_object" : [{"label" : "cmpToSameClassObj", "tail" : "(t: SimpleTypeD): Boolean", "member" : "genus.SSatisfies.cmpToSameClassObj", "link" : "genus\/SInt$.html#cmpToSameClassObj(t:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"label" : "subtypepDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SSatisfies.subtypepDown", "link" : "genus\/SInt$.html#subtypepDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "inhabitedDown", "tail" : "(): Option[Boolean]", "member" : "genus.SSatisfies.inhabitedDown", "link" : "genus\/SInt$.html#inhabitedDown:Option[Boolean]", "kind" : "def"}, {"label" : "disjointDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SSatisfies.disjointDown", "link" : "genus\/SInt$.html#disjointDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "genus.SSatisfies.toDot", "link" : "genus\/SInt$.html#toDot():String", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "genus.SSatisfies.toMachineReadable", "link" : "genus\/SInt$.html#toMachineReadable():String", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "genus.SSatisfies.toLaTeX", "link" : "genus\/SInt$.html#toLaTeX():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "genus.SSatisfies.toString", "link" : "genus\/SInt$.html#toString():String", "kind" : "def"}, {"label" : "typep", "tail" : "(a: Any): Boolean", "member" : "genus.SSatisfies.typep", "link" : "genus\/SInt$.html#typep(a:Any):Boolean", "kind" : "def"}, {"label" : "printable", "tail" : ": String", "member" : "genus.SSatisfies.printable", "link" : "genus\/SInt$.html#printable:String", "kind" : "val"}, {"label" : "f", "tail" : ": (Any) => Boolean", "member" : "genus.SSatisfies.f", "link" : "genus\/SInt$.html#f:Any=>Boolean", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "genus\/SInt$.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "searchReplaceDown", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceDown", "link" : "genus\/SInt$.html#searchReplaceDown(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "searchReplaceInType", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceInType", "link" : "genus\/SInt$.html#searchReplaceInType(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "leafTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "genus.SimpleTypeD.leafTypes", "link" : "genus\/SInt$.html#leafTypes():Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "typeEquivalent", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.typeEquivalent", "link" : "genus\/SInt$.html#typeEquivalent(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "supertypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.supertypep", "link" : "genus\/SInt$.html#supertypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalize", "link" : "genus\/SInt$.html#canonicalize(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizedHash", "tail" : ": Map[Option[NormalForm], SimpleTypeD]", "member" : "genus.SimpleTypeD.canonicalizedHash", "link" : "genus\/SInt$.html#canonicalizedHash:scala.collection.mutable.Map[Option[genus.NormalForm.NormalForm],genus.SimpleTypeD]", "kind" : "val"}, {"label" : "canonicalizeOnce", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalizeOnce", "link" : "genus\/SInt$.html#canonicalizeOnce(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizeN", "tail" : "(n: Int, verbose: Boolean, nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalizeN", "link" : "genus\/SInt$.html#canonicalizeN(n:Int,verbose:Boolean,nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toNf", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.toNf", "link" : "genus\/SInt$.html#toNf(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "computeCnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeCnf", "link" : "genus\/SInt$.html#computeCnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toCnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toCnf", "link" : "genus\/SInt$.html#toCnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "computeDnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeDnf", "link" : "genus\/SInt$.html#computeDnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toDnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toDnf", "link" : "genus\/SInt$.html#toDnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "subtypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.subtypep", "link" : "genus\/SInt$.html#subtypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownSubtypes", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownSubtypes", "link" : "genus\/SInt$.html#knownSubtypes:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "inhabited", "tail" : ": Option[Boolean]", "member" : "genus.SimpleTypeD.inhabited", "link" : "genus\/SInt$.html#inhabited:Option[Boolean]", "kind" : "lazy val"}, {"label" : "disjoint", "tail" : "(td: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.disjoint", "link" : "genus\/SInt$.html#disjoint(td:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownDisjoint", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownDisjoint", "link" : "genus\/SInt$.html#knownDisjoint:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "^^", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.^^", "link" : "genus\/SInt$.html#^^(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "-", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.-", "link" : "genus\/SInt$.html#-(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.unary_!", "link" : "genus\/SInt$.html#unary_!:genus.SimpleTypeD", "kind" : "def"}, {"label" : "&&", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.&&", "link" : "genus\/SInt$.html#&&(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "||", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.||", "link" : "genus\/SInt$.html#||(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SInt$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SInt$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SInt$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SInt$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SInt$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SInt$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SInt$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SInt$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SInt$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SInt$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SInt$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SInt$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SInt$.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SInt$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SInt$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SInt$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "genus.SMember", "shortDescription" : "The member type is an exhaustive type, all object composing it aregiven at construction time.", "object" : "genus\/SMember$.html", "members_object" : [{"label" : "trueOrFalse", "tail" : ": SMember", "member" : "genus.SMember.trueOrFalse", "link" : "genus\/SMember$.html#trueOrFalse:genus.SMember", "kind" : "val"}, {"label" : "apply", "tail" : "(xs: Any*): SimpleTypeD", "member" : "genus.SMember.apply", "link" : "genus\/SMember$.html#apply(xs:Any*):genus.SimpleTypeD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SMember$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SMember$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SMember$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SMember$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SMember$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SMember$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SMember$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SMember$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SMember$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SMember$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SMember$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SMember$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "genus\/SMember$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SMember$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/SMember$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/SMember$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SMember$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SMember$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SMember$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "toMachineReadable", "tail" : "(): String", "member" : "genus.SMember.toMachineReadable", "link" : "genus\/SMember.html#toMachineReadable():String", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "genus.SMember.toLaTeX", "link" : "genus\/SMember.html#toLaTeX():String", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "genus.SMember.toDot", "link" : "genus\/SMember.html#toDot():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "genus.SMember.toString", "link" : "genus\/SMember.html#toString():String", "kind" : "def"}, {"member" : "genus.SMember#<init>", "error" : "unsupported entity"}, {"label" : "xs", "tail" : ": Vector[(SimpleTypeD, Any)]", "member" : "genus.SMember.xs", "link" : "genus\/SMember.html#xs:Vector[(genus.SimpleTypeD,Any)]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "genus\/SMember.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "leafTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "genus.SMemberImpl.leafTypes", "link" : "genus\/SMember.html#leafTypes():Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "cmpToSameClassObj", "tail" : "(t: SimpleTypeD): Boolean", "member" : "genus.SMemberImpl.cmpToSameClassObj", "link" : "genus\/SMember.html#cmpToSameClassObj(t:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"label" : "canonicalizeOnce", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SMemberImpl.canonicalizeOnce", "link" : "genus\/SMember.html#canonicalizeOnce(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "subtypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SMemberImpl.subtypep", "link" : "genus\/SMember.html#subtypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "disjointDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SMemberImpl.disjointDown", "link" : "genus\/SMember.html#disjointDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "inhabitedDown", "tail" : "(): Option[Boolean]", "member" : "genus.SMemberImpl.inhabitedDown", "link" : "genus\/SMember.html#inhabitedDown:Option[Boolean]", "kind" : "def"}, {"label" : "typep", "tail" : "(a: Any): Boolean", "member" : "genus.SMemberImpl.typep", "link" : "genus\/SMember.html#typep(a:Any):Boolean", "kind" : "def"}, {"label" : "searchReplaceDown", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceDown", "link" : "genus\/SMember.html#searchReplaceDown(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "searchReplaceInType", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceInType", "link" : "genus\/SMember.html#searchReplaceInType(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "typeEquivalent", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.typeEquivalent", "link" : "genus\/SMember.html#typeEquivalent(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "supertypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.supertypep", "link" : "genus\/SMember.html#supertypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalize", "link" : "genus\/SMember.html#canonicalize(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizedHash", "tail" : ": Map[Option[NormalForm], SimpleTypeD]", "member" : "genus.SimpleTypeD.canonicalizedHash", "link" : "genus\/SMember.html#canonicalizedHash:scala.collection.mutable.Map[Option[genus.NormalForm.NormalForm],genus.SimpleTypeD]", "kind" : "val"}, {"label" : "canonicalizeN", "tail" : "(n: Int, verbose: Boolean, nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalizeN", "link" : "genus\/SMember.html#canonicalizeN(n:Int,verbose:Boolean,nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toNf", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.toNf", "link" : "genus\/SMember.html#toNf(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "computeCnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeCnf", "link" : "genus\/SMember.html#computeCnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toCnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toCnf", "link" : "genus\/SMember.html#toCnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "computeDnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeDnf", "link" : "genus\/SMember.html#computeDnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toDnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toDnf", "link" : "genus\/SMember.html#toDnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "subtypepDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.subtypepDown", "link" : "genus\/SMember.html#subtypepDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownSubtypes", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownSubtypes", "link" : "genus\/SMember.html#knownSubtypes:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "inhabited", "tail" : ": Option[Boolean]", "member" : "genus.SimpleTypeD.inhabited", "link" : "genus\/SMember.html#inhabited:Option[Boolean]", "kind" : "lazy val"}, {"label" : "disjoint", "tail" : "(td: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.disjoint", "link" : "genus\/SMember.html#disjoint(td:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownDisjoint", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownDisjoint", "link" : "genus\/SMember.html#knownDisjoint:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "^^", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.^^", "link" : "genus\/SMember.html#^^(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "-", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.-", "link" : "genus\/SMember.html#-(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.unary_!", "link" : "genus\/SMember.html#unary_!:genus.SimpleTypeD", "kind" : "def"}, {"label" : "&&", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.&&", "link" : "genus\/SMember.html#&&(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "||", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.||", "link" : "genus\/SMember.html#||(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SMember.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SMember.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SMember.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SMember.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SMember.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SMember.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SMember.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SMember.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SMember.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SMember.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SMember.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SMember.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SMember.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SMember.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SMember.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SMember.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "genus\/SMember.html", "kind" : "case class"}, {"name" : "genus.SMemberImpl", "shortDescription" : "", "members_class" : [{"label" : "leafTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "genus.SMemberImpl.leafTypes", "link" : "genus\/SMemberImpl.html#leafTypes():Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "cmpToSameClassObj", "tail" : "(t: SimpleTypeD): Boolean", "member" : "genus.SMemberImpl.cmpToSameClassObj", "link" : "genus\/SMemberImpl.html#cmpToSameClassObj(t:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"label" : "canonicalizeOnce", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SMemberImpl.canonicalizeOnce", "link" : "genus\/SMemberImpl.html#canonicalizeOnce(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "subtypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SMemberImpl.subtypep", "link" : "genus\/SMemberImpl.html#subtypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "disjointDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SMemberImpl.disjointDown", "link" : "genus\/SMemberImpl.html#disjointDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "inhabitedDown", "tail" : "(): Option[Boolean]", "member" : "genus.SMemberImpl.inhabitedDown", "link" : "genus\/SMemberImpl.html#inhabitedDown:Option[Boolean]", "kind" : "def"}, {"label" : "typep", "tail" : "(a: Any): Boolean", "member" : "genus.SMemberImpl.typep", "link" : "genus\/SMemberImpl.html#typep(a:Any):Boolean", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "genus.SMemberImpl.toMachineReadable", "link" : "genus\/SMemberImpl.html#toMachineReadable():String", "kind" : "def"}, {"member" : "genus.SMemberImpl#<init>", "error" : "unsupported entity"}, {"label" : "xs", "tail" : ": Vector[(SimpleTypeD, Any)]", "member" : "genus.SMemberImpl.xs", "link" : "genus\/SMemberImpl.html#xs:Vector[(genus.SimpleTypeD,Any)]", "kind" : "val"}, {"label" : "searchReplaceDown", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceDown", "link" : "genus\/SMemberImpl.html#searchReplaceDown(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "searchReplaceInType", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceInType", "link" : "genus\/SMemberImpl.html#searchReplaceInType(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "typeEquivalent", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.typeEquivalent", "link" : "genus\/SMemberImpl.html#typeEquivalent(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "supertypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.supertypep", "link" : "genus\/SMemberImpl.html#supertypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalize", "link" : "genus\/SMemberImpl.html#canonicalize(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizedHash", "tail" : ": Map[Option[NormalForm], SimpleTypeD]", "member" : "genus.SimpleTypeD.canonicalizedHash", "link" : "genus\/SMemberImpl.html#canonicalizedHash:scala.collection.mutable.Map[Option[genus.NormalForm.NormalForm],genus.SimpleTypeD]", "kind" : "val"}, {"label" : "canonicalizeN", "tail" : "(n: Int, verbose: Boolean, nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalizeN", "link" : "genus\/SMemberImpl.html#canonicalizeN(n:Int,verbose:Boolean,nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toNf", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.toNf", "link" : "genus\/SMemberImpl.html#toNf(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "computeCnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeCnf", "link" : "genus\/SMemberImpl.html#computeCnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toCnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toCnf", "link" : "genus\/SMemberImpl.html#toCnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "computeDnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeDnf", "link" : "genus\/SMemberImpl.html#computeDnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toDnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toDnf", "link" : "genus\/SMemberImpl.html#toDnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "subtypepDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.subtypepDown", "link" : "genus\/SMemberImpl.html#subtypepDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownSubtypes", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownSubtypes", "link" : "genus\/SMemberImpl.html#knownSubtypes:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "inhabited", "tail" : ": Option[Boolean]", "member" : "genus.SimpleTypeD.inhabited", "link" : "genus\/SMemberImpl.html#inhabited:Option[Boolean]", "kind" : "lazy val"}, {"label" : "disjoint", "tail" : "(td: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.disjoint", "link" : "genus\/SMemberImpl.html#disjoint(td:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownDisjoint", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownDisjoint", "link" : "genus\/SMemberImpl.html#knownDisjoint:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "^^", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.^^", "link" : "genus\/SMemberImpl.html#^^(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "-", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.-", "link" : "genus\/SMemberImpl.html#-(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.unary_!", "link" : "genus\/SMemberImpl.html#unary_!:genus.SimpleTypeD", "kind" : "def"}, {"label" : "&&", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.&&", "link" : "genus\/SMemberImpl.html#&&(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "||", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.||", "link" : "genus\/SMemberImpl.html#||(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "genus.SimpleTypeD.toLaTeX", "link" : "genus\/SMemberImpl.html#toLaTeX():String", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "genus.SimpleTypeD.toDot", "link" : "genus\/SMemberImpl.html#toDot():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SMemberImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SMemberImpl.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SMemberImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SMemberImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SMemberImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SMemberImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SMemberImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SMemberImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SMemberImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SMemberImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SMemberImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SMemberImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "genus\/SMemberImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SMemberImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/SMemberImpl.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/SMemberImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SMemberImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SMemberImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SMemberImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "genus\/SMemberImpl.html", "kind" : "class"}, {"name" : "genus.SNot", "shortDescription" : "A negation of a type.", "members_case class" : [{"label" : "searchReplaceDown", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SNot.searchReplaceDown", "link" : "genus\/SNot.html#searchReplaceDown(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "leafTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "genus.SNot.leafTypes", "link" : "genus\/SNot.html#leafTypes():Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "cmpToSameClassObj", "tail" : "(td: SimpleTypeD): Boolean", "member" : "genus.SNot.cmpToSameClassObj", "link" : "genus\/SNot.html#cmpToSameClassObj(td:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"label" : "computeCnf", "tail" : "(): SimpleTypeD", "member" : "genus.SNot.computeCnf", "link" : "genus\/SNot.html#computeCnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "computeDnf", "tail" : "(): SimpleTypeD", "member" : "genus.SNot.computeDnf", "link" : "genus\/SNot.html#computeDnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizeOnce", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SNot.canonicalizeOnce", "link" : "genus\/SNot.html#canonicalizeOnce(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "subtypepDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SNot.subtypepDown", "link" : "genus\/SNot.html#subtypepDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "disjointDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SNot.disjointDown", "link" : "genus\/SNot.html#disjointDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "inhabitedDown", "tail" : "(): Option[Boolean]", "member" : "genus.SNot.inhabitedDown", "link" : "genus\/SNot.html#inhabitedDown:Option[Boolean]", "kind" : "def"}, {"label" : "typep", "tail" : "(a: Any): Boolean", "member" : "genus.SNot.typep", "link" : "genus\/SNot.html#typep(a:Any):Boolean", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "genus.SNot.toLaTeX", "link" : "genus\/SNot.html#toLaTeX():String", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "genus.SNot.toMachineReadable", "link" : "genus\/SNot.html#toMachineReadable():String", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "genus.SNot.toDot", "link" : "genus\/SNot.html#toDot():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "genus.SNot.toString", "link" : "genus\/SNot.html#toString():String", "kind" : "def"}, {"member" : "genus.SNot#<init>", "error" : "unsupported entity"}, {"label" : "s", "tail" : ": SimpleTypeD", "member" : "genus.SNot.s", "link" : "genus\/SNot.html#s:genus.SimpleTypeD", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "genus\/SNot.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "searchReplaceInType", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceInType", "link" : "genus\/SNot.html#searchReplaceInType(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "typeEquivalent", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.typeEquivalent", "link" : "genus\/SNot.html#typeEquivalent(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "supertypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.supertypep", "link" : "genus\/SNot.html#supertypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalize", "link" : "genus\/SNot.html#canonicalize(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizedHash", "tail" : ": Map[Option[NormalForm], SimpleTypeD]", "member" : "genus.SimpleTypeD.canonicalizedHash", "link" : "genus\/SNot.html#canonicalizedHash:scala.collection.mutable.Map[Option[genus.NormalForm.NormalForm],genus.SimpleTypeD]", "kind" : "val"}, {"label" : "canonicalizeN", "tail" : "(n: Int, verbose: Boolean, nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalizeN", "link" : "genus\/SNot.html#canonicalizeN(n:Int,verbose:Boolean,nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toNf", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.toNf", "link" : "genus\/SNot.html#toNf(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toCnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toCnf", "link" : "genus\/SNot.html#toCnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "toDnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toDnf", "link" : "genus\/SNot.html#toDnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "subtypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.subtypep", "link" : "genus\/SNot.html#subtypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownSubtypes", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownSubtypes", "link" : "genus\/SNot.html#knownSubtypes:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "inhabited", "tail" : ": Option[Boolean]", "member" : "genus.SimpleTypeD.inhabited", "link" : "genus\/SNot.html#inhabited:Option[Boolean]", "kind" : "lazy val"}, {"label" : "disjoint", "tail" : "(td: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.disjoint", "link" : "genus\/SNot.html#disjoint(td:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownDisjoint", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownDisjoint", "link" : "genus\/SNot.html#knownDisjoint:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "^^", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.^^", "link" : "genus\/SNot.html#^^(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "-", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.-", "link" : "genus\/SNot.html#-(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.unary_!", "link" : "genus\/SNot.html#unary_!:genus.SimpleTypeD", "kind" : "def"}, {"label" : "&&", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.&&", "link" : "genus\/SNot.html#&&(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "||", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.||", "link" : "genus\/SNot.html#||(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SNot.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SNot.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SNot.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SNot.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SNot.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SNot.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SNot.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SNot.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SNot.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SNot.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SNot.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SNot.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SNot.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SNot.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SNot.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SNot.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "genus\/SNot.html", "kind" : "case class"}, {"name" : "genus.SOr", "shortDescription" : "A union type, which is the union of zero or more types.", "object" : "genus\/SOr$.html", "members_object" : [{"label" : "createOr", "tail" : "(tds: Seq[SimpleTypeD]): SimpleTypeD", "member" : "genus.SOr.createOr", "link" : "genus\/SOr$.html#createOr(tds:Seq[genus.SimpleTypeD]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SOr$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SOr$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SOr$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SOr$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SOr$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SOr$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SOr$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SOr$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SOr$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SOr$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SOr$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SOr$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "genus\/SOr$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SOr$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/SOr$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/SOr$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SOr$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SOr$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SOr$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "computeCnf", "tail" : "(): SimpleTypeD", "member" : "genus.SOr.computeCnf", "link" : "genus\/SOr.html#computeCnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizeOnce", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SOr.canonicalizeOnce", "link" : "genus\/SOr.html#canonicalizeOnce(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion177", "tail" : "(): SimpleTypeD", "member" : "genus.SOr.conversion177", "link" : "genus\/SOr.html#conversion177():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversionD3", "tail" : "(): SimpleTypeD", "member" : "genus.SOr.conversionD3", "link" : "genus\/SOr.html#conversionD3():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversionD1", "tail" : "(): SimpleTypeD", "member" : "genus.SOr.conversionD1", "link" : "genus\/SOr.html#conversionD1():genus.SimpleTypeD", "kind" : "def"}, {"label" : "subtypepDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SOr.subtypepDown", "link" : "genus\/SOr.html#subtypepDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "disjointDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SOr.disjointDown", "link" : "genus\/SOr.html#disjointDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "inhabitedDown", "tail" : "(): Option[Boolean]", "member" : "genus.SOr.inhabitedDown", "link" : "genus\/SOr.html#inhabitedDown:Option[Boolean]", "kind" : "def"}, {"label" : "typep", "tail" : "(a: Any): Boolean", "member" : "genus.SOr.typep", "link" : "genus\/SOr.html#typep(a:Any):Boolean", "kind" : "def"}, {"label" : "comboFilter", "tail" : "(seq: Seq[A], f: (A) => Boolean): Seq[A]", "member" : "genus.SOr.comboFilter", "link" : "genus\/SOr.html#comboFilter[A](seq:Seq[A],f:A=>Boolean):Seq[A]", "kind" : "def"}, {"label" : "dualCombinator", "tail" : "(a: Seq[A], b: Seq[A]): Seq[A]", "member" : "genus.SOr.dualCombinator", "link" : "genus\/SOr.html#dualCombinator[A](a:Seq[A],b:Seq[A]):Seq[A]", "kind" : "def"}, {"label" : "combinator", "tail" : "(a: Seq[A], b: Seq[A]): Seq[A]", "member" : "genus.SOr.combinator", "link" : "genus\/SOr.html#combinator[A](a:Seq[A],b:Seq[A]):Seq[A]", "kind" : "def"}, {"label" : "dualCombination", "tail" : "(td: SimpleTypeD): Boolean", "member" : "genus.SOr.dualCombination", "link" : "genus\/SOr.html#dualCombination(td:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"label" : "sameCombination", "tail" : "(td: SimpleTypeD): Boolean", "member" : "genus.SOr.sameCombination", "link" : "genus\/SOr.html#sameCombination(td:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"label" : "annihilator", "tail" : "(a: SimpleTypeD, b: SimpleTypeD): Option[Boolean]", "member" : "genus.SOr.annihilator", "link" : "genus\/SOr.html#annihilator(a:genus.SimpleTypeD,b:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "zero", "tail" : ": SimpleTypeD", "member" : "genus.SOr.zero", "link" : "genus\/SOr.html#zero:genus.SimpleTypeD", "kind" : "val"}, {"label" : "unit", "tail" : ": SimpleTypeD", "member" : "genus.SOr.unit", "link" : "genus\/SOr.html#unit:genus.SimpleTypeD", "kind" : "val"}, {"label" : "createDual", "tail" : "(tds: Seq[SimpleTypeD]): SimpleTypeD", "member" : "genus.SOr.createDual", "link" : "genus\/SOr.html#createDual(tds:Seq[genus.SimpleTypeD]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "create", "tail" : "(tds: Seq[SimpleTypeD]): SimpleTypeD", "member" : "genus.SOr.create", "link" : "genus\/SOr.html#create(tds:Seq[genus.SimpleTypeD]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "genus.SOr.toLaTeX", "link" : "genus\/SOr.html#toLaTeX():String", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "genus.SOr.toMachineReadable", "link" : "genus\/SOr.html#toMachineReadable():String", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "genus.SOr.toDot", "link" : "genus\/SOr.html#toDot():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "genus.SOr.toString", "link" : "genus\/SOr.html#toString():String", "kind" : "def"}, {"member" : "genus.SOr#<init>", "error" : "unsupported entity"}, {"label" : "tds", "tail" : ": SimpleTypeD*", "member" : "genus.SOr.tds", "link" : "genus\/SOr.html#tds:genus.SimpleTypeD*", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "genus\/SOr.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "searchReplaceDown", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SCombination.searchReplaceDown", "link" : "genus\/SOr.html#searchReplaceDown(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "leafTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "genus.SCombination.leafTypes", "link" : "genus\/SOr.html#leafTypes():Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "computeNf", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.computeNf", "link" : "genus\/SOr.html#computeNf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "cmpToSameClassObj", "tail" : "(td: SimpleTypeD): Boolean", "member" : "genus.SCombination.cmpToSameClassObj", "link" : "genus\/SOr.html#cmpToSameClassObj(td:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"label" : "conversion99", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SCombination.conversion99", "link" : "genus\/SOr.html#conversion99(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion98", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion98", "link" : "genus\/SOr.html#conversion98():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion17", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion17", "link" : "genus\/SOr.html#conversion17():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion16", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion16", "link" : "genus\/SOr.html#conversion16():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion15", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion15", "link" : "genus\/SOr.html#conversion15():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion14", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion14", "link" : "genus\/SOr.html#conversion14():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion13", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion13", "link" : "genus\/SOr.html#conversion13():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion12", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion12", "link" : "genus\/SOr.html#conversion12():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion11", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion11", "link" : "genus\/SOr.html#conversion11():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion10", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion10", "link" : "genus\/SOr.html#conversion10():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion9", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion9", "link" : "genus\/SOr.html#conversion9():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion8", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion8", "link" : "genus\/SOr.html#conversion8():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion7", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SCombination.conversion7", "link" : "genus\/SOr.html#conversion7(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion6", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion6", "link" : "genus\/SOr.html#conversion6():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion5", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion5", "link" : "genus\/SOr.html#conversion5():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion4", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion4", "link" : "genus\/SOr.html#conversion4():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion3", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion3", "link" : "genus\/SOr.html#conversion3():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion2", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion2", "link" : "genus\/SOr.html#conversion2():genus.SimpleTypeD", "kind" : "def"}, {"label" : "conversion1", "tail" : "(): SimpleTypeD", "member" : "genus.SCombination.conversion1", "link" : "genus\/SOr.html#conversion1():genus.SimpleTypeD", "kind" : "def"}, {"label" : "searchReplaceInType", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceInType", "link" : "genus\/SOr.html#searchReplaceInType(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "typeEquivalent", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.typeEquivalent", "link" : "genus\/SOr.html#typeEquivalent(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "supertypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.supertypep", "link" : "genus\/SOr.html#supertypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalize", "link" : "genus\/SOr.html#canonicalize(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizedHash", "tail" : ": Map[Option[NormalForm], SimpleTypeD]", "member" : "genus.SimpleTypeD.canonicalizedHash", "link" : "genus\/SOr.html#canonicalizedHash:scala.collection.mutable.Map[Option[genus.NormalForm.NormalForm],genus.SimpleTypeD]", "kind" : "val"}, {"label" : "canonicalizeN", "tail" : "(n: Int, verbose: Boolean, nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalizeN", "link" : "genus\/SOr.html#canonicalizeN(n:Int,verbose:Boolean,nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toNf", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.toNf", "link" : "genus\/SOr.html#toNf(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toCnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toCnf", "link" : "genus\/SOr.html#toCnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "computeDnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeDnf", "link" : "genus\/SOr.html#computeDnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toDnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toDnf", "link" : "genus\/SOr.html#toDnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "subtypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.subtypep", "link" : "genus\/SOr.html#subtypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownSubtypes", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownSubtypes", "link" : "genus\/SOr.html#knownSubtypes:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "inhabited", "tail" : ": Option[Boolean]", "member" : "genus.SimpleTypeD.inhabited", "link" : "genus\/SOr.html#inhabited:Option[Boolean]", "kind" : "lazy val"}, {"label" : "disjoint", "tail" : "(td: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.disjoint", "link" : "genus\/SOr.html#disjoint(td:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownDisjoint", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownDisjoint", "link" : "genus\/SOr.html#knownDisjoint:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "^^", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.^^", "link" : "genus\/SOr.html#^^(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "-", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.-", "link" : "genus\/SOr.html#-(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.unary_!", "link" : "genus\/SOr.html#unary_!:genus.SimpleTypeD", "kind" : "def"}, {"label" : "&&", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.&&", "link" : "genus\/SOr.html#&&(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "||", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.||", "link" : "genus\/SOr.html#||(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SOr.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SOr.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SOr.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SOr.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SOr.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SOr.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SOr.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SOr.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SOr.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SOr.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SOr.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SOr.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SOr.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SOr.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SOr.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SOr.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "genus\/SOr.html", "kind" : "case class"}, {"name" : "genus.SSatisfies", "shortDescription" : "A custom type, build by a function defined by the user.", "object" : "genus\/SSatisfies$.html", "members_object" : [{"label" : "doublep", "tail" : "(a: Any): Boolean", "member" : "genus.SSatisfies.doublep", "link" : "genus\/SSatisfies$.html#doublep(a:Any):Boolean", "kind" : "def"}, {"label" : "intp", "tail" : "(a: Any): Boolean", "member" : "genus.SSatisfies.intp", "link" : "genus\/SSatisfies$.html#intp(a:Any):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(f: (Any) => Boolean): SSatisfies", "member" : "genus.SSatisfies.apply", "link" : "genus\/SSatisfies$.html#apply(f:Any=>Boolean):genus.SSatisfies", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SSatisfies$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SSatisfies$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SSatisfies$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SSatisfies$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SSatisfies$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SSatisfies$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SSatisfies$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SSatisfies$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SSatisfies$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SSatisfies$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SSatisfies$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SSatisfies$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "genus\/SSatisfies$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SSatisfies$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/SSatisfies$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/SSatisfies$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SSatisfies$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SSatisfies$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SSatisfies$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "cmpToSameClassObj", "tail" : "(t: SimpleTypeD): Boolean", "member" : "genus.SSatisfies.cmpToSameClassObj", "link" : "genus\/SSatisfies.html#cmpToSameClassObj(t:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"label" : "subtypepDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SSatisfies.subtypepDown", "link" : "genus\/SSatisfies.html#subtypepDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "inhabitedDown", "tail" : "(): Option[Boolean]", "member" : "genus.SSatisfies.inhabitedDown", "link" : "genus\/SSatisfies.html#inhabitedDown:Option[Boolean]", "kind" : "def"}, {"label" : "disjointDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SSatisfies.disjointDown", "link" : "genus\/SSatisfies.html#disjointDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "genus.SSatisfies.toDot", "link" : "genus\/SSatisfies.html#toDot():String", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "genus.SSatisfies.toMachineReadable", "link" : "genus\/SSatisfies.html#toMachineReadable():String", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "genus.SSatisfies.toLaTeX", "link" : "genus\/SSatisfies.html#toLaTeX():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "genus.SSatisfies.toString", "link" : "genus\/SSatisfies.html#toString():String", "kind" : "def"}, {"label" : "typep", "tail" : "(a: Any): Boolean", "member" : "genus.SSatisfies.typep", "link" : "genus\/SSatisfies.html#typep(a:Any):Boolean", "kind" : "def"}, {"member" : "genus.SSatisfies#<init>", "error" : "unsupported entity"}, {"label" : "printable", "tail" : ": String", "member" : "genus.SSatisfies.printable", "link" : "genus\/SSatisfies.html#printable:String", "kind" : "val"}, {"label" : "f", "tail" : ": (Any) => Boolean", "member" : "genus.SSatisfies.f", "link" : "genus\/SSatisfies.html#f:Any=>Boolean", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "genus\/SSatisfies.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "searchReplaceDown", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceDown", "link" : "genus\/SSatisfies.html#searchReplaceDown(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "searchReplaceInType", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceInType", "link" : "genus\/SSatisfies.html#searchReplaceInType(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "leafTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "genus.SimpleTypeD.leafTypes", "link" : "genus\/SSatisfies.html#leafTypes():Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "typeEquivalent", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.typeEquivalent", "link" : "genus\/SSatisfies.html#typeEquivalent(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "supertypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.supertypep", "link" : "genus\/SSatisfies.html#supertypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalize", "link" : "genus\/SSatisfies.html#canonicalize(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizedHash", "tail" : ": Map[Option[NormalForm], SimpleTypeD]", "member" : "genus.SimpleTypeD.canonicalizedHash", "link" : "genus\/SSatisfies.html#canonicalizedHash:scala.collection.mutable.Map[Option[genus.NormalForm.NormalForm],genus.SimpleTypeD]", "kind" : "val"}, {"label" : "canonicalizeOnce", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalizeOnce", "link" : "genus\/SSatisfies.html#canonicalizeOnce(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizeN", "tail" : "(n: Int, verbose: Boolean, nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalizeN", "link" : "genus\/SSatisfies.html#canonicalizeN(n:Int,verbose:Boolean,nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toNf", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.toNf", "link" : "genus\/SSatisfies.html#toNf(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "computeCnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeCnf", "link" : "genus\/SSatisfies.html#computeCnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toCnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toCnf", "link" : "genus\/SSatisfies.html#toCnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "computeDnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeDnf", "link" : "genus\/SSatisfies.html#computeDnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toDnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toDnf", "link" : "genus\/SSatisfies.html#toDnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "subtypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.subtypep", "link" : "genus\/SSatisfies.html#subtypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownSubtypes", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownSubtypes", "link" : "genus\/SSatisfies.html#knownSubtypes:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "inhabited", "tail" : ": Option[Boolean]", "member" : "genus.SimpleTypeD.inhabited", "link" : "genus\/SSatisfies.html#inhabited:Option[Boolean]", "kind" : "lazy val"}, {"label" : "disjoint", "tail" : "(td: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.disjoint", "link" : "genus\/SSatisfies.html#disjoint(td:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownDisjoint", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownDisjoint", "link" : "genus\/SSatisfies.html#knownDisjoint:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "^^", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.^^", "link" : "genus\/SSatisfies.html#^^(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "-", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.-", "link" : "genus\/SSatisfies.html#-(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.unary_!", "link" : "genus\/SSatisfies.html#unary_!:genus.SimpleTypeD", "kind" : "def"}, {"label" : "&&", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.&&", "link" : "genus\/SSatisfies.html#&&(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "||", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.||", "link" : "genus\/SSatisfies.html#||(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/SSatisfies.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/SSatisfies.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/SSatisfies.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/SSatisfies.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/SSatisfies.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/SSatisfies.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/SSatisfies.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SSatisfies.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SSatisfies.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/SSatisfies.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/SSatisfies.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/SSatisfies.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/SSatisfies.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/SSatisfies.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/SSatisfies.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/SSatisfies.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "genus\/SSatisfies.html", "kind" : "case class"}, {"name" : "genus.Statistics", "shortDescription" : "", "object" : "genus\/Statistics$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "genus.Statistics.main", "link" : "genus\/Statistics$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "measureSubtypeComputability", "tail" : "(n: Int, depth: Int, inh: Boolean): Map[String, Double]", "member" : "genus.Statistics.measureSubtypeComputability", "link" : "genus\/Statistics$.html#measureSubtypeComputability(n:Int,depth:Int,inh:Boolean):Map[String,Double]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/Statistics$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/Statistics$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/Statistics$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/Statistics$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/Statistics$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/Statistics$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/Statistics$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/Statistics$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/Statistics$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/Statistics$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/Statistics$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/Statistics$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "genus\/Statistics$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/Statistics$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/Statistics$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/Statistics$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/Statistics$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/Statistics$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/Statistics$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "genus.STop", "shortDescription" : "The super type, super type of all types.", "object" : "genus\/STop$.html", "members_object" : [{"label" : "cmpToSameClassObj", "tail" : "(t: SimpleTypeD): Boolean", "member" : "genus.STop.cmpToSameClassObj", "link" : "genus\/STop$.html#cmpToSameClassObj(t:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"label" : "subtypepDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.STop.subtypepDown", "link" : "genus\/STop$.html#subtypepDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "disjointDown", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.STop.disjointDown", "link" : "genus\/STop$.html#disjointDown(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "inhabitedDown", "tail" : "(): Some[Boolean]", "member" : "genus.STop.inhabitedDown", "link" : "genus\/STop$.html#inhabitedDown:Some[Boolean]", "kind" : "def"}, {"label" : "typep", "tail" : "(a: Any): Boolean", "member" : "genus.STop.typep", "link" : "genus\/STop$.html#typep(a:Any):Boolean", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "genus.STop.toMachineReadable", "link" : "genus\/STop$.html#toMachineReadable():String", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "genus.STop.toDot", "link" : "genus\/STop$.html#toDot():String", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "genus.STop.toLaTeX", "link" : "genus\/STop$.html#toLaTeX():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "genus.STop.toString", "link" : "genus\/STop$.html#toString():String", "kind" : "def"}, {"label" : "searchReplaceDown", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceDown", "link" : "genus\/STop$.html#searchReplaceDown(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "searchReplaceInType", "tail" : "(search: SimpleTypeD, replace: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.searchReplaceInType", "link" : "genus\/STop$.html#searchReplaceInType(search:genus.SimpleTypeD,replace:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "leafTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "genus.SimpleTypeD.leafTypes", "link" : "genus\/STop$.html#leafTypes():Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "typeEquivalent", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.typeEquivalent", "link" : "genus\/STop$.html#typeEquivalent(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "supertypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.supertypep", "link" : "genus\/STop$.html#supertypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalize", "link" : "genus\/STop$.html#canonicalize(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizedHash", "tail" : ": Map[Option[NormalForm], SimpleTypeD]", "member" : "genus.SimpleTypeD.canonicalizedHash", "link" : "genus\/STop$.html#canonicalizedHash:scala.collection.mutable.Map[Option[genus.NormalForm.NormalForm],genus.SimpleTypeD]", "kind" : "val"}, {"label" : "canonicalizeOnce", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalizeOnce", "link" : "genus\/STop$.html#canonicalizeOnce(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "canonicalizeN", "tail" : "(n: Int, verbose: Boolean, nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.canonicalizeN", "link" : "genus\/STop$.html#canonicalizeN(n:Int,verbose:Boolean,nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "toNf", "tail" : "(nf: Option[NormalForm]): SimpleTypeD", "member" : "genus.SimpleTypeD.toNf", "link" : "genus\/STop$.html#toNf(nf:Option[genus.NormalForm.NormalForm]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "computeCnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeCnf", "link" : "genus\/STop$.html#computeCnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toCnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toCnf", "link" : "genus\/STop$.html#toCnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "computeDnf", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.computeDnf", "link" : "genus\/STop$.html#computeDnf():genus.SimpleTypeD", "kind" : "def"}, {"label" : "toDnf", "tail" : ": SimpleTypeD", "member" : "genus.SimpleTypeD.toDnf", "link" : "genus\/STop$.html#toDnf:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "subtypep", "tail" : "(t: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.subtypep", "link" : "genus\/STop$.html#subtypep(t:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownSubtypes", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownSubtypes", "link" : "genus\/STop$.html#knownSubtypes:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "inhabited", "tail" : ": Option[Boolean]", "member" : "genus.SimpleTypeD.inhabited", "link" : "genus\/STop$.html#inhabited:Option[Boolean]", "kind" : "lazy val"}, {"label" : "disjoint", "tail" : "(td: SimpleTypeD): Option[Boolean]", "member" : "genus.SimpleTypeD.disjoint", "link" : "genus\/STop$.html#disjoint(td:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "knownDisjoint", "tail" : ": Map[(WorldView, SimpleTypeD), Option[Boolean]]", "member" : "genus.SimpleTypeD.knownDisjoint", "link" : "genus\/STop$.html#knownDisjoint:scala.collection.mutable.Map[(genus.WorldView,genus.SimpleTypeD),Option[Boolean]]", "kind" : "val"}, {"label" : "^^", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.^^", "link" : "genus\/STop$.html#^^(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "-", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.-", "link" : "genus\/STop$.html#-(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): SimpleTypeD", "member" : "genus.SimpleTypeD.unary_!", "link" : "genus\/STop$.html#unary_!:genus.SimpleTypeD", "kind" : "def"}, {"label" : "&&", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.&&", "link" : "genus\/STop$.html#&&(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "||", "tail" : "(t: SimpleTypeD): SimpleTypeD", "member" : "genus.SimpleTypeD.||", "link" : "genus\/STop$.html#||(t:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/STop$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/STop$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/STop$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/STop$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/STop$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/STop$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/STop$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/STop$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/STop$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/STop$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/STop$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/STop$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/STop$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/STop$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/STop$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/STop$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/STop$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/STop$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "genus.TerminalType", "trait" : "genus\/TerminalType.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/TerminalType.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/TerminalType.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/TerminalType.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/TerminalType.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/TerminalType.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/TerminalType.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/TerminalType.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/TerminalType.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/TerminalType.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/TerminalType.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/TerminalType.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/TerminalType.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "genus\/TerminalType.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/TerminalType.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/TerminalType.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/TerminalType.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/TerminalType.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/TerminalType.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/TerminalType.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Trait representing types that have to be stored in the HashMap in theLBdd representation."}, {"name" : "genus.Types", "shortDescription" : "", "object" : "genus\/Types$.html", "members_object" : [{"label" : "primeType", "tail" : "(): SSatisfies", "member" : "genus.Types.primeType", "link" : "genus\/Types$.html#primeType():genus.SSatisfies", "kind" : "def"}, {"label" : "isPrime", "tail" : "(x: Any): Boolean", "member" : "genus.Types.isPrime", "link" : "genus\/Types$.html#isPrime(x:Any):Boolean", "kind" : "def"}, {"label" : "oddType", "tail" : "(): SSatisfies", "member" : "genus.Types.oddType", "link" : "genus\/Types$.html#oddType():genus.SSatisfies", "kind" : "def"}, {"label" : "isOdd", "tail" : "(x: Any): Boolean", "member" : "genus.Types.isOdd", "link" : "genus\/Types$.html#isOdd(x:Any):Boolean", "kind" : "def"}, {"label" : "evenType", "tail" : "(): SSatisfies", "member" : "genus.Types.evenType", "link" : "genus\/Types$.html#evenType():genus.SSatisfies", "kind" : "def"}, {"label" : "isEven", "tail" : "(x: Any): Boolean", "member" : "genus.Types.isEven", "link" : "genus\/Types$.html#isEven(x:Any):Boolean", "kind" : "def"}, {"label" : "atomicTypesSeq", "tail" : "(): Seq[SimpleTypeD]", "member" : "genus.Types.atomicTypesSeq", "link" : "genus\/Types$.html#atomicTypesSeq():Seq[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "numericType", "tail" : "(): SimpleTypeD", "member" : "genus.Types.numericType", "link" : "genus\/Types$.html#numericType():genus.SimpleTypeD", "kind" : "def"}, {"label" : "anyRefType", "tail" : "(): SimpleTypeD", "member" : "genus.Types.anyRefType", "link" : "genus\/Types$.html#anyRefType():genus.SimpleTypeD", "kind" : "def"}, {"label" : "charJavaType", "tail" : "(): SimpleTypeD", "member" : "genus.Types.charJavaType", "link" : "genus\/Types$.html#charJavaType():genus.SimpleTypeD", "kind" : "def"}, {"label" : "unitRuntimeType", "tail" : "(): SimpleTypeD", "member" : "genus.Types.unitRuntimeType", "link" : "genus\/Types$.html#unitRuntimeType():genus.SimpleTypeD", "kind" : "def"}, {"label" : "booleanType", "tail" : "(): SimpleTypeD", "member" : "genus.Types.booleanType", "link" : "genus\/Types$.html#booleanType():genus.SimpleTypeD", "kind" : "def"}, {"label" : "listAnyType", "tail" : "(): SimpleTypeD", "member" : "genus.Types.listAnyType", "link" : "genus\/Types$.html#listAnyType():genus.SimpleTypeD", "kind" : "def"}, {"label" : "stringType", "tail" : "(): SimpleTypeD", "member" : "genus.Types.stringType", "link" : "genus\/Types$.html#stringType():genus.SimpleTypeD", "kind" : "def"}, {"label" : "doubleJavaType", "tail" : "(): SimpleTypeD", "member" : "genus.Types.doubleJavaType", "link" : "genus\/Types$.html#doubleJavaType():genus.SimpleTypeD", "kind" : "def"}, {"label" : "intJavaType", "tail" : "(): SimpleTypeD", "member" : "genus.Types.intJavaType", "link" : "genus\/Types$.html#intJavaType():genus.SimpleTypeD", "kind" : "def"}, {"label" : "intType", "tail" : "(): SimpleTypeD", "member" : "genus.Types.intType", "link" : "genus\/Types$.html#intType():genus.SimpleTypeD", "kind" : "def"}, {"label" : "nothingType", "tail" : "(): SimpleTypeD", "member" : "genus.Types.nothingType", "link" : "genus\/Types$.html#nothingType():genus.SimpleTypeD", "kind" : "def"}, {"label" : "anyType", "tail" : "(): SimpleTypeD", "member" : "genus.Types.anyType", "link" : "genus\/Types$.html#anyType():genus.SimpleTypeD", "kind" : "def"}, {"label" : "cmpTypeDesignators", "tail" : "(a: SimpleTypeD, b: SimpleTypeD): Boolean", "member" : "genus.Types.cmpTypeDesignators", "link" : "genus\/Types$.html#cmpTypeDesignators(a:genus.SimpleTypeD,b:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"label" : "compareSequence", "tail" : "(tds1: Seq[SimpleTypeD], tds2: Seq[SimpleTypeD]): Boolean", "member" : "genus.Types.compareSequence", "link" : "genus\/Types$.html#compareSequence(tds1:Seq[genus.SimpleTypeD],tds2:Seq[genus.SimpleTypeD]):Boolean", "kind" : "def"}, {"label" : "mdtd", "tail" : "(tds: Set[SimpleTypeD]): Map[SimpleTypeD, (Set[SimpleTypeD], Set[SimpleTypeD])]", "member" : "genus.Types.mdtd", "link" : "genus\/Types$.html#mdtd(tds:Set[genus.SimpleTypeD]):Map[genus.SimpleTypeD,(Set[genus.SimpleTypeD],Set[genus.SimpleTypeD])]", "kind" : "def"}, {"label" : "notp", "tail" : ": (SimpleTypeD) => Boolean", "member" : "genus.Types.notp", "link" : "genus\/Types$.html#notp:genus.SimpleTypeD=>Boolean", "kind" : "val"}, {"label" : "combop", "tail" : ": (SimpleTypeD) => Boolean", "member" : "genus.Types.combop", "link" : "genus\/Types$.html#combop:genus.SimpleTypeD=>Boolean", "kind" : "val"}, {"label" : "orp", "tail" : ": (SimpleTypeD) => Boolean", "member" : "genus.Types.orp", "link" : "genus\/Types$.html#orp:genus.SimpleTypeD=>Boolean", "kind" : "val"}, {"label" : "andp", "tail" : ": (SimpleTypeD) => Boolean", "member" : "genus.Types.andp", "link" : "genus\/Types$.html#andp:genus.SimpleTypeD=>Boolean", "kind" : "val"}, {"label" : "memberp", "tail" : ": (SimpleTypeD) => Boolean", "member" : "genus.Types.memberp", "link" : "genus\/Types$.html#memberp:genus.SimpleTypeD=>Boolean", "kind" : "val"}, {"label" : "eqlp", "tail" : ": (SimpleTypeD) => Boolean", "member" : "genus.Types.eqlp", "link" : "genus\/Types$.html#eqlp:genus.SimpleTypeD=>Boolean", "kind" : "val"}, {"label" : "atomicp", "tail" : ": (SimpleTypeD) => Boolean", "member" : "genus.Types.atomicp", "link" : "genus\/Types$.html#atomicp:genus.SimpleTypeD=>Boolean", "kind" : "val"}, {"label" : "createMember", "tail" : "(xs: Seq[Any]): SimpleTypeD", "member" : "genus.Types.createMember", "link" : "genus\/Types$.html#createMember(xs:Seq[Any]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "createMemberFromPairs", "tail" : "(xs: Seq[(SimpleTypeD, Any)]): SimpleTypeD", "member" : "genus.Types.createMemberFromPairs", "link" : "genus\/Types$.html#createMemberFromPairs(xs:Seq[(genus.SimpleTypeD,Any)]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/Types$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/Types$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/Types$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/Types$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/Types$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/Types$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/Types$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/Types$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/Types$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/Types$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/Types$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/Types$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "genus\/Types$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/Types$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/Types$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/Types$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/Types$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/Types$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/Types$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "genus.TypeSystemWithLBdd", "shortDescription" : "", "object" : "genus\/TypeSystemWithLBdd$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "genus.TypeSystemWithLBdd.main", "link" : "genus\/TypeSystemWithLBdd$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "subtypep", "tail" : "(b1: LBdd, b2: LBdd): Option[Boolean]", "member" : "genus.TypeSystemWithLBdd.subtypep", "link" : "genus\/TypeSystemWithLBdd$.html#subtypep(b1:lbdd.LBdd,b2:lbdd.LBdd):Option[Boolean]", "kind" : "def"}, {"label" : "inhabitedDown", "tail" : "(b: LBdd): Option[Boolean]", "member" : "genus.TypeSystemWithLBdd.inhabitedDown", "link" : "genus\/TypeSystemWithLBdd$.html#inhabitedDown(b:lbdd.LBdd):Option[Boolean]", "kind" : "def"}, {"label" : "disjoint", "tail" : "(b1: LBdd, b2: LBdd): Option[Boolean]", "member" : "genus.TypeSystemWithLBdd.disjoint", "link" : "genus\/TypeSystemWithLBdd$.html#disjoint(b1:lbdd.LBdd,b2:lbdd.LBdd):Option[Boolean]", "kind" : "def"}, {"label" : "typeAsLBdd", "tail" : "(t: SimpleTypeD): LBdd", "member" : "genus.TypeSystemWithLBdd.typeAsLBdd", "link" : "genus\/TypeSystemWithLBdd$.html#typeAsLBdd(t:genus.SimpleTypeD):lbdd.LBdd", "kind" : "def"}, {"label" : "typeAsLBdd", "tail" : "(at: T): LBdd", "member" : "genus.TypeSystemWithLBdd.typeAsLBdd", "link" : "genus\/TypeSystemWithLBdd$.html#typeAsLBdd[T<:genus.TerminalType](at:T):lbdd.LBdd", "kind" : "def"}, {"label" : "withNewTypeHash", "tail" : "(code: => A): A", "member" : "genus.TypeSystemWithLBdd.withNewTypeHash", "link" : "genus\/TypeSystemWithLBdd$.html#withNewTypeHash[A](code:=>A):A", "kind" : "def"}, {"label" : "newHash", "tail" : "(): TYPE_HASH", "member" : "genus.TypeSystemWithLBdd.newHash", "link" : "genus\/TypeSystemWithLBdd$.html#newHash():genus.TypeSystemWithLBdd.TYPE_HASH", "kind" : "def"}, {"label" : "numAllocations", "tail" : ": DynamicVariable[Int]", "member" : "genus.TypeSystemWithLBdd.numAllocations", "link" : "genus\/TypeSystemWithLBdd$.html#numAllocations:scala.util.DynamicVariable[Int]", "kind" : "val"}, {"label" : "maybeHash", "tail" : ": DynamicVariable[Option[TYPE_HASH]]", "member" : "genus.TypeSystemWithLBdd.maybeHash", "link" : "genus\/TypeSystemWithLBdd$.html#maybeHash:scala.util.DynamicVariable[Option[genus.TypeSystemWithLBdd.TYPE_HASH]]", "kind" : "val"}, {"label" : "TYPE_HASH", "tail" : "", "member" : "genus.TypeSystemWithLBdd.TYPE_HASH", "link" : "genus\/TypeSystemWithLBdd$.html#TYPE_HASH=scala.collection.mutable.Map[genus.TerminalType,Int]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/TypeSystemWithLBdd$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/TypeSystemWithLBdd$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/TypeSystemWithLBdd$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/TypeSystemWithLBdd$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/TypeSystemWithLBdd$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/TypeSystemWithLBdd$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/TypeSystemWithLBdd$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/TypeSystemWithLBdd$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/TypeSystemWithLBdd$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/TypeSystemWithLBdd$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/TypeSystemWithLBdd$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/TypeSystemWithLBdd$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "genus\/TypeSystemWithLBdd$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/TypeSystemWithLBdd$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/TypeSystemWithLBdd$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/TypeSystemWithLBdd$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/TypeSystemWithLBdd$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/TypeSystemWithLBdd$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/TypeSystemWithLBdd$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "genus.WorldView", "shortDescription" : "", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "genus.WorldView.toString", "link" : "genus\/WorldView.html#toString():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "genus\/WorldView.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "genus\/WorldView.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "genus\/WorldView.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "genus\/WorldView.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "genus\/WorldView.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "genus\/WorldView.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "genus\/WorldView.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/WorldView.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/WorldView.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "genus\/WorldView.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "genus\/WorldView.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "genus\/WorldView.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "genus\/WorldView.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "genus\/WorldView.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "genus\/WorldView.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "genus\/WorldView.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "genus\/WorldView.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "genus\/WorldView.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "genus\/WorldView.html", "kind" : "class"}], "xymbolyco" : [{"name" : "xymbolyco.Dfa", "shortDescription" : "", "object" : "xymbolyco\/Dfa$.html", "members_class" : [{"label" : "findSinkStateIds", "tail" : "(): Set[Int]", "member" : "xymbolyco.Dfa.findSinkStateIds", "link" : "xymbolyco\/Dfa.html#findSinkStateIds():Set[Int]", "kind" : "def"}, {"label" : "vacuous", "tail" : "(): Option[Boolean]", "member" : "xymbolyco.Dfa.vacuous", "link" : "xymbolyco\/Dfa.html#vacuous():Option[Boolean]", "kind" : "def"}, {"label" : "simulate", "tail" : "(seq: IterableOnce[Σ]): Option[E]", "member" : "xymbolyco.Dfa.simulate", "link" : "xymbolyco\/Dfa.html#simulate(seq:IterableOnce[Σ]):Option[E]", "kind" : "def"}, {"label" : "findSpanningPathMap", "tail" : "(): Map[E, (Option[Boolean], Path)]", "member" : "xymbolyco.Dfa.findSpanningPathMap", "link" : "xymbolyco\/Dfa.html#findSpanningPathMap():Map[E,(Option[Boolean],Dfa.this.Path)]", "kind" : "def"}, {"label" : "spanningPath", "tail" : ": MaybePath", "member" : "xymbolyco.Dfa.spanningPath", "link" : "xymbolyco\/Dfa.html#spanningPath:Dfa.this.MaybePath", "kind" : "lazy val"}, {"label" : "MaybePath", "tail" : "", "member" : "xymbolyco.Dfa.MaybePath", "link" : "xymbolyco\/Dfa.html#MaybePath=Option[Either[Dfa.this.Path,Dfa.this.Path]]", "kind" : "type"}, {"label" : "Path", "tail" : "", "member" : "xymbolyco.Dfa.Path", "link" : "xymbolyco\/Dfa.html#Path=List[xymbolyco.State[Σ,L,E]]", "kind" : "type"}, {"label" : "findTrace", "tail" : "(requireSatisfiable: Boolean): Option[List[L]]", "member" : "xymbolyco.Dfa.findTrace", "link" : "xymbolyco\/Dfa.html#findTrace(requireSatisfiable:Boolean):Option[List[L]]", "kind" : "def"}, {"label" : "pathToLabels", "tail" : "(path: Path): List[L]", "member" : "xymbolyco.Dfa.pathToLabels", "link" : "xymbolyco\/Dfa.html#pathToLabels(path:Dfa.this.Path):List[L]", "kind" : "def"}, {"label" : "findReachableFinal", "tail" : "(seq: IterableOnce[Σ]): Option[State[Σ, L, E]]", "member" : "xymbolyco.Dfa.findReachableFinal", "link" : "xymbolyco\/Dfa.html#findReachableFinal(seq:IterableOnce[Σ]):Option[xymbolyco.State[Σ,L,E]]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "xymbolyco.Dfa.toString", "link" : "xymbolyco\/Dfa.html#toString():String", "kind" : "def"}, {"label" : "F", "tail" : ": Set[State[Σ, L, E]]", "member" : "xymbolyco.Dfa.F", "link" : "xymbolyco\/Dfa.html#F:Set[xymbolyco.State[Σ,L,E]]", "kind" : "val"}, {"label" : "q0", "tail" : ": State[Σ, L, E]", "member" : "xymbolyco.Dfa.q0", "link" : "xymbolyco\/Dfa.html#q0:xymbolyco.State[Σ,L,E]", "kind" : "val"}, {"label" : "Q", "tail" : ": Set[State[Σ, L, E]]", "member" : "xymbolyco.Dfa.Q", "link" : "xymbolyco\/Dfa.html#Q:Set[xymbolyco.State[Σ,L,E]]", "kind" : "val"}, {"label" : "delta", "tail" : "(s: State[Σ, L, E], label: L): State[Σ, L, E]", "member" : "xymbolyco.Dfa.delta", "link" : "xymbolyco\/Dfa.html#delta(s:xymbolyco.State[Σ,L,E],label:L):xymbolyco.State[Σ,L,E]", "kind" : "def"}, {"label" : "idToState", "tail" : "(id: Int): State[Σ, L, E]", "member" : "xymbolyco.Dfa.idToState", "link" : "xymbolyco\/Dfa.html#idToState(id:Int):xymbolyco.State[Σ,L,E]", "kind" : "def"}, {"label" : "exitValue", "tail" : "(q: State[Σ, L, E]): E", "member" : "xymbolyco.Dfa.exitValue", "link" : "xymbolyco\/Dfa.html#exitValue(q:xymbolyco.State[Σ,L,E]):E", "kind" : "def"}, {"label" : "predecessors", "tail" : "(): Map[Int, Set[Int]]", "member" : "xymbolyco.Dfa.predecessors", "link" : "xymbolyco\/Dfa.html#predecessors():Map[Int,Set[Int]]", "kind" : "def"}, {"label" : "successors", "tail" : "(): Map[Int, Set[Int]]", "member" : "xymbolyco.Dfa.successors", "link" : "xymbolyco\/Dfa.html#successors():Map[Int,Set[Int]]", "kind" : "def"}, {"member" : "xymbolyco.Dfa#<init>", "error" : "unsupported entity"}, {"label" : "fMap", "tail" : ": Map[Int, E]", "member" : "xymbolyco.Dfa.fMap", "link" : "xymbolyco\/Dfa.html#fMap:Map[Int,E]", "kind" : "val"}, {"label" : "labeler", "tail" : ": Labeler[Σ, L]", "member" : "xymbolyco.Dfa.labeler", "link" : "xymbolyco\/Dfa.html#labeler:xymbolyco.Labeler[Σ,L]", "kind" : "val"}, {"label" : "protoDelta", "tail" : ": Set[(Int, L, Int)]", "member" : "xymbolyco.Dfa.protoDelta", "link" : "xymbolyco\/Dfa.html#protoDelta:Set[(Int,L,Int)]", "kind" : "val"}, {"label" : "Fids", "tail" : ": Set[Int]", "member" : "xymbolyco.Dfa.Fids", "link" : "xymbolyco\/Dfa.html#Fids:Set[Int]", "kind" : "val"}, {"label" : "q0id", "tail" : ": Int", "member" : "xymbolyco.Dfa.q0id", "link" : "xymbolyco\/Dfa.html#q0id:Int", "kind" : "val"}, {"label" : "Qids", "tail" : ": Set[Int]", "member" : "xymbolyco.Dfa.Qids", "link" : "xymbolyco\/Dfa.html#Qids:Set[Int]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/Dfa.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/Dfa.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/Dfa.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/Dfa.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/Dfa.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/Dfa.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/Dfa.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Dfa.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Dfa.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Dfa.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/Dfa.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/Dfa.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/Dfa.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "xymbolyco\/Dfa.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "xymbolyco\/Dfa.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/Dfa.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/Dfa.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/Dfa.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "dfaEquivalent", "tail" : "(dfa1: Dfa[Σ, L, E], dfa2: Dfa[Σ, L, E]): Option[Boolean]", "member" : "xymbolyco.Dfa.dfaEquivalent", "link" : "xymbolyco\/Dfa$.html#dfaEquivalent[Σ,L,E](dfa1:xymbolyco.Dfa[Σ,L,E],dfa2:xymbolyco.Dfa[Σ,L,E]):Option[Boolean]", "kind" : "def"}, {"label" : "dfaUnion", "tail" : "(dfa1: Dfa[Σ, L, E], dfa2: Dfa[Σ, L, E], arbitrate: (E, E) => E): Dfa[Σ, L, E]", "member" : "xymbolyco.Dfa.dfaUnion", "link" : "xymbolyco\/Dfa$.html#dfaUnion[Σ,L,E](dfa1:xymbolyco.Dfa[Σ,L,E],dfa2:xymbolyco.Dfa[Σ,L,E],arbitrate:(E,E)=>E):xymbolyco.Dfa[Σ,L,E]", "kind" : "def"}, {"label" : "dfaXor", "tail" : "(dfa1: Dfa[Σ, L, E], dfa2: Dfa[Σ, L, E], arbitrate: (E, E) => E): Dfa[Σ, L, E]", "member" : "xymbolyco.Dfa.dfaXor", "link" : "xymbolyco\/Dfa$.html#dfaXor[Σ,L,E](dfa1:xymbolyco.Dfa[Σ,L,E],dfa2:xymbolyco.Dfa[Σ,L,E],arbitrate:(E,E)=>E):xymbolyco.Dfa[Σ,L,E]", "kind" : "def"}, {"label" : "defaultArbitrate", "tail" : "(b: E, c: E): E", "member" : "xymbolyco.Dfa.defaultArbitrate", "link" : "xymbolyco\/Dfa$.html#defaultArbitrate[E](b:E,c:E):E", "kind" : "def"}, {"label" : "combineFmap", "tail" : "(e1: Option[E], e2: Option[E], arbitrate: (E, E) => E): Option[E]", "member" : "xymbolyco.Dfa.combineFmap", "link" : "xymbolyco\/Dfa$.html#combineFmap[E](e1:Option[E],e2:Option[E],arbitrate:(E,E)=>E):Option[E]", "kind" : "def"}, {"label" : "apply", "tail" : "(Qids: Set[Int], q0id: Int, Fids: Set[Int], protoDelta: Set[(Int, L, Int)], labeler: Labeler[Σ, L], fMap: Map[Int, E]): Dfa[Σ, L, E]", "member" : "xymbolyco.Dfa.apply", "link" : "xymbolyco\/Dfa$.html#apply[Σ,L,E](Qids:Set[Int],q0id:Int,Fids:Set[Int],protoDelta:Set[(Int,L,Int)],labeler:xymbolyco.Labeler[Σ,L],fMap:Map[Int,E]):xymbolyco.Dfa[Σ,L,E]", "kind" : "def"}, {"label" : "mergeParallel", "tail" : "(labeler: Labeler[Σ, L], transitions: Seq[(Int, L, Int)]): Set[(Int, L, Int)]", "member" : "xymbolyco.Dfa.mergeParallel", "link" : "xymbolyco\/Dfa$.html#mergeParallel[Σ,L](labeler:xymbolyco.Labeler[Σ,L],transitions:Seq[(Int,L,Int)]):Set[(Int,L,Int)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/Dfa$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/Dfa$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/Dfa$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/Dfa$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/Dfa$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/Dfa$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/Dfa$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Dfa$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Dfa$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Dfa$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/Dfa$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/Dfa$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "xymbolyco\/Dfa$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/Dfa$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "xymbolyco\/Dfa$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "xymbolyco\/Dfa$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/Dfa$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/Dfa$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/Dfa$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "xymbolyco\/Dfa.html", "kind" : "class"}, {"name" : "xymbolyco.DFAIso", "shortDescription" : "", "object" : "xymbolyco\/DFAIso$.html", "members_object" : [{"label" : "edgecost", "tail" : "(size: Int, label: SimpleTypeD): Double", "member" : "xymbolyco.DFAIso.edgecost", "link" : "xymbolyco\/DFAIso$.html#edgecost(size:Int,label:genus.SimpleTypeD):Double", "kind" : "def"}, {"label" : "isIsomorphic2", "tail" : "(dfa: Dfa[Any, SimpleTypeD, Int], dfa2: Dfa[Any, SimpleTypeD, Int]): (Option[Boolean], Map[Any, Option[Boolean]])", "member" : "xymbolyco.DFAIso.isIsomorphic2", "link" : "xymbolyco\/DFAIso$.html#isIsomorphic2(dfa:xymbolyco.Dfa[Any,genus.SimpleTypeD,Int],dfa2:xymbolyco.Dfa[Any,genus.SimpleTypeD,Int]):(Option[Boolean],Map[Any,Option[Boolean]])", "kind" : "def"}, {"label" : "isIsomorphic", "tail" : "(dfa: Dfa[Any, SimpleTypeD, E], dfa2: Dfa[Any, SimpleTypeD, E]): (Option[Boolean], Map[E, Option[Boolean]])", "member" : "xymbolyco.DFAIso.isIsomorphic", "link" : "xymbolyco\/DFAIso$.html#isIsomorphic[E](dfa:xymbolyco.Dfa[Any,genus.SimpleTypeD,E],dfa2:xymbolyco.Dfa[Any,genus.SimpleTypeD,E]):(Option[Boolean],Map[E,Option[Boolean]])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/DFAIso$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/DFAIso$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/DFAIso$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/DFAIso$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/DFAIso$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/DFAIso$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/DFAIso$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/DFAIso$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/DFAIso$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/DFAIso$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/DFAIso$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/DFAIso$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "xymbolyco\/DFAIso$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/DFAIso$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "xymbolyco\/DFAIso$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "xymbolyco\/DFAIso$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/DFAIso$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/DFAIso$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/DFAIso$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "xymbolyco.Extract", "shortDescription" : "", "object" : "xymbolyco\/Extract$.html", "members_object" : [{"label" : "extractRte", "tail" : "(dfa_given: Dfa[Any, SimpleTypeD, E]): Map[E, Rte]", "member" : "xymbolyco.Extract.extractRte", "link" : "xymbolyco\/Extract$.html#extractRte[E](dfa_given:xymbolyco.Dfa[Any,genus.SimpleTypeD,E]):Map[E,rte.Rte]", "kind" : "def"}, {"label" : "dfaToRte", "tail" : "(dfa: Dfa[Any, SimpleTypeD, E], default: E): Map[E, Rte]", "member" : "xymbolyco.Extract.dfaToRte", "link" : "xymbolyco\/Extract$.html#dfaToRte[E](dfa:xymbolyco.Dfa[Any,genus.SimpleTypeD,E],default:E):Map[E,rte.Rte]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/Extract$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/Extract$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/Extract$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/Extract$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/Extract$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/Extract$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/Extract$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Extract$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Extract$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Extract$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/Extract$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/Extract$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "xymbolyco\/Extract$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/Extract$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "xymbolyco\/Extract$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "xymbolyco\/Extract$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/Extract$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/Extract$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/Extract$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "xymbolyco.GenusBddLabeler", "shortDescription" : "", "members_case class" : [{"label" : "inhabited", "tail" : "(l1: GenusBdd): Option[Boolean]", "member" : "xymbolyco.GenusBddLabeler.inhabited", "link" : "xymbolyco\/GenusBddLabeler.html#inhabited(l1:genusbdd.GenusBdd):Option[Boolean]", "kind" : "def"}, {"label" : "subtractLabels", "tail" : "(l1: GenusBdd, ls: Seq[GenusBdd]): GenusBdd", "member" : "xymbolyco.GenusBddLabeler.subtractLabels", "link" : "xymbolyco\/GenusBddLabeler.html#subtractLabels(l1:genusbdd.GenusBdd,ls:Seq[genusbdd.GenusBdd]):genusbdd.GenusBdd", "kind" : "def"}, {"label" : "intersectLabels", "tail" : "(l1: GenusBdd, l2: GenusBdd): GenusBdd", "member" : "xymbolyco.GenusBddLabeler.intersectLabels", "link" : "xymbolyco\/GenusBddLabeler.html#intersectLabels(l1:genusbdd.GenusBdd,l2:genusbdd.GenusBdd):genusbdd.GenusBdd", "kind" : "def"}, {"label" : "combineLabels", "tail" : "(a: GenusBdd, b: GenusBdd): GenusBdd", "member" : "xymbolyco.GenusBddLabeler.combineLabels", "link" : "xymbolyco\/GenusBddLabeler.html#combineLabels(a:genusbdd.GenusBdd,b:genusbdd.GenusBdd):genusbdd.GenusBdd", "kind" : "def"}, {"label" : "member", "tail" : "(a: Any, gb: GenusBdd): Boolean", "member" : "xymbolyco.GenusBddLabeler.member", "link" : "xymbolyco\/GenusBddLabeler.html#member(a:Any,gb:genusbdd.GenusBdd):Boolean", "kind" : "def"}, {"member" : "xymbolyco.GenusBddLabeler#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "xymbolyco\/GenusBddLabeler.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "successor", "tail" : "(transitions: Set[Transition[Any, GenusBdd, E]]): (Any) => Option[State[Any, GenusBdd, E]]", "member" : "xymbolyco.Labeler.successor", "link" : "xymbolyco\/GenusBddLabeler.html#successor[E](transitions:Set[xymbolyco.Transition[Σ,L,E]]):Σ=>Option[xymbolyco.State[Σ,L,E]]", "kind" : "def"}, {"label" : "maybeIntersectLabels", "tail" : "(l1: GenusBdd, l2: GenusBdd): Option[GenusBdd]", "member" : "xymbolyco.Labeler.maybeIntersectLabels", "link" : "xymbolyco\/GenusBddLabeler.html#maybeIntersectLabels(l1:L,l2:L):Option[L]", "kind" : "def"}, {"label" : "universal", "tail" : "(label: GenusBdd): Boolean", "member" : "xymbolyco.Labeler.universal", "link" : "xymbolyco\/GenusBddLabeler.html#universal(label:L):Boolean", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(l1: GenusBdd): String", "member" : "xymbolyco.Labeler.toLaTeX", "link" : "xymbolyco\/GenusBddLabeler.html#toLaTeX(l1:L):String", "kind" : "def"}, {"label" : "toDot", "tail" : "(l1: GenusBdd): String", "member" : "xymbolyco.Labeler.toDot", "link" : "xymbolyco\/GenusBddLabeler.html#toDot(l1:L):String", "kind" : "def"}, {"label" : "graphicalText", "tail" : "(): Seq[String]", "member" : "xymbolyco.Labeler.graphicalText", "link" : "xymbolyco\/GenusBddLabeler.html#graphicalText():Seq[String]", "kind" : "def"}, {"label" : "universe", "tail" : ": GenusBdd", "member" : "xymbolyco.Labeler.universe", "link" : "xymbolyco\/GenusBddLabeler.html#universe:L", "kind" : "lazy val"}, {"label" : "equivLabels", "tail" : "(a: GenusBdd, b: GenusBdd): Boolean", "member" : "xymbolyco.Labeler.equivLabels", "link" : "xymbolyco\/GenusBddLabeler.html#equivLabels(a:L,b:L):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/GenusBddLabeler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/GenusBddLabeler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/GenusBddLabeler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/GenusBddLabeler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/GenusBddLabeler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/GenusBddLabeler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/GenusBddLabeler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/GenusBddLabeler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/GenusBddLabeler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/GenusBddLabeler.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/GenusBddLabeler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/GenusBddLabeler.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/GenusBddLabeler.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/GenusBddLabeler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/GenusBddLabeler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/GenusBddLabeler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "xymbolyco\/GenusBddLabeler.html", "kind" : "case class"}, {"name" : "xymbolyco.GenusLabeler", "shortDescription" : "", "members_case class" : [{"label" : "successor", "tail" : "(transitions: Set[Transition[Any, SimpleTypeD, E]]): (Any) => Option[State[Any, SimpleTypeD, E]]", "member" : "xymbolyco.GenusLabeler.successor", "link" : "xymbolyco\/GenusLabeler.html#successor[E](transitions:Set[xymbolyco.Transition[Any,genus.SimpleTypeD,E]]):Any=>Option[xymbolyco.State[Any,genus.SimpleTypeD,E]]", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(lab: SimpleTypeD): String", "member" : "xymbolyco.GenusLabeler.toLaTeX", "link" : "xymbolyco\/GenusLabeler.html#toLaTeX(lab:genus.SimpleTypeD):String", "kind" : "def"}, {"label" : "toDot", "tail" : "(lab: SimpleTypeD): String", "member" : "xymbolyco.GenusLabeler.toDot", "link" : "xymbolyco\/GenusLabeler.html#toDot(lab:genus.SimpleTypeD):String", "kind" : "def"}, {"label" : "graphicalText", "tail" : "(): Seq[String]", "member" : "xymbolyco.GenusLabeler.graphicalText", "link" : "xymbolyco\/GenusLabeler.html#graphicalText():Seq[String]", "kind" : "def"}, {"label" : "inhabited", "tail" : "(l1: SimpleTypeD): Option[Boolean]", "member" : "xymbolyco.GenusLabeler.inhabited", "link" : "xymbolyco\/GenusLabeler.html#inhabited(l1:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "subtractLabels", "tail" : "(l1: SimpleTypeD, ls: Seq[SimpleTypeD]): SimpleTypeD", "member" : "xymbolyco.GenusLabeler.subtractLabels", "link" : "xymbolyco\/GenusLabeler.html#subtractLabels(l1:genus.SimpleTypeD,ls:Seq[genus.SimpleTypeD]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "intersectLabels", "tail" : "(l1: SimpleTypeD, l2: SimpleTypeD): SimpleTypeD", "member" : "xymbolyco.GenusLabeler.intersectLabels", "link" : "xymbolyco\/GenusLabeler.html#intersectLabels(l1:genus.SimpleTypeD,l2:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "universe", "tail" : ": SimpleTypeD", "member" : "xymbolyco.GenusLabeler.universe", "link" : "xymbolyco\/GenusLabeler.html#universe:genus.SimpleTypeD", "kind" : "lazy val"}, {"label" : "combineLabels", "tail" : "(a: SimpleTypeD, b: SimpleTypeD): SimpleTypeD", "member" : "xymbolyco.GenusLabeler.combineLabels", "link" : "xymbolyco\/GenusLabeler.html#combineLabels(a:genus.SimpleTypeD,b:genus.SimpleTypeD):genus.SimpleTypeD", "kind" : "def"}, {"label" : "member", "tail" : "(a: Any, rt: SimpleTypeD): Boolean", "member" : "xymbolyco.GenusLabeler.member", "link" : "xymbolyco\/GenusLabeler.html#member(a:Any,rt:genus.SimpleTypeD):Boolean", "kind" : "def"}, {"member" : "xymbolyco.GenusLabeler#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "xymbolyco\/GenusLabeler.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "maybeIntersectLabels", "tail" : "(l1: SimpleTypeD, l2: SimpleTypeD): Option[SimpleTypeD]", "member" : "xymbolyco.Labeler.maybeIntersectLabels", "link" : "xymbolyco\/GenusLabeler.html#maybeIntersectLabels(l1:L,l2:L):Option[L]", "kind" : "def"}, {"label" : "universal", "tail" : "(label: SimpleTypeD): Boolean", "member" : "xymbolyco.Labeler.universal", "link" : "xymbolyco\/GenusLabeler.html#universal(label:L):Boolean", "kind" : "def"}, {"label" : "equivLabels", "tail" : "(a: SimpleTypeD, b: SimpleTypeD): Boolean", "member" : "xymbolyco.Labeler.equivLabels", "link" : "xymbolyco\/GenusLabeler.html#equivLabels(a:L,b:L):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/GenusLabeler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/GenusLabeler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/GenusLabeler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/GenusLabeler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/GenusLabeler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/GenusLabeler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/GenusLabeler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/GenusLabeler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/GenusLabeler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/GenusLabeler.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/GenusLabeler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/GenusLabeler.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/GenusLabeler.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/GenusLabeler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/GenusLabeler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/GenusLabeler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "xymbolyco\/GenusLabeler.html", "kind" : "case class"}, {"name" : "xymbolyco.GraphViz", "shortDescription" : "", "object" : "xymbolyco\/GraphViz$.html", "members_object" : [{"label" : "dfaToDot", "tail" : "(dfa: Dfa[Sigma, L, E], stream: OutputStream, title: String, abbrev: Boolean, showSink: Boolean, givenLabels: Seq[L], printLatex: Boolean): Unit", "member" : "xymbolyco.GraphViz.dfaToDot", "link" : "xymbolyco\/GraphViz$.html#dfaToDot[Sigma,L,E](dfa:xymbolyco.Dfa[Sigma,L,E],stream:java.io.OutputStream,title:String,abbrev:Boolean,showSink:Boolean,givenLabels:Seq[L],printLatex:Boolean):Unit", "kind" : "def"}, {"label" : "dfaToPng", "tail" : "(dfa: Dfa[Sigma, L, E], title: String, abbrev: Boolean, label: Option[String], showSink: Boolean, dotFileCB: (String) => Unit, givenLabels: Seq[L], printLatex: Boolean): String", "member" : "xymbolyco.GraphViz.dfaToPng", "link" : "xymbolyco\/GraphViz$.html#dfaToPng[Sigma,L,E](dfa:xymbolyco.Dfa[Sigma,L,E],title:String,abbrev:Boolean,label:Option[String],showSink:Boolean,dotFileCB:String=>Unit,givenLabels:Seq[L],printLatex:Boolean):String", "kind" : "def"}, {"label" : "dfaView", "tail" : "(dfa: Dfa[Sigma, L, E], title: String, abbrev: Boolean, label: Option[String], showSink: Boolean, dotFileCB: (String) => Unit, givenLabels: Seq[L], printLatex: Boolean): String", "member" : "xymbolyco.GraphViz.dfaView", "link" : "xymbolyco\/GraphViz$.html#dfaView[Sigma,L,E](dfa:xymbolyco.Dfa[Sigma,L,E],title:String,abbrev:Boolean,label:Option[String],showSink:Boolean,dotFileCB:String=>Unit,givenLabels:Seq[L],printLatex:Boolean):String", "kind" : "def"}, {"label" : "multiLineString", "tail" : "(str: String, maxLine: Int): String", "member" : "xymbolyco.GraphViz.multiLineString", "link" : "xymbolyco\/GraphViz$.html#multiLineString(str:String,maxLine:Int):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/GraphViz$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/GraphViz$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/GraphViz$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/GraphViz$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/GraphViz$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/GraphViz$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/GraphViz$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/GraphViz$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/GraphViz$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/GraphViz$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/GraphViz$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/GraphViz$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "xymbolyco\/GraphViz$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/GraphViz$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "xymbolyco\/GraphViz$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "xymbolyco\/GraphViz$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/GraphViz$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/GraphViz$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/GraphViz$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "xymbolyco.IfThenElseFalse", "shortDescription" : "", "members_case class" : [{"label" : "apply", "tail" : "(a: Any): Option[State[Any, SimpleTypeD, E]]", "member" : "xymbolyco.IfThenElseFalse.apply", "link" : "xymbolyco\/IfThenElseFalse.html#apply(a:Any):Option[xymbolyco.State[Any,genus.SimpleTypeD,E]]", "kind" : "def"}, {"member" : "xymbolyco.IfThenElseFalse#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "xymbolyco\/IfThenElseFalse.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/IfThenElseFalse.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/IfThenElseFalse.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/IfThenElseFalse.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/IfThenElseFalse.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/IfThenElseFalse.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/IfThenElseFalse.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/IfThenElseFalse.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/IfThenElseFalse.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/IfThenElseFalse.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/IfThenElseFalse.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/IfThenElseFalse.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/IfThenElseFalse.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/IfThenElseFalse.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/IfThenElseFalse.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/IfThenElseFalse.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/IfThenElseFalse.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "xymbolyco\/IfThenElseFalse.html", "kind" : "case class"}, {"name" : "xymbolyco.IfThenElseNode", "shortDescription" : "", "members_case class" : [{"label" : "apply", "tail" : "(a: Any): Option[State[Any, SimpleTypeD, E]]", "member" : "xymbolyco.IfThenElseNode.apply", "link" : "xymbolyco\/IfThenElseNode.html#apply(a:Any):Option[xymbolyco.State[Any,genus.SimpleTypeD,E]]", "kind" : "def"}, {"label" : "ifFalse", "tail" : ": IfThenElseTree[E]", "member" : "xymbolyco.IfThenElseNode.ifFalse", "link" : "xymbolyco\/IfThenElseNode.html#ifFalse:xymbolyco.IfThenElseTree[E]", "kind" : "lazy val"}, {"label" : "ifTrue", "tail" : ": IfThenElseTree[E]", "member" : "xymbolyco.IfThenElseNode.ifTrue", "link" : "xymbolyco\/IfThenElseNode.html#ifTrue:xymbolyco.IfThenElseTree[E]", "kind" : "lazy val"}, {"label" : "reduceTransitions", "tail" : "(search: SimpleTypeD, intersect: SimpleTypeD, replace: SimpleTypeD): Set[Transition[Any, SimpleTypeD, E]]", "member" : "xymbolyco.IfThenElseNode.reduceTransitions", "link" : "xymbolyco\/IfThenElseNode.html#reduceTransitions(search:genus.SimpleTypeD,intersect:genus.SimpleTypeD,replace:genus.SimpleTypeD):Set[xymbolyco.Transition[Any,genus.SimpleTypeD,E]]", "kind" : "def"}, {"label" : "tdt", "tail" : ": List[SimpleTypeD]", "member" : "xymbolyco.IfThenElseNode.tdt", "link" : "xymbolyco\/IfThenElseNode.html#tdt:List[genus.SimpleTypeD]", "kind" : "val"}, {"label" : "tdh", "tail" : ": SimpleTypeD", "member" : "xymbolyco.IfThenElseNode.tdh", "link" : "xymbolyco\/IfThenElseNode.html#tdh:genus.SimpleTypeD", "kind" : "val"}, {"member" : "xymbolyco.IfThenElseNode#<init>", "error" : "unsupported entity"}, {"label" : "transitions", "tail" : ": Set[Transition[Any, SimpleTypeD, E]]", "member" : "xymbolyco.IfThenElseNode.transitions", "link" : "xymbolyco\/IfThenElseNode.html#transitions:Set[xymbolyco.Transition[Any,genus.SimpleTypeD,E]]", "kind" : "val"}, {"label" : "tds", "tail" : ": List[SimpleTypeD]", "member" : "xymbolyco.IfThenElseNode.tds", "link" : "xymbolyco\/IfThenElseNode.html#tds:List[genus.SimpleTypeD]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "xymbolyco\/IfThenElseNode.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/IfThenElseNode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/IfThenElseNode.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/IfThenElseNode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/IfThenElseNode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/IfThenElseNode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/IfThenElseNode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/IfThenElseNode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/IfThenElseNode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/IfThenElseNode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/IfThenElseNode.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/IfThenElseNode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/IfThenElseNode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/IfThenElseNode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/IfThenElseNode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/IfThenElseNode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/IfThenElseNode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "xymbolyco\/IfThenElseNode.html", "kind" : "case class"}, {"name" : "xymbolyco.IfThenElseTree", "shortDescription" : "", "object" : "xymbolyco\/IfThenElseTree$.html", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/IfThenElseTree.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/IfThenElseTree.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/IfThenElseTree.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/IfThenElseTree.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/IfThenElseTree.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/IfThenElseTree.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/IfThenElseTree.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/IfThenElseTree.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/IfThenElseTree.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/IfThenElseTree.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/IfThenElseTree.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/IfThenElseTree.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "xymbolyco\/IfThenElseTree.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/IfThenElseTree.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "xymbolyco\/IfThenElseTree.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "xymbolyco\/IfThenElseTree.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/IfThenElseTree.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/IfThenElseTree.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/IfThenElseTree.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(a: Any): Option[State[Any, SimpleTypeD, E]]", "member" : "xymbolyco.IfThenElseTree.apply", "link" : "xymbolyco\/IfThenElseTree.html#apply(a:Any):Option[xymbolyco.State[Any,genus.SimpleTypeD,E]]", "kind" : "abstract def"}], "members_object" : [{"label" : "apply", "tail" : "(tds: List[SimpleTypeD], transitions: Set[Transition[Any, SimpleTypeD, E]]): IfThenElseTree[E]", "member" : "xymbolyco.IfThenElseTree.apply", "link" : "xymbolyco\/IfThenElseTree$.html#apply[E](tds:List[genus.SimpleTypeD],transitions:Set[xymbolyco.Transition[Any,genus.SimpleTypeD,E]]):xymbolyco.IfThenElseTree[E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/IfThenElseTree$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/IfThenElseTree$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/IfThenElseTree$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/IfThenElseTree$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/IfThenElseTree$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/IfThenElseTree$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/IfThenElseTree$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/IfThenElseTree$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/IfThenElseTree$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/IfThenElseTree$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/IfThenElseTree$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/IfThenElseTree$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "xymbolyco\/IfThenElseTree$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/IfThenElseTree$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "xymbolyco\/IfThenElseTree$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "xymbolyco\/IfThenElseTree$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/IfThenElseTree$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/IfThenElseTree$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/IfThenElseTree$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "xymbolyco\/IfThenElseTree.html", "kind" : "class"}, {"name" : "xymbolyco.IfThenElseTrue", "shortDescription" : "", "members_case class" : [{"label" : "apply", "tail" : "(a: Any): Option[State[Any, SimpleTypeD, E]]", "member" : "xymbolyco.IfThenElseTrue.apply", "link" : "xymbolyco\/IfThenElseTrue.html#apply(a:Any):Option[xymbolyco.State[Any,genus.SimpleTypeD,E]]", "kind" : "def"}, {"member" : "xymbolyco.IfThenElseTrue#<init>", "error" : "unsupported entity"}, {"label" : "dest", "tail" : ": State[Any, SimpleTypeD, E]", "member" : "xymbolyco.IfThenElseTrue.dest", "link" : "xymbolyco\/IfThenElseTrue.html#dest:xymbolyco.State[Any,genus.SimpleTypeD,E]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "xymbolyco\/IfThenElseTrue.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/IfThenElseTrue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/IfThenElseTrue.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/IfThenElseTrue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/IfThenElseTrue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/IfThenElseTrue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/IfThenElseTrue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/IfThenElseTrue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/IfThenElseTrue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/IfThenElseTrue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/IfThenElseTrue.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/IfThenElseTrue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/IfThenElseTrue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/IfThenElseTrue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/IfThenElseTrue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/IfThenElseTrue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/IfThenElseTrue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "xymbolyco\/IfThenElseTrue.html", "kind" : "case class"}, {"name" : "xymbolyco.Labeler", "shortDescription" : "", "members_class" : [{"label" : "successor", "tail" : "(transitions: Set[Transition[Σ, L, E]]): (Σ) => Option[State[Σ, L, E]]", "member" : "xymbolyco.Labeler.successor", "link" : "xymbolyco\/Labeler.html#successor[E](transitions:Set[xymbolyco.Transition[Σ,L,E]]):Σ=>Option[xymbolyco.State[Σ,L,E]]", "kind" : "def"}, {"label" : "maybeIntersectLabels", "tail" : "(l1: L, l2: L): Option[L]", "member" : "xymbolyco.Labeler.maybeIntersectLabels", "link" : "xymbolyco\/Labeler.html#maybeIntersectLabels(l1:L,l2:L):Option[L]", "kind" : "def"}, {"label" : "universal", "tail" : "(label: L): Boolean", "member" : "xymbolyco.Labeler.universal", "link" : "xymbolyco\/Labeler.html#universal(label:L):Boolean", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(l1: L): String", "member" : "xymbolyco.Labeler.toLaTeX", "link" : "xymbolyco\/Labeler.html#toLaTeX(l1:L):String", "kind" : "def"}, {"label" : "toDot", "tail" : "(l1: L): String", "member" : "xymbolyco.Labeler.toDot", "link" : "xymbolyco\/Labeler.html#toDot(l1:L):String", "kind" : "def"}, {"label" : "graphicalText", "tail" : "(): Seq[String]", "member" : "xymbolyco.Labeler.graphicalText", "link" : "xymbolyco\/Labeler.html#graphicalText():Seq[String]", "kind" : "def"}, {"label" : "inhabited", "tail" : "(l1: L): Option[Boolean]", "member" : "xymbolyco.Labeler.inhabited", "link" : "xymbolyco\/Labeler.html#inhabited(l1:L):Option[Boolean]", "kind" : "def"}, {"label" : "subtractLabels", "tail" : "(l1: L, ls: Seq[L]): L", "member" : "xymbolyco.Labeler.subtractLabels", "link" : "xymbolyco\/Labeler.html#subtractLabels(l1:L,ls:Seq[L]):L", "kind" : "def"}, {"label" : "intersectLabels", "tail" : "(l1: L, l2: L): L", "member" : "xymbolyco.Labeler.intersectLabels", "link" : "xymbolyco\/Labeler.html#intersectLabels(l1:L,l2:L):L", "kind" : "def"}, {"label" : "universe", "tail" : ": L", "member" : "xymbolyco.Labeler.universe", "link" : "xymbolyco\/Labeler.html#universe:L", "kind" : "lazy val"}, {"label" : "equivLabels", "tail" : "(a: L, b: L): Boolean", "member" : "xymbolyco.Labeler.equivLabels", "link" : "xymbolyco\/Labeler.html#equivLabels(a:L,b:L):Boolean", "kind" : "def"}, {"member" : "xymbolyco.Labeler#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/Labeler.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/Labeler.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/Labeler.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/Labeler.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/Labeler.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/Labeler.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/Labeler.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Labeler.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Labeler.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Labeler.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/Labeler.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/Labeler.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "xymbolyco\/Labeler.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/Labeler.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "xymbolyco\/Labeler.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "xymbolyco\/Labeler.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/Labeler.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/Labeler.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/Labeler.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "combineLabels", "tail" : "(l1: L, l2: L): L", "member" : "xymbolyco.Labeler.combineLabels", "link" : "xymbolyco\/Labeler.html#combineLabels(l1:L,l2:L):L", "kind" : "abstract def"}, {"label" : "member", "tail" : "(s: Σ, lab: L): Boolean", "member" : "xymbolyco.Labeler.member", "link" : "xymbolyco\/Labeler.html#member(s:Σ,lab:L):Boolean", "kind" : "abstract def"}], "class" : "xymbolyco\/Labeler.html", "kind" : "class"}, {"name" : "xymbolyco.Minimize", "shortDescription" : "", "object" : "xymbolyco\/Minimize$.html", "members_object" : [{"label" : "sxp", "tail" : "(dfa1: Dfa[Σ, L, E], dfa2: Dfa[Σ, L, E], arbitrateFinal: (Boolean, Boolean) => Boolean, combineFmap: (Option[E], Option[E]) => Option[E]): Dfa[Σ, L, E]", "member" : "xymbolyco.Minimize.sxp", "link" : "xymbolyco\/Minimize$.html#sxp[Σ,L,E](dfa1:xymbolyco.Dfa[Σ,L,E],dfa2:xymbolyco.Dfa[Σ,L,E],arbitrateFinal:(Boolean,Boolean)=>Boolean,combineFmap:(Option[E],Option[E])=>Option[E]):xymbolyco.Dfa[Σ,L,E]", "kind" : "def"}, {"label" : "complete", "tail" : "(dfa: Dfa[Σ, L, E]): Dfa[Σ, L, E]", "member" : "xymbolyco.Minimize.complete", "link" : "xymbolyco\/Minimize$.html#complete[Σ,L,E](dfa:xymbolyco.Dfa[Σ,L,E]):xymbolyco.Dfa[Σ,L,E]", "kind" : "def"}, {"label" : "findHopcroftPartition", "tail" : "(dfa: Dfa[Σ, L, E]): Set[Set[State[Σ, L, E]]]", "member" : "xymbolyco.Minimize.findHopcroftPartition", "link" : "xymbolyco\/Minimize$.html#findHopcroftPartition[Σ,L,E](dfa:xymbolyco.Dfa[Σ,L,E]):Set[Set[xymbolyco.State[Σ,L,E]]]", "kind" : "def"}, {"label" : "minimize", "tail" : "(dfa: Dfa[Σ, L, E]): Dfa[Σ, L, E]", "member" : "xymbolyco.Minimize.minimize", "link" : "xymbolyco\/Minimize$.html#minimize[Σ,L,E](dfa:xymbolyco.Dfa[Σ,L,E]):xymbolyco.Dfa[Σ,L,E]", "kind" : "def"}, {"label" : "removeNonCoAccessible", "tail" : "(dfa: Dfa[Σ, L, E]): Dfa[Σ, L, E]", "member" : "xymbolyco.Minimize.removeNonCoAccessible", "link" : "xymbolyco\/Minimize$.html#removeNonCoAccessible[Σ,L,E](dfa:xymbolyco.Dfa[Σ,L,E]):xymbolyco.Dfa[Σ,L,E]", "kind" : "def"}, {"label" : "removeNonAccessible", "tail" : "(dfa: Dfa[Σ, L, E]): Dfa[Σ, L, E]", "member" : "xymbolyco.Minimize.removeNonAccessible", "link" : "xymbolyco\/Minimize$.html#removeNonAccessible[Σ,L,E](dfa:xymbolyco.Dfa[Σ,L,E]):xymbolyco.Dfa[Σ,L,E]", "kind" : "def"}, {"label" : "findReachable", "tail" : "(succ: Map[Int, Set[Int]], done: Set[Int], todo: Set[Int]): Set[Int]", "member" : "xymbolyco.Minimize.findReachable", "link" : "xymbolyco\/Minimize$.html#findReachable(succ:Map[Int,Set[Int]],done:Set[Int],todo:Set[Int]):Set[Int]", "kind" : "def"}, {"label" : "trim", "tail" : "(dfa: Dfa[Σ, L, E], trustAccessible: Boolean): Dfa[Σ, L, E]", "member" : "xymbolyco.Minimize.trim", "link" : "xymbolyco\/Minimize$.html#trim[Σ,L,E](dfa:xymbolyco.Dfa[Σ,L,E],trustAccessible:Boolean):xymbolyco.Dfa[Σ,L,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/Minimize$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/Minimize$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/Minimize$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/Minimize$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/Minimize$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/Minimize$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/Minimize$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Minimize$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Minimize$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Minimize$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/Minimize$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/Minimize$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "xymbolyco\/Minimize$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/Minimize$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "xymbolyco\/Minimize$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "xymbolyco\/Minimize$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/Minimize$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/Minimize$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/Minimize$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "xymbolyco.mystats", "shortDescription" : "", "object" : "xymbolyco\/mystats$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "xymbolyco.mystats.main", "link" : "xymbolyco\/mystats$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "statisticSizePerDFAfromF", "tail" : "(num: Int, minsize: Int, maxsize: Int, sizevar: Int, fbool: Boolean, frte: (Int, Boolean) => Rte): Unit", "member" : "xymbolyco.mystats.statisticSizePerDFAfromF", "link" : "xymbolyco\/mystats$.html#statisticSizePerDFAfromF(num:Int,minsize:Int,maxsize:Int,sizevar:Int,fbool:Boolean,frte:(Int,Boolean)=>rte.Rte):Unit", "kind" : "def"}, {"label" : "statisticSizePerF", "tail" : "(number: Int, minsize: Int, maxsize: Int, sizevar: Int, fbool: Boolean, frte: (Int, Boolean) => Rte, f: (Rte) => Double): Unit", "member" : "xymbolyco.mystats.statisticSizePerF", "link" : "xymbolyco\/mystats$.html#statisticSizePerF(number:Int,minsize:Int,maxsize:Int,sizevar:Int,fbool:Boolean,frte:(Int,Boolean)=>rte.Rte,f:rte.Rte=>Double):Unit", "kind" : "def"}, {"label" : "statisticSizePerDFAfromRandomDFA", "tail" : "(num: Int, minsize: Int, maxsize: Int, sizevar: Int): Unit", "member" : "xymbolyco.mystats.statisticSizePerDFAfromRandomDFA", "link" : "xymbolyco\/mystats$.html#statisticSizePerDFAfromRandomDFA(num:Int,minsize:Int,maxsize:Int,sizevar:Int):Unit", "kind" : "def"}, {"label" : "statisticSizePerRndDFASize", "tail" : "(number: Int, minsize: Int, maxsize: Int, sizevar: Int, typeDepth: Int, f: (Rte) => Double): Unit", "member" : "xymbolyco.mystats.statisticSizePerRndDFASize", "link" : "xymbolyco\/mystats$.html#statisticSizePerRndDFASize(number:Int,minsize:Int,maxsize:Int,sizevar:Int,typeDepth:Int,f:rte.Rte=>Double):Unit", "kind" : "def"}, {"label" : "thmpmin", "tail" : "(rte: Rte): Double", "member" : "xymbolyco.mystats.thmpmin", "link" : "xymbolyco\/mystats$.html#thmpmin(rte:rte.Rte):Double", "kind" : "def"}, {"label" : "thmp", "tail" : "(rte: Rte): Double", "member" : "xymbolyco.mystats.thmp", "link" : "xymbolyco\/mystats$.html#thmp(rte:rte.Rte):Double", "kind" : "def"}, {"label" : "brzmin", "tail" : "(rte: Rte): Double", "member" : "xymbolyco.mystats.brzmin", "link" : "xymbolyco\/mystats$.html#brzmin(rte:rte.Rte):Double", "kind" : "def"}, {"label" : "brz", "tail" : "(rte: Rte): Double", "member" : "xymbolyco.mystats.brz", "link" : "xymbolyco\/mystats$.html#brz(rte:rte.Rte):Double", "kind" : "def"}, {"label" : "statisticSizePerDFA", "tail" : "(num: Int, depth: Int): Unit", "member" : "xymbolyco.mystats.statisticSizePerDFA", "link" : "xymbolyco\/mystats$.html#statisticSizePerDFA(num:Int,depth:Int):Unit", "kind" : "def"}, {"label" : "statisticSizePerDepth", "tail" : "(number: Int, depth: Int, f: (Rte) => Double): Unit", "member" : "xymbolyco.mystats.statisticSizePerDepth", "link" : "xymbolyco\/mystats$.html#statisticSizePerDepth(number:Int,depth:Int,f:rte.Rte=>Double):Unit", "kind" : "def"}, {"label" : "viewPlots", "tail" : ": Boolean", "member" : "xymbolyco.mystats.viewPlots", "link" : "xymbolyco\/mystats$.html#viewPlots:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/mystats$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/mystats$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/mystats$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/mystats$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/mystats$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/mystats$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/mystats$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/mystats$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/mystats$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/mystats$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/mystats$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/mystats$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "xymbolyco\/mystats$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/mystats$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "xymbolyco\/mystats$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "xymbolyco\/mystats$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/mystats$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/mystats$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/mystats$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "xymbolyco.Profiling", "shortDescription" : "", "object" : "xymbolyco\/Profiling$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "xymbolyco.Profiling.main", "link" : "xymbolyco\/Profiling$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "statisticsTests", "tail" : "(num_random_tests: Int, depth: Int, print: Boolean): Map[(Boolean, String, Boolean, String), Int]", "member" : "xymbolyco.Profiling.statisticsTests", "link" : "xymbolyco\/Profiling$.html#statisticsTests(num_random_tests:Int,depth:Int,print:Boolean):Map[(Boolean,String,Boolean,String),Int]", "kind" : "def"}, {"label" : "check", "tail" : "(pattern: Rte, r: Int, depth: Int): Map[String, Dfa[Any, SimpleTypeD, Int]]", "member" : "xymbolyco.Profiling.check", "link" : "xymbolyco\/Profiling$.html#check(pattern:rte.Rte,r:Int,depth:Int):Map[String,xymbolyco.Dfa[Any,genus.SimpleTypeD,Int]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/Profiling$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/Profiling$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/Profiling$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/Profiling$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/Profiling$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/Profiling$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/Profiling$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Profiling$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Profiling$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Profiling$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/Profiling$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/Profiling$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "xymbolyco\/Profiling$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/Profiling$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "xymbolyco\/Profiling$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "xymbolyco\/Profiling$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/Profiling$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/Profiling$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/Profiling$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "xymbolyco.RandomDFAGautier", "shortDescription" : "", "object" : "xymbolyco\/RandomDFAGautier$.html", "members_object" : [{"label" : "randomVertex", "tail" : "(current: Int, max: Int): Int", "member" : "xymbolyco.RandomDFAGautier.randomVertex", "link" : "xymbolyco\/RandomDFAGautier$.html#randomVertex(current:Int,max:Int):Int", "kind" : "def"}, {"label" : "randomTransition", "tail" : "(t: Int, trrange: Int, i: Int, num: Int): Set[Int]", "member" : "xymbolyco.RandomDFAGautier.randomTransition", "link" : "xymbolyco\/RandomDFAGautier$.html#randomTransition(t:Int,trrange:Int,i:Int,num:Int):Set[Int]", "kind" : "def"}, {"label" : "RandomDFA", "tail" : "(num: Int, finals: Int, transitions: Int, transrange: Int, exitValue: E, typedepth: Int, filter: Option[Boolean]): Dfa[Any, SimpleTypeD, E]", "member" : "xymbolyco.RandomDFAGautier.RandomDFA", "link" : "xymbolyco\/RandomDFAGautier$.html#RandomDFA[E](num:Int,finals:Int,transitions:Int,transrange:Int,exitValue:E,typedepth:Int,filter:Option[Boolean]):xymbolyco.Dfa[Any,genus.SimpleTypeD,E]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/RandomDFAGautier$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/RandomDFAGautier$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/RandomDFAGautier$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/RandomDFAGautier$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/RandomDFAGautier$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/RandomDFAGautier$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/RandomDFAGautier$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/RandomDFAGautier$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/RandomDFAGautier$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/RandomDFAGautier$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/RandomDFAGautier$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/RandomDFAGautier$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "xymbolyco\/RandomDFAGautier$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/RandomDFAGautier$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "xymbolyco\/RandomDFAGautier$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "xymbolyco\/RandomDFAGautier$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/RandomDFAGautier$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/RandomDFAGautier$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/RandomDFAGautier$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "xymbolyco.RTEStatistics", "shortDescription" : "", "members_case class" : [{"label" : "createMap", "tail" : "(rte_raw: Rte): Map[(Boolean, String, Boolean, String), Int]", "member" : "xymbolyco.RTEStatistics.createMap", "link" : "xymbolyco\/RTEStatistics.html#createMap[Σ,L,E](rte_raw:rte.Rte):Map[(Boolean,String,Boolean,String),Int]", "kind" : "def"}, {"label" : "numberOfTransitions", "tail" : ": Map[(Boolean, String, Boolean, String), Int]", "member" : "xymbolyco.RTEStatistics.numberOfTransitions", "link" : "xymbolyco\/RTEStatistics.html#numberOfTransitions:Map[(Boolean,String,Boolean,String),Int]", "kind" : "lazy val"}, {"member" : "xymbolyco.RTEStatistics#<init>", "error" : "unsupported entity"}, {"label" : "rte", "tail" : ": Rte", "member" : "xymbolyco.RTEStatistics.rte", "link" : "xymbolyco\/RTEStatistics.html#rte:rte.Rte", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "xymbolyco\/RTEStatistics.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/RTEStatistics.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/RTEStatistics.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/RTEStatistics.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/RTEStatistics.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/RTEStatistics.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/RTEStatistics.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/RTEStatistics.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/RTEStatistics.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/RTEStatistics.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/RTEStatistics.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/RTEStatistics.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/RTEStatistics.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/RTEStatistics.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/RTEStatistics.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/RTEStatistics.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/RTEStatistics.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "xymbolyco\/RTEStatistics.html", "kind" : "case class"}, {"name" : "xymbolyco.Serialize", "shortDescription" : "", "object" : "xymbolyco\/Serialize$.html", "members_object" : [{"label" : "serializeToString", "tail" : "(dfa: Dfa[Sigma, L, E]): String", "member" : "xymbolyco.Serialize.serializeToString", "link" : "xymbolyco\/Serialize$.html#serializeToString[Sigma,L,E](dfa:xymbolyco.Dfa[Sigma,L,E]):String", "kind" : "def"}, {"label" : "serialize", "tail" : "(dfa: Dfa[Sigma, L, E], print: (String) => Unit): Unit", "member" : "xymbolyco.Serialize.serialize", "link" : "xymbolyco\/Serialize$.html#serialize[Sigma,L,E](dfa:xymbolyco.Dfa[Sigma,L,E],print:String=>Unit):Unit", "kind" : "def"}, {"label" : "serialize", "tail" : "(dfa: Dfa[Sigma, L, E]): Unit", "member" : "xymbolyco.Serialize.serialize", "link" : "xymbolyco\/Serialize$.html#serialize[Sigma,L,E](dfa:xymbolyco.Dfa[Sigma,L,E]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/Serialize$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/Serialize$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/Serialize$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/Serialize$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/Serialize$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/Serialize$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/Serialize$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Serialize$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Serialize$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Serialize$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/Serialize$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/Serialize$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "xymbolyco\/Serialize$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/Serialize$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "xymbolyco\/Serialize$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "xymbolyco\/Serialize$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/Serialize$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/Serialize$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/Serialize$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "xymbolyco.State", "shortDescription" : "", "members_class" : [{"label" : "toString", "tail" : "(): String", "member" : "xymbolyco.State.toString", "link" : "xymbolyco\/State.html#toString():String", "kind" : "def"}, {"label" : "isSinkState", "tail" : ": Boolean", "member" : "xymbolyco.State.isSinkState", "link" : "xymbolyco\/State.html#isSinkState:Boolean", "kind" : "lazy val"}, {"label" : "successor", "tail" : "(s: Σ): Option[State[Σ, L, E]]", "member" : "xymbolyco.State.successor", "link" : "xymbolyco\/State.html#successor(s:Σ):Option[xymbolyco.State[Σ,L,E]]", "kind" : "def"}, {"label" : "successorFunction", "tail" : ": (Σ) => Option[State[Σ, L, E]]", "member" : "xymbolyco.State.successorFunction", "link" : "xymbolyco\/State.html#successorFunction:Σ=>Option[xymbolyco.State[Σ,L,E]]", "kind" : "lazy val"}, {"label" : "delta", "tail" : "(label: L): State[Σ, L, E]", "member" : "xymbolyco.State.delta", "link" : "xymbolyco\/State.html#delta(label:L):xymbolyco.State[Σ,L,E]", "kind" : "def"}, {"label" : "transitions", "tail" : ": Set[Transition[Σ, L, E]]", "member" : "xymbolyco.State.transitions", "link" : "xymbolyco\/State.html#transitions:Set[xymbolyco.Transition[Σ,L,E]]", "kind" : "var"}, {"member" : "xymbolyco.State#<init>", "error" : "unsupported entity"}, {"label" : "id", "tail" : ": Int", "member" : "xymbolyco.State.id", "link" : "xymbolyco\/State.html#id:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/State.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/State.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/State.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/State.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/State.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/State.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/State.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/State.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/State.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/State.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/State.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/State.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/State.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "xymbolyco\/State.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "xymbolyco\/State.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/State.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/State.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/State.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "xymbolyco\/State.html", "kind" : "class"}, {"name" : "xymbolyco.TestMe", "shortDescription" : "", "object" : "xymbolyco\/TestMe$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "xymbolyco.TestMe.main", "link" : "xymbolyco\/TestMe$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "TestAc", "tail" : "", "member" : "xymbolyco.TestMe.TestAc", "link" : "xymbolyco\/TestMe$.html#TestAcextendsAnyRef", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/TestMe$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/TestMe$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/TestMe$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/TestMe$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/TestMe$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/TestMe$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/TestMe$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/TestMe$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/TestMe$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/TestMe$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/TestMe$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/TestMe$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "xymbolyco\/TestMe$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/TestMe$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "xymbolyco\/TestMe$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "xymbolyco\/TestMe$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/TestMe$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/TestMe$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/TestMe$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "xymbolyco.Thompson", "shortDescription" : "", "object" : "xymbolyco\/Thompson$.html", "members_object" : [{"label" : "constructThompsonDfa", "tail" : "(rte: Rte, exitValue: E): Dfa[Any, SimpleTypeD, E]", "member" : "xymbolyco.Thompson.constructThompsonDfa", "link" : "xymbolyco\/Thompson$.html#constructThompsonDfa[E](rte:rte.Rte,exitValue:E):xymbolyco.Dfa[Any,genus.SimpleTypeD,E]", "kind" : "def"}, {"label" : "simulate", "tail" : "(sequence: Seq[Any], exitValue: E, in: Int, outs: Seq[Int], transitions: Seq[(Int, SimpleTypeD, Int)]): Option[E]", "member" : "xymbolyco.Thompson.simulate", "link" : "xymbolyco\/Thompson$.html#simulate[E](sequence:Seq[Any],exitValue:E,in:Int,outs:Seq[Int],transitions:Seq[(Int,genus.SimpleTypeD,Int)]):Option[E]", "kind" : "def"}, {"label" : "simulate", "tail" : "(sequence: Seq[Any], exitValue: E, rte: Rte): Option[E]", "member" : "xymbolyco.Thompson.simulate", "link" : "xymbolyco\/Thompson$.html#simulate[E](sequence:Seq[Any],exitValue:E,rte:rte.Rte):Option[E]", "kind" : "def"}, {"label" : "removeEpsilonTransitions", "tail" : "(in: Int, out: Int, transitions: Seq[(Int, Option[SimpleTypeD], Int)]): (Int, Seq[Int], Seq[(Int, SimpleTypeD, Int)])", "member" : "xymbolyco.Thompson.removeEpsilonTransitions", "link" : "xymbolyco\/Thompson$.html#removeEpsilonTransitions(in:Int,out:Int,transitions:Seq[(Int,Option[genus.SimpleTypeD],Int)]):(Int,Seq[Int],Seq[(Int,genus.SimpleTypeD,Int)])", "kind" : "def"}, {"label" : "canonicalizeDfa", "tail" : "(in: Int, out: Seq[Int], transitions: Seq[(Int, L, Int)], cmp: (L, L) => Boolean): (Int, Seq[Int], Seq[(Int, L, Int)])", "member" : "xymbolyco.Thompson.canonicalizeDfa", "link" : "xymbolyco\/Thompson$.html#canonicalizeDfa[L](in:Int,out:Seq[Int],transitions:Seq[(Int,L,Int)],cmp:(L,L)=>Boolean):(Int,Seq[Int],Seq[(Int,L,Int)])", "kind" : "def"}, {"label" : "reNumber", "tail" : "(in: Int, out: Seq[Int], transitions: Seq[(Int, L, Int)], rename: Map[Int, Int]): (Int, Seq[Int], Seq[(Int, L, Int)])", "member" : "xymbolyco.Thompson.reNumber", "link" : "xymbolyco\/Thompson$.html#reNumber[L](in:Int,out:Seq[Int],transitions:Seq[(Int,L,Int)],rename:Map[Int,Int]):(Int,Seq[Int],Seq[(Int,L,Int)])", "kind" : "def"}, {"label" : "findAllStates", "tail" : "(transitions: Seq[(V, L, V)]): Set[V]", "member" : "xymbolyco.Thompson.findAllStates", "link" : "xymbolyco\/Thompson$.html#findAllStates[V,L](transitions:Seq[(V,L,V)]):Set[V]", "kind" : "def"}, {"label" : "renumberTransitions", "tail" : "(in: T, outs: Seq[T], transitions: Seq[(T, SimpleTypeD, T)], count: () => Int): (Int, Seq[Int], Seq[(Int, SimpleTypeD, Int)])", "member" : "xymbolyco.Thompson.renumberTransitions", "link" : "xymbolyco\/Thompson$.html#renumberTransitions[T](in:T,outs:Seq[T],transitions:Seq[(T,genus.SimpleTypeD,T)],count:()=>Int):(Int,Seq[Int],Seq[(Int,genus.SimpleTypeD,Int)])", "kind" : "def"}, {"label" : "determinize", "tail" : "(in: Int, finals: Seq[Int], transitions: Seq[(Int, SimpleTypeD, Int)]): (Int, Seq[Int], Seq[(Int, SimpleTypeD, Int)])", "member" : "xymbolyco.Thompson.determinize", "link" : "xymbolyco\/Thompson$.html#determinize(in:Int,finals:Seq[Int],transitions:Seq[(Int,genus.SimpleTypeD,Int)]):(Int,Seq[Int],Seq[(Int,genus.SimpleTypeD,Int)])", "kind" : "def"}, {"label" : "trim", "tail" : "(in: Int, finals: Seq[Int], transitions: Seq[(Int, SimpleTypeD, Int)]): (Int, Seq[Int], Seq[(Int, SimpleTypeD, Int)])", "member" : "xymbolyco.Thompson.trim", "link" : "xymbolyco\/Thompson$.html#trim(in:Int,finals:Seq[Int],transitions:Seq[(Int,genus.SimpleTypeD,Int)]):(Int,Seq[Int],Seq[(Int,genus.SimpleTypeD,Int)])", "kind" : "def"}, {"label" : "coaccessible", "tail" : "(in: Int, outs: Seq[Int], transitions: Seq[(Int, SimpleTypeD, Int)]): (Int, Seq[Int], Seq[(Int, SimpleTypeD, Int)])", "member" : "xymbolyco.Thompson.coaccessible", "link" : "xymbolyco\/Thompson$.html#coaccessible(in:Int,outs:Seq[Int],transitions:Seq[(Int,genus.SimpleTypeD,Int)]):(Int,Seq[Int],Seq[(Int,genus.SimpleTypeD,Int)])", "kind" : "def"}, {"label" : "accessible", "tail" : "(in: Int, outs: Seq[Int], transitions: Seq[(Int, SimpleTypeD, Int)]): (Int, Seq[Int], Seq[(Int, SimpleTypeD, Int)])", "member" : "xymbolyco.Thompson.accessible", "link" : "xymbolyco\/Thompson$.html#accessible(in:Int,outs:Seq[Int],transitions:Seq[(Int,genus.SimpleTypeD,Int)]):(Int,Seq[Int],Seq[(Int,genus.SimpleTypeD,Int)])", "kind" : "def"}, {"label" : "sxp", "tail" : "(in1: Int, outs1: Seq[Int], transitions1: Seq[(Int, SimpleTypeD, Int)], in2: Int, outs2: Seq[Int], transitions2: Seq[(Int, SimpleTypeD, Int)], arbitrate: (Boolean, Boolean) => Boolean): ((Int, Int), Seq[(Int, Int)], Seq[((Int, Int), SimpleTypeD, (Int, Int))])", "member" : "xymbolyco.Thompson.sxp", "link" : "xymbolyco\/Thompson$.html#sxp(in1:Int,outs1:Seq[Int],transitions1:Seq[(Int,genus.SimpleTypeD,Int)],in2:Int,outs2:Seq[Int],transitions2:Seq[(Int,genus.SimpleTypeD,Int)],arbitrate:(Boolean,Boolean)=>Boolean):((Int,Int),Seq[(Int,Int)],Seq[((Int,Int),genus.SimpleTypeD,(Int,Int))])", "kind" : "def"}, {"label" : "constructTransitionsAnd", "tail" : "(rte1: Rte, rte2: Rte): (Int, Int, Seq[(Int, Option[SimpleTypeD], Int)])", "member" : "xymbolyco.Thompson.constructTransitionsAnd", "link" : "xymbolyco\/Thompson$.html#constructTransitionsAnd(rte1:rte.Rte,rte2:rte.Rte):(Int,Int,Seq[(Int,Option[genus.SimpleTypeD],Int)])", "kind" : "def"}, {"label" : "invertFinals", "tail" : "(outs: Seq[Int], completed: Seq[(Int, SimpleTypeD, Int)]): Seq[Int]", "member" : "xymbolyco.Thompson.invertFinals", "link" : "xymbolyco\/Thompson$.html#invertFinals(outs:Seq[Int],completed:Seq[(Int,genus.SimpleTypeD,Int)]):Seq[Int]", "kind" : "def"}, {"label" : "complete", "tail" : "(in: Int, outs: Seq[Int], clean: Seq[(Int, SimpleTypeD, Int)]): Seq[(Int, SimpleTypeD, Int)]", "member" : "xymbolyco.Thompson.complete", "link" : "xymbolyco\/Thompson$.html#complete(in:Int,outs:Seq[Int],clean:Seq[(Int,genus.SimpleTypeD,Int)]):Seq[(Int,genus.SimpleTypeD,Int)]", "kind" : "def"}, {"label" : "constructTransitionsNot", "tail" : "(rte: Rte): (Int, Int, Seq[(Int, Option[SimpleTypeD], Int)])", "member" : "xymbolyco.Thompson.constructTransitionsNot", "link" : "xymbolyco\/Thompson$.html#constructTransitionsNot(rte:rte.Rte):(Int,Int,Seq[(Int,Option[genus.SimpleTypeD],Int)])", "kind" : "def"}, {"label" : "confluxify", "tail" : "(in: Int, outs: Seq[Int], transitions: Seq[(Int, SimpleTypeD, Int)]): (Int, Int, Seq[(Int, Option[SimpleTypeD], Int)])", "member" : "xymbolyco.Thompson.confluxify", "link" : "xymbolyco\/Thompson$.html#confluxify(in:Int,outs:Seq[Int],transitions:Seq[(Int,genus.SimpleTypeD,Int)]):(Int,Int,Seq[(Int,Option[genus.SimpleTypeD],Int)])", "kind" : "def"}, {"label" : "constructTransitions", "tail" : "(rte: Rte): (Int, Int, Seq[(Int, Option[SimpleTypeD], Int)])", "member" : "xymbolyco.Thompson.constructTransitions", "link" : "xymbolyco\/Thompson$.html#constructTransitions(rte:rte.Rte):(Int,Int,Seq[(Int,Option[genus.SimpleTypeD],Int)])", "kind" : "def"}, {"label" : "constructVarArgsTransitions", "tail" : "(operands: Seq[Rte], id: Rte, binOp: (Rte, Rte) => Rte, varArgsOp: (Seq[Rte]) => Rte, continuation: (Rte, Rte) => (Int, Int, Seq[(Int, Option[SimpleTypeD], Int)])): (Int, Int, Seq[(Int, Option[SimpleTypeD], Int)])", "member" : "xymbolyco.Thompson.constructVarArgsTransitions", "link" : "xymbolyco\/Thompson$.html#constructVarArgsTransitions(operands:Seq[rte.Rte],id:rte.Rte,binOp:(rte.Rte,rte.Rte)=>rte.Rte,varArgsOp:Seq[rte.Rte]=>rte.Rte,continuation:(rte.Rte,rte.Rte)=>(Int,Int,Seq[(Int,Option[genus.SimpleTypeD],Int)])):(Int,Int,Seq[(Int,Option[genus.SimpleTypeD],Int)])", "kind" : "def"}, {"label" : "traceTransitionGraph", "tail" : "(q0: V, edges: (V) => Seq[(SimpleTypeD, V)], isFinal: (V) => Boolean): (Seq[V], Seq[(V, SimpleTypeD, V)])", "member" : "xymbolyco.Thompson.traceTransitionGraph", "link" : "xymbolyco\/Thompson$.html#traceTransitionGraph[V](q0:V,edges:V=>Seq[(genus.SimpleTypeD,V)],isFinal:V=>Boolean):(Seq[V],Seq[(V,genus.SimpleTypeD,V)])", "kind" : "def"}, {"label" : "constructDeterminizedTransitions", "tail" : "(rte: Rte): (Int, Seq[Int], Seq[(Int, SimpleTypeD, Int)])", "member" : "xymbolyco.Thompson.constructDeterminizedTransitions", "link" : "xymbolyco\/Thompson$.html#constructDeterminizedTransitions(rte:rte.Rte):(Int,Seq[Int],Seq[(Int,genus.SimpleTypeD,Int)])", "kind" : "def"}, {"label" : "constructEpsilonFreeTransitions", "tail" : "(rte: Rte): (Int, Seq[Int], Seq[(Int, SimpleTypeD, Int)])", "member" : "xymbolyco.Thompson.constructEpsilonFreeTransitions", "link" : "xymbolyco\/Thompson$.html#constructEpsilonFreeTransitions(rte:rte.Rte):(Int,Seq[Int],Seq[(Int,genus.SimpleTypeD,Int)])", "kind" : "def"}, {"label" : "makeNewState", "tail" : "(in: V, outs: Seq[V], transitions: Seq[(V, L, V)], count: () => V): V", "member" : "xymbolyco.Thompson.makeNewState", "link" : "xymbolyco\/Thompson$.html#makeNewState[V,L](in:V,outs:Seq[V],transitions:Seq[(V,L,V)],count:()=>V):V", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/Thompson$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/Thompson$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/Thompson$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/Thompson$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/Thompson$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/Thompson$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/Thompson$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Thompson$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Thompson$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Thompson$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/Thompson$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/Thompson$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "xymbolyco\/Thompson$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/Thompson$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "xymbolyco\/Thompson$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "xymbolyco\/Thompson$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/Thompson$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/Thompson$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/Thompson$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "xymbolyco.Transition", "shortDescription" : "", "members_case class" : [{"member" : "xymbolyco.Transition#<init>", "error" : "unsupported entity"}, {"label" : "destination", "tail" : ": State[Σ, L, E]", "member" : "xymbolyco.Transition.destination", "link" : "xymbolyco\/Transition.html#destination:xymbolyco.State[Σ,L,E]", "kind" : "val"}, {"label" : "label", "tail" : ": L", "member" : "xymbolyco.Transition.label", "link" : "xymbolyco\/Transition.html#label:L", "kind" : "val"}, {"label" : "source", "tail" : ": State[Σ, L, E]", "member" : "xymbolyco.Transition.source", "link" : "xymbolyco\/Transition.html#source:xymbolyco.State[Σ,L,E]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "xymbolyco\/Transition.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "xymbolyco\/Transition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "xymbolyco\/Transition.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "xymbolyco\/Transition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "xymbolyco\/Transition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "xymbolyco\/Transition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "xymbolyco\/Transition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "xymbolyco\/Transition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Transition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Transition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "xymbolyco\/Transition.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "xymbolyco\/Transition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "xymbolyco\/Transition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "xymbolyco\/Transition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "xymbolyco\/Transition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "xymbolyco\/Transition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "xymbolyco\/Transition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "xymbolyco\/Transition.html", "kind" : "case class"}], "psug" : [{"name" : "psug.Psug", "shortDescription" : "", "object" : "psug\/Psug$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "psug.Psug.main", "link" : "psug\/Psug$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "exampleMapping", "tail" : "(): Unit", "member" : "psug.Psug.exampleMapping", "link" : "psug\/Psug$.html#exampleMapping():Unit", "kind" : "def"}, {"label" : "exampleRteCase2", "tail" : "(): Unit", "member" : "psug.Psug.exampleRteCase2", "link" : "psug\/Psug$.html#exampleRteCase2():Unit", "kind" : "def"}, {"label" : "exampleRteCase1", "tail" : "(): Unit", "member" : "psug.Psug.exampleRteCase1", "link" : "psug\/Psug$.html#exampleRteCase1():Unit", "kind" : "def"}, {"label" : "exampleDfa", "tail" : "(): Unit", "member" : "psug.Psug.exampleDfa", "link" : "psug\/Psug$.html#exampleDfa():Unit", "kind" : "def"}, {"label" : "even", "tail" : ": SSatisfies", "member" : "psug.Psug.even", "link" : "psug\/Psug$.html#even:genus.SSatisfies", "kind" : "val"}, {"label" : "isEven", "tail" : "(x: Any): Boolean", "member" : "psug.Psug.isEven", "link" : "psug\/Psug$.html#isEven(x:Any):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "psug\/Psug$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "psug\/Psug$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "psug\/Psug$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "psug\/Psug$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "psug\/Psug$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "psug\/Psug$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "psug\/Psug$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "psug\/Psug$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "psug\/Psug$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "psug\/Psug$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "psug\/Psug$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "psug\/Psug$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "psug\/Psug$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "psug\/Psug$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "psug\/Psug$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "psug\/Psug$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "psug\/Psug$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "psug\/Psug$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "psug\/Psug$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "padl" : [{"name" : "padl.Padl", "shortDescription" : "", "object" : "padl\/Padl$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "padl.Padl.main", "link" : "padl\/Padl$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "example2min", "tail" : "(): Unit", "member" : "padl.Padl.example2min", "link" : "padl\/Padl$.html#example2min():Unit", "kind" : "def"}, {"label" : "example2", "tail" : "(): Unit", "member" : "padl.Padl.example2", "link" : "padl\/Padl$.html#example2():Unit", "kind" : "def"}, {"label" : "example1", "tail" : "(): Unit", "member" : "padl.Padl.example1", "link" : "padl\/Padl$.html#example1():Unit", "kind" : "def"}, {"label" : "exampleCode", "tail" : "(): Unit", "member" : "padl.Padl.exampleCode", "link" : "padl\/Padl$.html#exampleCode():Unit", "kind" : "def"}, {"label" : "givenLabels", "tail" : "(): Seq[SimpleTypeD]", "member" : "padl.Padl.givenLabels", "link" : "padl\/Padl$.html#givenLabels():Seq[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "charx", "tail" : "(): Rte", "member" : "padl.Padl.charx", "link" : "padl\/Padl$.html#charx():rte.Rte", "kind" : "def"}, {"label" : "char", "tail" : "(): Rte", "member" : "padl.Padl.char", "link" : "padl\/Padl$.html#char():rte.Rte", "kind" : "def"}, {"label" : "integer", "tail" : "(): Rte", "member" : "padl.Padl.integer", "link" : "padl\/Padl$.html#integer():rte.Rte", "kind" : "def"}, {"label" : "even", "tail" : "(): Rte", "member" : "padl.Padl.even", "link" : "padl\/Padl$.html#even():rte.Rte", "kind" : "def"}, {"label" : "odd", "tail" : "(): Rte", "member" : "padl.Padl.odd", "link" : "padl\/Padl$.html#odd():rte.Rte", "kind" : "def"}, {"label" : "num", "tail" : "(): Rte", "member" : "padl.Padl.num", "link" : "padl\/Padl$.html#num():rte.Rte", "kind" : "def"}, {"label" : "str", "tail" : "(): Rte", "member" : "padl.Padl.str", "link" : "padl\/Padl$.html#str():rte.Rte", "kind" : "def"}, {"label" : "tychar", "tail" : "(): SimpleTypeD", "member" : "padl.Padl.tychar", "link" : "padl\/Padl$.html#tychar():genus.SimpleTypeD", "kind" : "def"}, {"label" : "tynum", "tail" : "(): SimpleTypeD", "member" : "padl.Padl.tynum", "link" : "padl\/Padl$.html#tynum():genus.SimpleTypeD", "kind" : "def"}, {"label" : "tystr", "tail" : "(): SimpleTypeD", "member" : "padl.Padl.tystr", "link" : "padl\/Padl$.html#tystr():genus.SimpleTypeD", "kind" : "def"}, {"label" : "tyint", "tail" : "(): SimpleTypeD", "member" : "padl.Padl.tyint", "link" : "padl\/Padl$.html#tyint():genus.SimpleTypeD", "kind" : "def"}, {"label" : "cpTo", "tail" : "(fromName: String, baseName: String): Unit", "member" : "padl.Padl.cpTo", "link" : "padl\/Padl$.html#cpTo(fromName:String,baseName:String):Unit", "kind" : "def"}, {"label" : "dotDir", "tail" : ": String", "member" : "padl.Padl.dotDir", "link" : "padl\/Padl$.html#dotDir:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "padl\/Padl$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "padl\/Padl$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "padl\/Padl$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "padl\/Padl$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "padl\/Padl$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "padl\/Padl$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "padl\/Padl$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "padl\/Padl$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "padl\/Padl$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "padl\/Padl$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "padl\/Padl$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "padl\/Padl$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "padl\/Padl$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "padl\/Padl$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "padl\/Padl$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "padl\/Padl$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "padl\/Padl$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "padl\/Padl$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "padl\/Padl$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "rte" : [{"name" : "rte.And", "shortDescription" : "", "object" : "rte\/And$.html", "members_object" : [{"label" : "createAnd", "tail" : "(operands: Seq[Rte]): Rte", "member" : "rte.And.createAnd", "link" : "rte\/And$.html#createAnd(operands:Seq[rte.Rte]):rte.Rte", "kind" : "def"}, {"label" : "apply", "tail" : "(operands: Rte*)(ev: DummyImplicit): And", "member" : "rte.And.apply", "link" : "rte\/And$.html#apply(operands:rte.Rte*)(implicitev:DummyImplicit):rte.And", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/And$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/And$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/And$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/And$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/And$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/And$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/And$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/And$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/And$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/And$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/And$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/And$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "rte\/And$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/And$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "rte\/And$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "rte\/And$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/And$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/And$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/And$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "canonicalizeOnce", "tail" : "(): Rte", "member" : "rte.And.canonicalizeOnce", "link" : "rte\/And.html#canonicalizeOnce:rte.Rte", "kind" : "def"}, {"label" : "singletons", "tail" : ": List[SimpleTypeD]", "member" : "rte.And.singletons", "link" : "rte\/And.html#singletons:List[genus.SimpleTypeD]", "kind" : "lazy val"}, {"label" : "matchesOnlySingletons", "tail" : ": Boolean", "member" : "rte.And.matchesOnlySingletons", "link" : "rte\/And.html#matchesOnlySingletons:Boolean", "kind" : "lazy val"}, {"label" : "conversionA19", "tail" : "(): Rte", "member" : "rte.And.conversionA19", "link" : "rte\/And.html#conversionA19():rte.Rte", "kind" : "def"}, {"label" : "conversionA17c", "tail" : "(): Rte", "member" : "rte.And.conversionA17c", "link" : "rte\/And.html#conversionA17c():rte.Rte", "kind" : "def"}, {"label" : "conversionA17b", "tail" : "(): Rte", "member" : "rte.And.conversionA17b", "link" : "rte\/And.html#conversionA17b():rte.Rte", "kind" : "def"}, {"label" : "conversionA17a2", "tail" : "(): Rte", "member" : "rte.And.conversionA17a2", "link" : "rte\/And.html#conversionA17a2():rte.Rte", "kind" : "def"}, {"label" : "conversionA17a", "tail" : "(): Rte", "member" : "rte.And.conversionA17a", "link" : "rte\/And.html#conversionA17a():rte.Rte", "kind" : "def"}, {"label" : "filterNullables", "tail" : "(tds: Seq[Rte]): Boolean", "member" : "rte.And.filterNullables", "link" : "rte\/And.html#filterNullables(tds:Seq[rte.Rte]):Boolean", "kind" : "def"}, {"label" : "conversionA17", "tail" : "(): Rte", "member" : "rte.And.conversionA17", "link" : "rte\/And.html#conversionA17():rte.Rte", "kind" : "def"}, {"label" : "conversionD16b", "tail" : "(): Rte", "member" : "rte.And.conversionD16b", "link" : "rte\/And.html#conversionD16b():rte.Rte", "kind" : "def"}, {"label" : "conversionA13", "tail" : "(): Rte", "member" : "rte.And.conversionA13", "link" : "rte\/And.html#conversionA13():rte.Rte", "kind" : "def"}, {"label" : "conversionA18", "tail" : "(): Rte", "member" : "rte.And.conversionA18", "link" : "rte\/And.html#conversionA18():rte.Rte", "kind" : "def"}, {"label" : "conversionA10", "tail" : "(): Rte", "member" : "rte.And.conversionA10", "link" : "rte\/And.html#conversionA10():rte.Rte", "kind" : "def"}, {"label" : "conversionA9", "tail" : "(): Rte", "member" : "rte.And.conversionA9", "link" : "rte\/And.html#conversionA9():rte.Rte", "kind" : "def"}, {"label" : "conversionA8", "tail" : "(): Rte", "member" : "rte.And.conversionA8", "link" : "rte\/And.html#conversionA8():rte.Rte", "kind" : "def"}, {"label" : "conversionA7", "tail" : "(): Rte", "member" : "rte.And.conversionA7", "link" : "rte\/And.html#conversionA7():rte.Rte", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "rte.And.nullable", "link" : "rte\/And.html#nullable:Boolean", "kind" : "def"}, {"label" : "setDualOperation", "tail" : "(a: Seq[Any], b: Seq[Any]): Seq[Any]", "member" : "rte.And.setDualOperation", "link" : "rte\/And.html#setDualOperation(a:Seq[Any],b:Seq[Any]):Seq[Any]", "kind" : "def"}, {"label" : "setOperation", "tail" : "(a: Seq[Any], b: Seq[Any]): Seq[Any]", "member" : "rte.And.setOperation", "link" : "rte\/And.html#setOperation(a:Seq[Any],b:Seq[Any]):Seq[Any]", "kind" : "def"}, {"label" : "orInvert", "tail" : "(x: Boolean): Boolean", "member" : "rte.And.orInvert", "link" : "rte\/And.html#orInvert(x:Boolean):Boolean", "kind" : "def"}, {"label" : "createDual", "tail" : "(operands: Seq[Rte]): Rte", "member" : "rte.And.createDual", "link" : "rte\/And.html#createDual(operands:Seq[rte.Rte]):rte.Rte", "kind" : "def"}, {"label" : "createTypeD", "tail" : "(operands: Seq[SimpleTypeD]): SimpleTypeD", "member" : "rte.And.createTypeD", "link" : "rte\/And.html#createTypeD(operands:Seq[genus.SimpleTypeD]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "create", "tail" : "(operands: Seq[Rte]): Rte", "member" : "rte.And.create", "link" : "rte\/And.html#create(operands:Seq[rte.Rte]):rte.Rte", "kind" : "def"}, {"label" : "annihilator", "tail" : "(a: SimpleTypeD, b: SimpleTypeD): Option[Boolean]", "member" : "rte.And.annihilator", "link" : "rte\/And.html#annihilator(a:genus.SimpleTypeD,b:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "dualCombination", "tail" : "(c: Combination): Boolean", "member" : "rte.And.dualCombination", "link" : "rte\/And.html#dualCombination(c:rte.Combination):Boolean", "kind" : "def"}, {"label" : "sameCombination", "tail" : "(c: Combination): Boolean", "member" : "rte.And.sameCombination", "link" : "rte\/And.html#sameCombination(c:rte.Combination):Boolean", "kind" : "def"}, {"label" : "one", "tail" : ": Rte", "member" : "rte.And.one", "link" : "rte\/And.html#one:rte.Rte", "kind" : "val"}, {"label" : "zero", "tail" : ": Rte", "member" : "rte.And.zero", "link" : "rte\/And.html#zero:rte.Rte", "kind" : "val"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "rte.And.toMachineReadable", "link" : "rte\/And.html#toMachineReadable():String", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "rte.And.toDot", "link" : "rte\/And.html#toDot():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "rte.And.toString", "link" : "rte\/And.html#toString():String", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "rte.And.toLaTeX", "link" : "rte\/And.html#toLaTeX():String", "kind" : "def"}, {"member" : "rte.And#<init>", "error" : "unsupported entity"}, {"label" : "operands", "tail" : ": Seq[Rte]", "member" : "rte.And.operands", "link" : "rte\/And.html#operands:Seq[rte.Rte]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "rte\/And.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "search", "tail" : "(test: (Rte) => Boolean): Option[Rte]", "member" : "rte.Combination.search", "link" : "rte\/And.html#search(test:rte.Rte=>Boolean):Option[rte.Rte]", "kind" : "def"}, {"label" : "derivativeDown", "tail" : "(wrt: SimpleTypeD, factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.Combination.derivativeDown", "link" : "rte\/And.html#derivativeDown(wrt:genus.SimpleTypeD,factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "conversionC1", "tail" : "(): Rte", "member" : "rte.Combination.conversionC1", "link" : "rte\/And.html#conversionC1():rte.Rte", "kind" : "def"}, {"label" : "conversionC99", "tail" : "(): Rte", "member" : "rte.Combination.conversionC99", "link" : "rte\/And.html#conversionC99():rte.Rte", "kind" : "def"}, {"label" : "conversionC21", "tail" : "(): Rte", "member" : "rte.Combination.conversionC21", "link" : "rte\/And.html#conversionC21():rte.Rte", "kind" : "def"}, {"label" : "conversionC17", "tail" : "(): Rte", "member" : "rte.Combination.conversionC17", "link" : "rte\/And.html#conversionC17():rte.Rte", "kind" : "def"}, {"label" : "conversionC16", "tail" : "(): Rte", "member" : "rte.Combination.conversionC16", "link" : "rte\/And.html#conversionC16():rte.Rte", "kind" : "def"}, {"label" : "conversionC15", "tail" : "(): Rte", "member" : "rte.Combination.conversionC15", "link" : "rte\/And.html#conversionC15():rte.Rte", "kind" : "def"}, {"label" : "conversionC12", "tail" : "(): Rte", "member" : "rte.Combination.conversionC12", "link" : "rte\/And.html#conversionC12():rte.Rte", "kind" : "def"}, {"label" : "conversionC14", "tail" : "(): Rte", "member" : "rte.Combination.conversionC14", "link" : "rte\/And.html#conversionC14():rte.Rte", "kind" : "def"}, {"label" : "conversionC11", "tail" : "(): Rte", "member" : "rte.Combination.conversionC11", "link" : "rte\/And.html#conversionC11():rte.Rte", "kind" : "def"}, {"label" : "conversionC7", "tail" : "(): Rte", "member" : "rte.Combination.conversionC7", "link" : "rte\/And.html#conversionC7():rte.Rte", "kind" : "def"}, {"label" : "conversionC6", "tail" : "(): Rte", "member" : "rte.Combination.conversionC6", "link" : "rte\/And.html#conversionC6():rte.Rte", "kind" : "def"}, {"label" : "conversionC5", "tail" : "(): Rte", "member" : "rte.Combination.conversionC5", "link" : "rte\/And.html#conversionC5():rte.Rte", "kind" : "def"}, {"label" : "conversionC4", "tail" : "(): Rte", "member" : "rte.Combination.conversionC4", "link" : "rte\/And.html#conversionC4():rte.Rte", "kind" : "def"}, {"label" : "conversionC3", "tail" : "(): Rte", "member" : "rte.Combination.conversionC3", "link" : "rte\/And.html#conversionC3():rte.Rte", "kind" : "def"}, {"label" : "firstTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "rte.Combination.firstTypes", "link" : "rte\/And.html#firstTypes:Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "simulate", "tail" : "(exitValue: E, seq: Seq[Any]): Option[E]", "member" : "rte.Rte.simulate", "link" : "rte\/And.html#simulate[E](exitValue:E,seq:Seq[Any]):Option[E]", "kind" : "def"}, {"label" : "toDfa", "tail" : "(exitValue: E): Dfa[Any, SimpleTypeD, E]", "member" : "rte.Rte.toDfa", "link" : "rte\/And.html#toDfa[E](exitValue:E):xymbolyco.Dfa[Any,genus.SimpleTypeD,E]", "kind" : "def"}, {"label" : "derivatives", "tail" : "(): (Vector[Rte], Vector[Seq[(SimpleTypeD, Int)]])", "member" : "rte.Rte.derivatives", "link" : "rte\/And.html#derivatives():(Vector[rte.Rte],Vector[Seq[(genus.SimpleTypeD,Int)]])", "kind" : "def"}, {"label" : "derivative", "tail" : "(wrt: Option[SimpleTypeD], factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.Rte.derivative", "link" : "rte\/And.html#derivative(wrt:Option[genus.SimpleTypeD],factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "derivative1", "tail" : "(wrt: Option[SimpleTypeD]): Rte", "member" : "rte.Rte.derivative1", "link" : "rte\/And.html#derivative1(wrt:Option[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/And.html#canonicalizeDebug(n:Int):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, samples: Seq[Seq[Any]]): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/And.html#canonicalizeDebug(n:Int,samples:Seq[Seq[Any]]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, f: (Rte, Rte) => Unit): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/And.html#canonicalizeDebug(n:Int,f:(rte.Rte,rte.Rte)=>Unit):rte.Rte", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(): Rte", "member" : "rte.Rte.canonicalize", "link" : "rte\/And.html#canonicalize:rte.Rte", "kind" : "def"}, {"label" : "isomorphic", "tail" : "(that: Rte): Option[Boolean]", "member" : "rte.Rte.isomorphic", "link" : "rte\/And.html#isomorphic(that:rte.Rte):Option[Boolean]", "kind" : "def"}, {"label" : "~=", "tail" : "(that: Rte): Boolean", "member" : "rte.Rte.~=", "link" : "rte\/And.html#~=(that:rte.Rte):Boolean", "kind" : "def"}, {"label" : "^", "tail" : "(n: Short): Rte", "member" : "rte.Rte.^", "link" : "rte\/And.html#^(n:Short):rte.Rte", "kind" : "def"}, {"label" : "+", "tail" : "(): Rte", "member" : "rte.Rte.+", "link" : "rte\/And.html#+:rte.Rte", "kind" : "def"}, {"label" : "*", "tail" : "(): Rte", "member" : "rte.Rte.*", "link" : "rte\/And.html#*:rte.Rte", "kind" : "def"}, {"label" : "?", "tail" : "(): Rte", "member" : "rte.Rte.?", "link" : "rte\/And.html#?:rte.Rte", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): Rte", "member" : "rte.Rte.unary_!", "link" : "rte\/And.html#unary_!:rte.Rte", "kind" : "def"}, {"label" : "++", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.++", "link" : "rte\/And.html#++(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "&", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.&", "link" : "rte\/And.html#&(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "|", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.|", "link" : "rte\/And.html#|(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/And.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/And.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/And.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/And.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/And.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/And.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/And.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/And.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/And.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/And.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/And.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/And.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/And.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/And.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/And.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/And.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "rte\/And.html", "kind" : "case class"}, {"name" : "rte.AndSanity", "shortDescription" : "", "object" : "rte\/AndSanity$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "rte.AndSanity.main", "link" : "rte\/AndSanity$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/AndSanity$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/AndSanity$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/AndSanity$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/AndSanity$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/AndSanity$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/AndSanity$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/AndSanity$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/AndSanity$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/AndSanity$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/AndSanity$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/AndSanity$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/AndSanity$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "rte\/AndSanity$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/AndSanity$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "rte\/AndSanity$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "rte\/AndSanity$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/AndSanity$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/AndSanity$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/AndSanity$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "rte.CannotComputeDerivative", "shortDescription" : "", "members_class" : [{"member" : "rte.CannotComputeDerivative#<init>", "error" : "unsupported entity"}, {"label" : "wrt", "tail" : ": SimpleTypeD", "member" : "rte.CannotComputeDerivative.wrt", "link" : "rte\/CannotComputeDerivative.html#wrt:genus.SimpleTypeD", "kind" : "val"}, {"label" : "rte", "tail" : ": Rte", "member" : "rte.CannotComputeDerivative.rte", "link" : "rte\/CannotComputeDerivative.html#rte:rte.Rte", "kind" : "val"}, {"label" : "msg", "tail" : ": String", "member" : "rte.CannotComputeDerivative.msg", "link" : "rte\/CannotComputeDerivative.html#msg:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "rte\/CannotComputeDerivative.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "rte\/CannotComputeDerivative.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "rte\/CannotComputeDerivative.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "rte\/CannotComputeDerivative.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "rte\/CannotComputeDerivative.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "rte\/CannotComputeDerivative.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "rte\/CannotComputeDerivative.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "rte\/CannotComputeDerivative.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "rte\/CannotComputeDerivative.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "rte\/CannotComputeDerivative.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "rte\/CannotComputeDerivative.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "rte\/CannotComputeDerivative.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "rte\/CannotComputeDerivative.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/CannotComputeDerivative.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/CannotComputeDerivative.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/CannotComputeDerivative.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/CannotComputeDerivative.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/CannotComputeDerivative.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/CannotComputeDerivative.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/CannotComputeDerivative.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/CannotComputeDerivative.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/CannotComputeDerivative.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/CannotComputeDerivative.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/CannotComputeDerivative.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/CannotComputeDerivative.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/CannotComputeDerivative.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "rte\/CannotComputeDerivative.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "rte\/CannotComputeDerivative.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/CannotComputeDerivative.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/CannotComputeDerivative.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/CannotComputeDerivative.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "rte\/CannotComputeDerivative.html", "kind" : "class"}, {"name" : "rte.CannotComputeDerivatives", "shortDescription" : "", "members_class" : [{"member" : "rte.CannotComputeDerivatives#<init>", "error" : "unsupported entity"}, {"label" : "mdtd", "tail" : ": Map[SimpleTypeD, (Set[SimpleTypeD], Set[SimpleTypeD])]", "member" : "rte.CannotComputeDerivatives.mdtd", "link" : "rte\/CannotComputeDerivatives.html#mdtd:Map[genus.SimpleTypeD,(Set[genus.SimpleTypeD],Set[genus.SimpleTypeD])]", "kind" : "val"}, {"label" : "firstTypes", "tail" : ": Set[SimpleTypeD]", "member" : "rte.CannotComputeDerivatives.firstTypes", "link" : "rte\/CannotComputeDerivatives.html#firstTypes:Set[genus.SimpleTypeD]", "kind" : "val"}, {"label" : "rte", "tail" : ": Rte", "member" : "rte.CannotComputeDerivatives.rte", "link" : "rte\/CannotComputeDerivatives.html#rte:rte.Rte", "kind" : "val"}, {"label" : "msg", "tail" : ": String", "member" : "rte.CannotComputeDerivatives.msg", "link" : "rte\/CannotComputeDerivatives.html#msg:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "rte\/CannotComputeDerivatives.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "rte\/CannotComputeDerivatives.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "rte\/CannotComputeDerivatives.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "rte\/CannotComputeDerivatives.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "rte\/CannotComputeDerivatives.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "rte\/CannotComputeDerivatives.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "rte\/CannotComputeDerivatives.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "rte\/CannotComputeDerivatives.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "rte\/CannotComputeDerivatives.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "rte\/CannotComputeDerivatives.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "rte\/CannotComputeDerivatives.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "rte\/CannotComputeDerivatives.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "rte\/CannotComputeDerivatives.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/CannotComputeDerivatives.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/CannotComputeDerivatives.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/CannotComputeDerivatives.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/CannotComputeDerivatives.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/CannotComputeDerivatives.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/CannotComputeDerivatives.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/CannotComputeDerivatives.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/CannotComputeDerivatives.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/CannotComputeDerivatives.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/CannotComputeDerivatives.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/CannotComputeDerivatives.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/CannotComputeDerivatives.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/CannotComputeDerivatives.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "rte\/CannotComputeDerivatives.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "rte\/CannotComputeDerivatives.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/CannotComputeDerivatives.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/CannotComputeDerivatives.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/CannotComputeDerivatives.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "rte\/CannotComputeDerivatives.html", "kind" : "class"}, {"name" : "rte.CannotComputeDfa", "shortDescription" : "", "members_class" : [{"member" : "rte.CannotComputeDfa#<init>", "error" : "unsupported entity"}, {"label" : "rte", "tail" : ": Rte", "member" : "rte.CannotComputeDfa.rte", "link" : "rte\/CannotComputeDfa.html#rte:rte.Rte", "kind" : "val"}, {"label" : "msg", "tail" : ": String", "member" : "rte.CannotComputeDfa.msg", "link" : "rte\/CannotComputeDfa.html#msg:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "rte\/CannotComputeDfa.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "rte\/CannotComputeDfa.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "rte\/CannotComputeDfa.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "rte\/CannotComputeDfa.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "rte\/CannotComputeDfa.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "rte\/CannotComputeDfa.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "rte\/CannotComputeDfa.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "rte\/CannotComputeDfa.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "rte\/CannotComputeDfa.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "rte\/CannotComputeDfa.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "rte\/CannotComputeDfa.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "rte\/CannotComputeDfa.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "rte\/CannotComputeDfa.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/CannotComputeDfa.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/CannotComputeDfa.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/CannotComputeDfa.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/CannotComputeDfa.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/CannotComputeDfa.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/CannotComputeDfa.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/CannotComputeDfa.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/CannotComputeDfa.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/CannotComputeDfa.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/CannotComputeDfa.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/CannotComputeDfa.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/CannotComputeDfa.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/CannotComputeDfa.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "rte\/CannotComputeDfa.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "rte\/CannotComputeDfa.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/CannotComputeDfa.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/CannotComputeDfa.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/CannotComputeDfa.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "rte\/CannotComputeDfa.html", "kind" : "class"}, {"name" : "rte.Cat", "shortDescription" : "", "object" : "rte\/Cat$.html", "members_object" : [{"label" : "createCat", "tail" : "(operands: Seq[Rte]): Rte", "member" : "rte.Cat.createCat", "link" : "rte\/Cat$.html#createCat(operands:Seq[rte.Rte]):rte.Rte", "kind" : "def"}, {"label" : "apply", "tail" : "(operands: Rte*)(ev: DummyImplicit): Cat", "member" : "rte.Cat.apply", "link" : "rte\/Cat$.html#apply(operands:rte.Rte*)(implicitev:DummyImplicit):rte.Cat", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/Cat$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/Cat$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/Cat$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/Cat$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/Cat$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/Cat$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/Cat$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Cat$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Cat$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Cat$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/Cat$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/Cat$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "rte\/Cat$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/Cat$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "rte\/Cat$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "rte\/Cat$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/Cat$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/Cat$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/Cat$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "search", "tail" : "(test: (Rte) => Boolean): Option[Rte]", "member" : "rte.Cat.search", "link" : "rte\/Cat.html#search(test:rte.Rte=>Boolean):Option[rte.Rte]", "kind" : "def"}, {"label" : "derivativeDown", "tail" : "(wrt: SimpleTypeD, factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.Cat.derivativeDown", "link" : "rte\/Cat.html#derivativeDown(wrt:genus.SimpleTypeD,factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeOnce", "tail" : "(): Rte", "member" : "rte.Cat.canonicalizeOnce", "link" : "rte\/Cat.html#canonicalizeOnce:rte.Rte", "kind" : "def"}, {"label" : "conversion1", "tail" : "(): Rte", "member" : "rte.Cat.conversion1", "link" : "rte\/Cat.html#conversion1():rte.Rte", "kind" : "def"}, {"label" : "conversion99", "tail" : "(): Rte", "member" : "rte.Cat.conversion99", "link" : "rte\/Cat.html#conversion99():rte.Rte", "kind" : "def"}, {"label" : "conversion7", "tail" : "(): Rte", "member" : "rte.Cat.conversion7", "link" : "rte\/Cat.html#conversion7():rte.Rte", "kind" : "def"}, {"label" : "conversion6", "tail" : "(): Rte", "member" : "rte.Cat.conversion6", "link" : "rte\/Cat.html#conversion6():rte.Rte", "kind" : "def"}, {"label" : "conversion5", "tail" : "(): Rte", "member" : "rte.Cat.conversion5", "link" : "rte\/Cat.html#conversion5():rte.Rte", "kind" : "def"}, {"label" : "conversion4", "tail" : "(): Rte", "member" : "rte.Cat.conversion4", "link" : "rte\/Cat.html#conversion4():rte.Rte", "kind" : "def"}, {"label" : "conversion3", "tail" : "(): Rte", "member" : "rte.Cat.conversion3", "link" : "rte\/Cat.html#conversion3():rte.Rte", "kind" : "def"}, {"label" : "firstTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "rte.Cat.firstTypes", "link" : "rte\/Cat.html#firstTypes:Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "rte.Cat.nullable", "link" : "rte\/Cat.html#nullable:Boolean", "kind" : "def"}, {"label" : "create", "tail" : "(operands: Seq[Rte]): Rte", "member" : "rte.Cat.create", "link" : "rte\/Cat.html#create(operands:Seq[rte.Rte]):rte.Rte", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "rte.Cat.toMachineReadable", "link" : "rte\/Cat.html#toMachineReadable():String", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "rte.Cat.toDot", "link" : "rte\/Cat.html#toDot():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "rte.Cat.toString", "link" : "rte\/Cat.html#toString():String", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "rte.Cat.toLaTeX", "link" : "rte\/Cat.html#toLaTeX():String", "kind" : "def"}, {"member" : "rte.Cat#<init>", "error" : "unsupported entity"}, {"label" : "operands", "tail" : ": Seq[Rte]", "member" : "rte.Cat.operands", "link" : "rte\/Cat.html#operands:Seq[rte.Rte]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "rte\/Cat.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "simulate", "tail" : "(exitValue: E, seq: Seq[Any]): Option[E]", "member" : "rte.Rte.simulate", "link" : "rte\/Cat.html#simulate[E](exitValue:E,seq:Seq[Any]):Option[E]", "kind" : "def"}, {"label" : "toDfa", "tail" : "(exitValue: E): Dfa[Any, SimpleTypeD, E]", "member" : "rte.Rte.toDfa", "link" : "rte\/Cat.html#toDfa[E](exitValue:E):xymbolyco.Dfa[Any,genus.SimpleTypeD,E]", "kind" : "def"}, {"label" : "derivatives", "tail" : "(): (Vector[Rte], Vector[Seq[(SimpleTypeD, Int)]])", "member" : "rte.Rte.derivatives", "link" : "rte\/Cat.html#derivatives():(Vector[rte.Rte],Vector[Seq[(genus.SimpleTypeD,Int)]])", "kind" : "def"}, {"label" : "derivative", "tail" : "(wrt: Option[SimpleTypeD], factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.Rte.derivative", "link" : "rte\/Cat.html#derivative(wrt:Option[genus.SimpleTypeD],factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "derivative1", "tail" : "(wrt: Option[SimpleTypeD]): Rte", "member" : "rte.Rte.derivative1", "link" : "rte\/Cat.html#derivative1(wrt:Option[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Cat.html#canonicalizeDebug(n:Int):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, samples: Seq[Seq[Any]]): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Cat.html#canonicalizeDebug(n:Int,samples:Seq[Seq[Any]]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, f: (Rte, Rte) => Unit): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Cat.html#canonicalizeDebug(n:Int,f:(rte.Rte,rte.Rte)=>Unit):rte.Rte", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(): Rte", "member" : "rte.Rte.canonicalize", "link" : "rte\/Cat.html#canonicalize:rte.Rte", "kind" : "def"}, {"label" : "isomorphic", "tail" : "(that: Rte): Option[Boolean]", "member" : "rte.Rte.isomorphic", "link" : "rte\/Cat.html#isomorphic(that:rte.Rte):Option[Boolean]", "kind" : "def"}, {"label" : "~=", "tail" : "(that: Rte): Boolean", "member" : "rte.Rte.~=", "link" : "rte\/Cat.html#~=(that:rte.Rte):Boolean", "kind" : "def"}, {"label" : "^", "tail" : "(n: Short): Rte", "member" : "rte.Rte.^", "link" : "rte\/Cat.html#^(n:Short):rte.Rte", "kind" : "def"}, {"label" : "+", "tail" : "(): Rte", "member" : "rte.Rte.+", "link" : "rte\/Cat.html#+:rte.Rte", "kind" : "def"}, {"label" : "*", "tail" : "(): Rte", "member" : "rte.Rte.*", "link" : "rte\/Cat.html#*:rte.Rte", "kind" : "def"}, {"label" : "?", "tail" : "(): Rte", "member" : "rte.Rte.?", "link" : "rte\/Cat.html#?:rte.Rte", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): Rte", "member" : "rte.Rte.unary_!", "link" : "rte\/Cat.html#unary_!:rte.Rte", "kind" : "def"}, {"label" : "++", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.++", "link" : "rte\/Cat.html#++(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "&", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.&", "link" : "rte\/Cat.html#&(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "|", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.|", "link" : "rte\/Cat.html#|(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/Cat.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/Cat.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/Cat.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/Cat.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/Cat.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/Cat.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/Cat.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Cat.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Cat.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Cat.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/Cat.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/Cat.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/Cat.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/Cat.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/Cat.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/Cat.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "rte\/Cat.html", "kind" : "case class"}, {"name" : "rte.Combination", "shortDescription" : "", "members_class" : [{"label" : "search", "tail" : "(test: (Rte) => Boolean): Option[Rte]", "member" : "rte.Combination.search", "link" : "rte\/Combination.html#search(test:rte.Rte=>Boolean):Option[rte.Rte]", "kind" : "def"}, {"label" : "derivativeDown", "tail" : "(wrt: SimpleTypeD, factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.Combination.derivativeDown", "link" : "rte\/Combination.html#derivativeDown(wrt:genus.SimpleTypeD,factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeOnce", "tail" : "(): Rte", "member" : "rte.Combination.canonicalizeOnce", "link" : "rte\/Combination.html#canonicalizeOnce:rte.Rte", "kind" : "def"}, {"label" : "conversionC1", "tail" : "(): Rte", "member" : "rte.Combination.conversionC1", "link" : "rte\/Combination.html#conversionC1():rte.Rte", "kind" : "def"}, {"label" : "conversionC99", "tail" : "(): Rte", "member" : "rte.Combination.conversionC99", "link" : "rte\/Combination.html#conversionC99():rte.Rte", "kind" : "def"}, {"label" : "conversionC21", "tail" : "(): Rte", "member" : "rte.Combination.conversionC21", "link" : "rte\/Combination.html#conversionC21():rte.Rte", "kind" : "def"}, {"label" : "conversionC17", "tail" : "(): Rte", "member" : "rte.Combination.conversionC17", "link" : "rte\/Combination.html#conversionC17():rte.Rte", "kind" : "def"}, {"label" : "conversionC16", "tail" : "(): Rte", "member" : "rte.Combination.conversionC16", "link" : "rte\/Combination.html#conversionC16():rte.Rte", "kind" : "def"}, {"label" : "conversionC15", "tail" : "(): Rte", "member" : "rte.Combination.conversionC15", "link" : "rte\/Combination.html#conversionC15():rte.Rte", "kind" : "def"}, {"label" : "conversionC12", "tail" : "(): Rte", "member" : "rte.Combination.conversionC12", "link" : "rte\/Combination.html#conversionC12():rte.Rte", "kind" : "def"}, {"label" : "conversionC14", "tail" : "(): Rte", "member" : "rte.Combination.conversionC14", "link" : "rte\/Combination.html#conversionC14():rte.Rte", "kind" : "def"}, {"label" : "conversionC11", "tail" : "(): Rte", "member" : "rte.Combination.conversionC11", "link" : "rte\/Combination.html#conversionC11():rte.Rte", "kind" : "def"}, {"label" : "conversionC7", "tail" : "(): Rte", "member" : "rte.Combination.conversionC7", "link" : "rte\/Combination.html#conversionC7():rte.Rte", "kind" : "def"}, {"label" : "conversionC6", "tail" : "(): Rte", "member" : "rte.Combination.conversionC6", "link" : "rte\/Combination.html#conversionC6():rte.Rte", "kind" : "def"}, {"label" : "conversionC5", "tail" : "(): Rte", "member" : "rte.Combination.conversionC5", "link" : "rte\/Combination.html#conversionC5():rte.Rte", "kind" : "def"}, {"label" : "conversionC4", "tail" : "(): Rte", "member" : "rte.Combination.conversionC4", "link" : "rte\/Combination.html#conversionC4():rte.Rte", "kind" : "def"}, {"label" : "conversionC3", "tail" : "(): Rte", "member" : "rte.Combination.conversionC3", "link" : "rte\/Combination.html#conversionC3():rte.Rte", "kind" : "def"}, {"label" : "firstTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "rte.Combination.firstTypes", "link" : "rte\/Combination.html#firstTypes:Set[genus.SimpleTypeD]", "kind" : "def"}, {"member" : "rte.Combination#<init>", "error" : "unsupported entity"}, {"label" : "operands", "tail" : ": Seq[Rte]", "member" : "rte.Combination.operands", "link" : "rte\/Combination.html#operands:Seq[rte.Rte]", "kind" : "val"}, {"label" : "simulate", "tail" : "(exitValue: E, seq: Seq[Any]): Option[E]", "member" : "rte.Rte.simulate", "link" : "rte\/Combination.html#simulate[E](exitValue:E,seq:Seq[Any]):Option[E]", "kind" : "def"}, {"label" : "toDfa", "tail" : "(exitValue: E): Dfa[Any, SimpleTypeD, E]", "member" : "rte.Rte.toDfa", "link" : "rte\/Combination.html#toDfa[E](exitValue:E):xymbolyco.Dfa[Any,genus.SimpleTypeD,E]", "kind" : "def"}, {"label" : "derivatives", "tail" : "(): (Vector[Rte], Vector[Seq[(SimpleTypeD, Int)]])", "member" : "rte.Rte.derivatives", "link" : "rte\/Combination.html#derivatives():(Vector[rte.Rte],Vector[Seq[(genus.SimpleTypeD,Int)]])", "kind" : "def"}, {"label" : "derivative", "tail" : "(wrt: Option[SimpleTypeD], factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.Rte.derivative", "link" : "rte\/Combination.html#derivative(wrt:Option[genus.SimpleTypeD],factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "derivative1", "tail" : "(wrt: Option[SimpleTypeD]): Rte", "member" : "rte.Rte.derivative1", "link" : "rte\/Combination.html#derivative1(wrt:Option[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Combination.html#canonicalizeDebug(n:Int):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, samples: Seq[Seq[Any]]): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Combination.html#canonicalizeDebug(n:Int,samples:Seq[Seq[Any]]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, f: (Rte, Rte) => Unit): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Combination.html#canonicalizeDebug(n:Int,f:(rte.Rte,rte.Rte)=>Unit):rte.Rte", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(): Rte", "member" : "rte.Rte.canonicalize", "link" : "rte\/Combination.html#canonicalize:rte.Rte", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "rte.Rte.toDot", "link" : "rte\/Combination.html#toDot():String", "kind" : "def"}, {"label" : "isomorphic", "tail" : "(that: Rte): Option[Boolean]", "member" : "rte.Rte.isomorphic", "link" : "rte\/Combination.html#isomorphic(that:rte.Rte):Option[Boolean]", "kind" : "def"}, {"label" : "~=", "tail" : "(that: Rte): Boolean", "member" : "rte.Rte.~=", "link" : "rte\/Combination.html#~=(that:rte.Rte):Boolean", "kind" : "def"}, {"label" : "^", "tail" : "(n: Short): Rte", "member" : "rte.Rte.^", "link" : "rte\/Combination.html#^(n:Short):rte.Rte", "kind" : "def"}, {"label" : "+", "tail" : "(): Rte", "member" : "rte.Rte.+", "link" : "rte\/Combination.html#+:rte.Rte", "kind" : "def"}, {"label" : "*", "tail" : "(): Rte", "member" : "rte.Rte.*", "link" : "rte\/Combination.html#*:rte.Rte", "kind" : "def"}, {"label" : "?", "tail" : "(): Rte", "member" : "rte.Rte.?", "link" : "rte\/Combination.html#?:rte.Rte", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): Rte", "member" : "rte.Rte.unary_!", "link" : "rte\/Combination.html#unary_!:rte.Rte", "kind" : "def"}, {"label" : "++", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.++", "link" : "rte\/Combination.html#++(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "&", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.&", "link" : "rte\/Combination.html#&(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "|", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.|", "link" : "rte\/Combination.html#|(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "rte.Rte.toMachineReadable", "link" : "rte\/Combination.html#toMachineReadable():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/Combination.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/Combination.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/Combination.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/Combination.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/Combination.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/Combination.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/Combination.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Combination.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Combination.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Combination.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/Combination.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/Combination.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "rte\/Combination.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/Combination.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "rte\/Combination.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "rte\/Combination.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/Combination.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/Combination.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/Combination.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "conversionD16b", "tail" : "(): Rte", "member" : "rte.Combination.conversionD16b", "link" : "rte\/Combination.html#conversionD16b():rte.Rte", "kind" : "abstract def"}, {"label" : "setDualOperation", "tail" : "(a: Seq[Any], b: Seq[Any]): Seq[Any]", "member" : "rte.Combination.setDualOperation", "link" : "rte\/Combination.html#setDualOperation(a:Seq[Any],b:Seq[Any]):Seq[Any]", "kind" : "abstract def"}, {"label" : "setOperation", "tail" : "(a: Seq[Any], b: Seq[Any]): Seq[Any]", "member" : "rte.Combination.setOperation", "link" : "rte\/Combination.html#setOperation(a:Seq[Any],b:Seq[Any]):Seq[Any]", "kind" : "abstract def"}, {"label" : "orInvert", "tail" : "(x: Boolean): Boolean", "member" : "rte.Combination.orInvert", "link" : "rte\/Combination.html#orInvert(x:Boolean):Boolean", "kind" : "abstract def"}, {"label" : "annihilator", "tail" : "(a: SimpleTypeD, b: SimpleTypeD): Option[Boolean]", "member" : "rte.Combination.annihilator", "link" : "rte\/Combination.html#annihilator(a:genus.SimpleTypeD,b:genus.SimpleTypeD):Option[Boolean]", "kind" : "abstract def"}, {"label" : "dualCombination", "tail" : "(d: Combination): Boolean", "member" : "rte.Combination.dualCombination", "link" : "rte\/Combination.html#dualCombination(d:rte.Combination):Boolean", "kind" : "abstract def"}, {"label" : "sameCombination", "tail" : "(c: Combination): Boolean", "member" : "rte.Combination.sameCombination", "link" : "rte\/Combination.html#sameCombination(c:rte.Combination):Boolean", "kind" : "abstract def"}, {"label" : "createDual", "tail" : "(operands: Seq[Rte]): Rte", "member" : "rte.Combination.createDual", "link" : "rte\/Combination.html#createDual(operands:Seq[rte.Rte]):rte.Rte", "kind" : "abstract def"}, {"label" : "createTypeD", "tail" : "(operands: Seq[SimpleTypeD]): SimpleTypeD", "member" : "rte.Combination.createTypeD", "link" : "rte\/Combination.html#createTypeD(operands:Seq[genus.SimpleTypeD]):genus.SimpleTypeD", "kind" : "abstract def"}, {"label" : "create", "tail" : "(operands: Seq[Rte]): Rte", "member" : "rte.Combination.create", "link" : "rte\/Combination.html#create(operands:Seq[rte.Rte]):rte.Rte", "kind" : "abstract def"}, {"label" : "one", "tail" : ": Rte", "member" : "rte.Combination.one", "link" : "rte\/Combination.html#one:rte.Rte", "kind" : "abstract val"}, {"label" : "zero", "tail" : ": Rte", "member" : "rte.Combination.zero", "link" : "rte\/Combination.html#zero:rte.Rte", "kind" : "abstract val"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "rte.Rte.nullable", "link" : "rte\/Combination.html#nullable:Boolean", "kind" : "abstract def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "rte.Rte.toLaTeX", "link" : "rte\/Combination.html#toLaTeX():String", "kind" : "abstract def"}], "class" : "rte\/Combination.html", "kind" : "class"}, {"name" : "rte.EmptySet", "shortDescription" : "", "object" : "rte\/EmptySet$.html", "members_object" : [{"label" : "derivativeDown", "tail" : "(wrt: SimpleTypeD, factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.EmptySet.derivativeDown", "link" : "rte\/EmptySet$.html#derivativeDown(wrt:genus.SimpleTypeD,factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "derivative", "tail" : "(wrt: Option[SimpleTypeD], factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.EmptySet.derivative", "link" : "rte\/EmptySet$.html#derivative(wrt:Option[genus.SimpleTypeD],factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeOnce", "tail" : "(): Rte", "member" : "rte.EmptySet.canonicalizeOnce", "link" : "rte\/EmptySet$.html#canonicalizeOnce:rte.Rte", "kind" : "def"}, {"label" : "inhabited", "tail" : "(): Option[Boolean]", "member" : "rte.EmptySet.inhabited", "link" : "rte\/EmptySet$.html#inhabited:Option[Boolean]", "kind" : "def"}, {"label" : "firstTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "rte.EmptySet.firstTypes", "link" : "rte\/EmptySet$.html#firstTypes:Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "rte.EmptySet.nullable", "link" : "rte\/EmptySet$.html#nullable:Boolean", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "rte.EmptySet.toDot", "link" : "rte\/EmptySet$.html#toDot():String", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "rte.EmptySet.toMachineReadable", "link" : "rte\/EmptySet$.html#toMachineReadable():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "rte.EmptySet.toString", "link" : "rte\/EmptySet$.html#toString():String", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "rte.EmptySet.toLaTeX", "link" : "rte\/EmptySet$.html#toLaTeX():String", "kind" : "def"}, {"label" : "search", "tail" : "(test: (Rte) => Boolean): Option[Rte]", "member" : "rte.Rte.search", "link" : "rte\/EmptySet$.html#search(test:rte.Rte=>Boolean):Option[rte.Rte]", "kind" : "def"}, {"label" : "simulate", "tail" : "(exitValue: E, seq: Seq[Any]): Option[E]", "member" : "rte.Rte.simulate", "link" : "rte\/EmptySet$.html#simulate[E](exitValue:E,seq:Seq[Any]):Option[E]", "kind" : "def"}, {"label" : "toDfa", "tail" : "(exitValue: E): Dfa[Any, SimpleTypeD, E]", "member" : "rte.Rte.toDfa", "link" : "rte\/EmptySet$.html#toDfa[E](exitValue:E):xymbolyco.Dfa[Any,genus.SimpleTypeD,E]", "kind" : "def"}, {"label" : "derivatives", "tail" : "(): (Vector[Rte], Vector[Seq[(SimpleTypeD, Int)]])", "member" : "rte.Rte.derivatives", "link" : "rte\/EmptySet$.html#derivatives():(Vector[rte.Rte],Vector[Seq[(genus.SimpleTypeD,Int)]])", "kind" : "def"}, {"label" : "derivative1", "tail" : "(wrt: Option[SimpleTypeD]): Rte", "member" : "rte.Rte.derivative1", "link" : "rte\/EmptySet$.html#derivative1(wrt:Option[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/EmptySet$.html#canonicalizeDebug(n:Int):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, samples: Seq[Seq[Any]]): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/EmptySet$.html#canonicalizeDebug(n:Int,samples:Seq[Seq[Any]]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, f: (Rte, Rte) => Unit): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/EmptySet$.html#canonicalizeDebug(n:Int,f:(rte.Rte,rte.Rte)=>Unit):rte.Rte", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(): Rte", "member" : "rte.Rte.canonicalize", "link" : "rte\/EmptySet$.html#canonicalize:rte.Rte", "kind" : "def"}, {"label" : "isomorphic", "tail" : "(that: Rte): Option[Boolean]", "member" : "rte.Rte.isomorphic", "link" : "rte\/EmptySet$.html#isomorphic(that:rte.Rte):Option[Boolean]", "kind" : "def"}, {"label" : "~=", "tail" : "(that: Rte): Boolean", "member" : "rte.Rte.~=", "link" : "rte\/EmptySet$.html#~=(that:rte.Rte):Boolean", "kind" : "def"}, {"label" : "^", "tail" : "(n: Short): Rte", "member" : "rte.Rte.^", "link" : "rte\/EmptySet$.html#^(n:Short):rte.Rte", "kind" : "def"}, {"label" : "+", "tail" : "(): Rte", "member" : "rte.Rte.+", "link" : "rte\/EmptySet$.html#+:rte.Rte", "kind" : "def"}, {"label" : "*", "tail" : "(): Rte", "member" : "rte.Rte.*", "link" : "rte\/EmptySet$.html#*:rte.Rte", "kind" : "def"}, {"label" : "?", "tail" : "(): Rte", "member" : "rte.Rte.?", "link" : "rte\/EmptySet$.html#?:rte.Rte", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): Rte", "member" : "rte.Rte.unary_!", "link" : "rte\/EmptySet$.html#unary_!:rte.Rte", "kind" : "def"}, {"label" : "++", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.++", "link" : "rte\/EmptySet$.html#++(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "&", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.&", "link" : "rte\/EmptySet$.html#&(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "|", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.|", "link" : "rte\/EmptySet$.html#|(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/EmptySet$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/EmptySet$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/EmptySet$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/EmptySet$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/EmptySet$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/EmptySet$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/EmptySet$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/EmptySet$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/EmptySet$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/EmptySet$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/EmptySet$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/EmptySet$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/EmptySet$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "rte\/EmptySet$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "rte\/EmptySet$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/EmptySet$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/EmptySet$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/EmptySet$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "rte.EmptyWord", "shortDescription" : "", "object" : "rte\/EmptyWord$.html", "members_object" : [{"label" : "derivativeDown", "tail" : "(wrt: SimpleTypeD, factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.EmptyWord.derivativeDown", "link" : "rte\/EmptyWord$.html#derivativeDown(wrt:genus.SimpleTypeD,factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeOnce", "tail" : "(): Rte", "member" : "rte.EmptyWord.canonicalizeOnce", "link" : "rte\/EmptyWord$.html#canonicalizeOnce:rte.Rte", "kind" : "def"}, {"label" : "inhabited", "tail" : "(): Option[Boolean]", "member" : "rte.EmptyWord.inhabited", "link" : "rte\/EmptyWord$.html#inhabited:Option[Boolean]", "kind" : "def"}, {"label" : "firstTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "rte.EmptyWord.firstTypes", "link" : "rte\/EmptyWord$.html#firstTypes:Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "rte.EmptyWord.nullable", "link" : "rte\/EmptyWord$.html#nullable:Boolean", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "rte.EmptyWord.toMachineReadable", "link" : "rte\/EmptyWord$.html#toMachineReadable():String", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "rte.EmptyWord.toDot", "link" : "rte\/EmptyWord$.html#toDot():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "rte.EmptyWord.toString", "link" : "rte\/EmptyWord$.html#toString():String", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "rte.EmptyWord.toLaTeX", "link" : "rte\/EmptyWord$.html#toLaTeX():String", "kind" : "def"}, {"label" : "search", "tail" : "(test: (Rte) => Boolean): Option[Rte]", "member" : "rte.Rte.search", "link" : "rte\/EmptyWord$.html#search(test:rte.Rte=>Boolean):Option[rte.Rte]", "kind" : "def"}, {"label" : "simulate", "tail" : "(exitValue: E, seq: Seq[Any]): Option[E]", "member" : "rte.Rte.simulate", "link" : "rte\/EmptyWord$.html#simulate[E](exitValue:E,seq:Seq[Any]):Option[E]", "kind" : "def"}, {"label" : "toDfa", "tail" : "(exitValue: E): Dfa[Any, SimpleTypeD, E]", "member" : "rte.Rte.toDfa", "link" : "rte\/EmptyWord$.html#toDfa[E](exitValue:E):xymbolyco.Dfa[Any,genus.SimpleTypeD,E]", "kind" : "def"}, {"label" : "derivatives", "tail" : "(): (Vector[Rte], Vector[Seq[(SimpleTypeD, Int)]])", "member" : "rte.Rte.derivatives", "link" : "rte\/EmptyWord$.html#derivatives():(Vector[rte.Rte],Vector[Seq[(genus.SimpleTypeD,Int)]])", "kind" : "def"}, {"label" : "derivative", "tail" : "(wrt: Option[SimpleTypeD], factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.Rte.derivative", "link" : "rte\/EmptyWord$.html#derivative(wrt:Option[genus.SimpleTypeD],factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "derivative1", "tail" : "(wrt: Option[SimpleTypeD]): Rte", "member" : "rte.Rte.derivative1", "link" : "rte\/EmptyWord$.html#derivative1(wrt:Option[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/EmptyWord$.html#canonicalizeDebug(n:Int):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, samples: Seq[Seq[Any]]): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/EmptyWord$.html#canonicalizeDebug(n:Int,samples:Seq[Seq[Any]]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, f: (Rte, Rte) => Unit): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/EmptyWord$.html#canonicalizeDebug(n:Int,f:(rte.Rte,rte.Rte)=>Unit):rte.Rte", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(): Rte", "member" : "rte.Rte.canonicalize", "link" : "rte\/EmptyWord$.html#canonicalize:rte.Rte", "kind" : "def"}, {"label" : "isomorphic", "tail" : "(that: Rte): Option[Boolean]", "member" : "rte.Rte.isomorphic", "link" : "rte\/EmptyWord$.html#isomorphic(that:rte.Rte):Option[Boolean]", "kind" : "def"}, {"label" : "~=", "tail" : "(that: Rte): Boolean", "member" : "rte.Rte.~=", "link" : "rte\/EmptyWord$.html#~=(that:rte.Rte):Boolean", "kind" : "def"}, {"label" : "^", "tail" : "(n: Short): Rte", "member" : "rte.Rte.^", "link" : "rte\/EmptyWord$.html#^(n:Short):rte.Rte", "kind" : "def"}, {"label" : "+", "tail" : "(): Rte", "member" : "rte.Rte.+", "link" : "rte\/EmptyWord$.html#+:rte.Rte", "kind" : "def"}, {"label" : "*", "tail" : "(): Rte", "member" : "rte.Rte.*", "link" : "rte\/EmptyWord$.html#*:rte.Rte", "kind" : "def"}, {"label" : "?", "tail" : "(): Rte", "member" : "rte.Rte.?", "link" : "rte\/EmptyWord$.html#?:rte.Rte", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): Rte", "member" : "rte.Rte.unary_!", "link" : "rte\/EmptyWord$.html#unary_!:rte.Rte", "kind" : "def"}, {"label" : "++", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.++", "link" : "rte\/EmptyWord$.html#++(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "&", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.&", "link" : "rte\/EmptyWord$.html#&(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "|", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.|", "link" : "rte\/EmptyWord$.html#|(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/EmptyWord$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/EmptyWord$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/EmptyWord$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/EmptyWord$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/EmptyWord$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/EmptyWord$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/EmptyWord$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/EmptyWord$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/EmptyWord$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/EmptyWord$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/EmptyWord$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/EmptyWord$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/EmptyWord$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "rte\/EmptyWord$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "rte\/EmptyWord$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/EmptyWord$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/EmptyWord$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/EmptyWord$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "rte.Not", "shortDescription" : "", "members_case class" : [{"label" : "search", "tail" : "(test: (Rte) => Boolean): Option[Rte]", "member" : "rte.Not.search", "link" : "rte\/Not.html#search(test:rte.Rte=>Boolean):Option[rte.Rte]", "kind" : "def"}, {"label" : "derivativeDown", "tail" : "(wrt: SimpleTypeD, factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.Not.derivativeDown", "link" : "rte\/Not.html#derivativeDown(wrt:genus.SimpleTypeD,factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeOnce", "tail" : "(): Rte", "member" : "rte.Not.canonicalizeOnce", "link" : "rte\/Not.html#canonicalizeOnce:rte.Rte", "kind" : "def"}, {"label" : "firstTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "rte.Not.firstTypes", "link" : "rte\/Not.html#firstTypes:Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "rte.Not.nullable", "link" : "rte\/Not.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "rte.Not.toString", "link" : "rte\/Not.html#toString():String", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "rte.Not.toMachineReadable", "link" : "rte\/Not.html#toMachineReadable():String", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "rte.Not.toDot", "link" : "rte\/Not.html#toDot():String", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "rte.Not.toLaTeX", "link" : "rte\/Not.html#toLaTeX():String", "kind" : "def"}, {"member" : "rte.Not#<init>", "error" : "unsupported entity"}, {"label" : "operand", "tail" : ": Rte", "member" : "rte.Not.operand", "link" : "rte\/Not.html#operand:rte.Rte", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "rte\/Not.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "simulate", "tail" : "(exitValue: E, seq: Seq[Any]): Option[E]", "member" : "rte.Rte.simulate", "link" : "rte\/Not.html#simulate[E](exitValue:E,seq:Seq[Any]):Option[E]", "kind" : "def"}, {"label" : "toDfa", "tail" : "(exitValue: E): Dfa[Any, SimpleTypeD, E]", "member" : "rte.Rte.toDfa", "link" : "rte\/Not.html#toDfa[E](exitValue:E):xymbolyco.Dfa[Any,genus.SimpleTypeD,E]", "kind" : "def"}, {"label" : "derivatives", "tail" : "(): (Vector[Rte], Vector[Seq[(SimpleTypeD, Int)]])", "member" : "rte.Rte.derivatives", "link" : "rte\/Not.html#derivatives():(Vector[rte.Rte],Vector[Seq[(genus.SimpleTypeD,Int)]])", "kind" : "def"}, {"label" : "derivative", "tail" : "(wrt: Option[SimpleTypeD], factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.Rte.derivative", "link" : "rte\/Not.html#derivative(wrt:Option[genus.SimpleTypeD],factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "derivative1", "tail" : "(wrt: Option[SimpleTypeD]): Rte", "member" : "rte.Rte.derivative1", "link" : "rte\/Not.html#derivative1(wrt:Option[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Not.html#canonicalizeDebug(n:Int):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, samples: Seq[Seq[Any]]): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Not.html#canonicalizeDebug(n:Int,samples:Seq[Seq[Any]]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, f: (Rte, Rte) => Unit): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Not.html#canonicalizeDebug(n:Int,f:(rte.Rte,rte.Rte)=>Unit):rte.Rte", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(): Rte", "member" : "rte.Rte.canonicalize", "link" : "rte\/Not.html#canonicalize:rte.Rte", "kind" : "def"}, {"label" : "isomorphic", "tail" : "(that: Rte): Option[Boolean]", "member" : "rte.Rte.isomorphic", "link" : "rte\/Not.html#isomorphic(that:rte.Rte):Option[Boolean]", "kind" : "def"}, {"label" : "~=", "tail" : "(that: Rte): Boolean", "member" : "rte.Rte.~=", "link" : "rte\/Not.html#~=(that:rte.Rte):Boolean", "kind" : "def"}, {"label" : "^", "tail" : "(n: Short): Rte", "member" : "rte.Rte.^", "link" : "rte\/Not.html#^(n:Short):rte.Rte", "kind" : "def"}, {"label" : "+", "tail" : "(): Rte", "member" : "rte.Rte.+", "link" : "rte\/Not.html#+:rte.Rte", "kind" : "def"}, {"label" : "*", "tail" : "(): Rte", "member" : "rte.Rte.*", "link" : "rte\/Not.html#*:rte.Rte", "kind" : "def"}, {"label" : "?", "tail" : "(): Rte", "member" : "rte.Rte.?", "link" : "rte\/Not.html#?:rte.Rte", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): Rte", "member" : "rte.Rte.unary_!", "link" : "rte\/Not.html#unary_!:rte.Rte", "kind" : "def"}, {"label" : "++", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.++", "link" : "rte\/Not.html#++(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "&", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.&", "link" : "rte\/Not.html#&(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "|", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.|", "link" : "rte\/Not.html#|(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/Not.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/Not.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/Not.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/Not.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/Not.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/Not.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/Not.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Not.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Not.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Not.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/Not.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/Not.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/Not.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/Not.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/Not.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/Not.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "rte\/Not.html", "kind" : "case class"}, {"name" : "rte.Or", "shortDescription" : "", "object" : "rte\/Or$.html", "members_object" : [{"label" : "createOr", "tail" : "(operands: Seq[Rte]): Rte", "member" : "rte.Or.createOr", "link" : "rte\/Or$.html#createOr(operands:Seq[rte.Rte]):rte.Rte", "kind" : "def"}, {"label" : "apply", "tail" : "(operands: Rte*)(ev: DummyImplicit): Or", "member" : "rte.Or.apply", "link" : "rte\/Or$.html#apply(operands:rte.Rte*)(implicitev:DummyImplicit):rte.Or", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/Or$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/Or$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/Or$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/Or$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/Or$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/Or$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/Or$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Or$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Or$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Or$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/Or$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/Or$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "rte\/Or$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/Or$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "rte\/Or$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "rte\/Or$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/Or$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/Or$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/Or$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "canonicalizeOnce", "tail" : "(): Rte", "member" : "rte.Or.canonicalizeOnce", "link" : "rte\/Or.html#canonicalizeOnce:rte.Rte", "kind" : "def"}, {"label" : "conversionD16b", "tail" : "(): Rte", "member" : "rte.Or.conversionD16b", "link" : "rte\/Or.html#conversionD16b():rte.Rte", "kind" : "def"}, {"label" : "conversionO15", "tail" : "(): Rte", "member" : "rte.Or.conversionO15", "link" : "rte\/Or.html#conversionO15():rte.Rte", "kind" : "def"}, {"label" : "conversionO11b", "tail" : "(): Rte", "member" : "rte.Or.conversionO11b", "link" : "rte\/Or.html#conversionO11b():rte.Rte", "kind" : "def"}, {"label" : "conversionO10", "tail" : "(): Rte", "member" : "rte.Or.conversionO10", "link" : "rte\/Or.html#conversionO10():rte.Rte", "kind" : "def"}, {"label" : "conversionO9", "tail" : "(existsNullable: => Boolean): Rte", "member" : "rte.Or.conversionO9", "link" : "rte\/Or.html#conversionO9(existsNullable:=>Boolean):rte.Rte", "kind" : "def"}, {"label" : "conversionO8", "tail" : "(existsNullable: => Boolean): Rte", "member" : "rte.Or.conversionO8", "link" : "rte\/Or.html#conversionO8(existsNullable:=>Boolean):rte.Rte", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "rte.Or.nullable", "link" : "rte\/Or.html#nullable:Boolean", "kind" : "def"}, {"label" : "setOperation", "tail" : "(a: Seq[Any], b: Seq[Any]): Seq[Any]", "member" : "rte.Or.setOperation", "link" : "rte\/Or.html#setOperation(a:Seq[Any],b:Seq[Any]):Seq[Any]", "kind" : "def"}, {"label" : "setDualOperation", "tail" : "(a: Seq[Any], b: Seq[Any]): Seq[Any]", "member" : "rte.Or.setDualOperation", "link" : "rte\/Or.html#setDualOperation(a:Seq[Any],b:Seq[Any]):Seq[Any]", "kind" : "def"}, {"label" : "orInvert", "tail" : "(x: Boolean): Boolean", "member" : "rte.Or.orInvert", "link" : "rte\/Or.html#orInvert(x:Boolean):Boolean", "kind" : "def"}, {"label" : "annihilator", "tail" : "(a: SimpleTypeD, b: SimpleTypeD): Option[Boolean]", "member" : "rte.Or.annihilator", "link" : "rte\/Or.html#annihilator(a:genus.SimpleTypeD,b:genus.SimpleTypeD):Option[Boolean]", "kind" : "def"}, {"label" : "createDual", "tail" : "(operands: Seq[Rte]): Rte", "member" : "rte.Or.createDual", "link" : "rte\/Or.html#createDual(operands:Seq[rte.Rte]):rte.Rte", "kind" : "def"}, {"label" : "dualCombination", "tail" : "(c: Combination): Boolean", "member" : "rte.Or.dualCombination", "link" : "rte\/Or.html#dualCombination(c:rte.Combination):Boolean", "kind" : "def"}, {"label" : "createTypeD", "tail" : "(operands: Seq[SimpleTypeD]): SimpleTypeD", "member" : "rte.Or.createTypeD", "link" : "rte\/Or.html#createTypeD(operands:Seq[genus.SimpleTypeD]):genus.SimpleTypeD", "kind" : "def"}, {"label" : "create", "tail" : "(operands: Seq[Rte]): Rte", "member" : "rte.Or.create", "link" : "rte\/Or.html#create(operands:Seq[rte.Rte]):rte.Rte", "kind" : "def"}, {"label" : "sameCombination", "tail" : "(c: Combination): Boolean", "member" : "rte.Or.sameCombination", "link" : "rte\/Or.html#sameCombination(c:rte.Combination):Boolean", "kind" : "def"}, {"label" : "one", "tail" : ": Rte", "member" : "rte.Or.one", "link" : "rte\/Or.html#one:rte.Rte", "kind" : "val"}, {"label" : "zero", "tail" : ": Rte", "member" : "rte.Or.zero", "link" : "rte\/Or.html#zero:rte.Rte", "kind" : "val"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "rte.Or.toLaTeX", "link" : "rte\/Or.html#toLaTeX():String", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "rte.Or.toDot", "link" : "rte\/Or.html#toDot():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "rte.Or.toString", "link" : "rte\/Or.html#toString():String", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "rte.Or.toMachineReadable", "link" : "rte\/Or.html#toMachineReadable():String", "kind" : "def"}, {"member" : "rte.Or#<init>", "error" : "unsupported entity"}, {"label" : "operands", "tail" : ": Seq[Rte]", "member" : "rte.Or.operands", "link" : "rte\/Or.html#operands:Seq[rte.Rte]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "rte\/Or.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "search", "tail" : "(test: (Rte) => Boolean): Option[Rte]", "member" : "rte.Combination.search", "link" : "rte\/Or.html#search(test:rte.Rte=>Boolean):Option[rte.Rte]", "kind" : "def"}, {"label" : "derivativeDown", "tail" : "(wrt: SimpleTypeD, factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.Combination.derivativeDown", "link" : "rte\/Or.html#derivativeDown(wrt:genus.SimpleTypeD,factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "conversionC1", "tail" : "(): Rte", "member" : "rte.Combination.conversionC1", "link" : "rte\/Or.html#conversionC1():rte.Rte", "kind" : "def"}, {"label" : "conversionC99", "tail" : "(): Rte", "member" : "rte.Combination.conversionC99", "link" : "rte\/Or.html#conversionC99():rte.Rte", "kind" : "def"}, {"label" : "conversionC21", "tail" : "(): Rte", "member" : "rte.Combination.conversionC21", "link" : "rte\/Or.html#conversionC21():rte.Rte", "kind" : "def"}, {"label" : "conversionC17", "tail" : "(): Rte", "member" : "rte.Combination.conversionC17", "link" : "rte\/Or.html#conversionC17():rte.Rte", "kind" : "def"}, {"label" : "conversionC16", "tail" : "(): Rte", "member" : "rte.Combination.conversionC16", "link" : "rte\/Or.html#conversionC16():rte.Rte", "kind" : "def"}, {"label" : "conversionC15", "tail" : "(): Rte", "member" : "rte.Combination.conversionC15", "link" : "rte\/Or.html#conversionC15():rte.Rte", "kind" : "def"}, {"label" : "conversionC12", "tail" : "(): Rte", "member" : "rte.Combination.conversionC12", "link" : "rte\/Or.html#conversionC12():rte.Rte", "kind" : "def"}, {"label" : "conversionC14", "tail" : "(): Rte", "member" : "rte.Combination.conversionC14", "link" : "rte\/Or.html#conversionC14():rte.Rte", "kind" : "def"}, {"label" : "conversionC11", "tail" : "(): Rte", "member" : "rte.Combination.conversionC11", "link" : "rte\/Or.html#conversionC11():rte.Rte", "kind" : "def"}, {"label" : "conversionC7", "tail" : "(): Rte", "member" : "rte.Combination.conversionC7", "link" : "rte\/Or.html#conversionC7():rte.Rte", "kind" : "def"}, {"label" : "conversionC6", "tail" : "(): Rte", "member" : "rte.Combination.conversionC6", "link" : "rte\/Or.html#conversionC6():rte.Rte", "kind" : "def"}, {"label" : "conversionC5", "tail" : "(): Rte", "member" : "rte.Combination.conversionC5", "link" : "rte\/Or.html#conversionC5():rte.Rte", "kind" : "def"}, {"label" : "conversionC4", "tail" : "(): Rte", "member" : "rte.Combination.conversionC4", "link" : "rte\/Or.html#conversionC4():rte.Rte", "kind" : "def"}, {"label" : "conversionC3", "tail" : "(): Rte", "member" : "rte.Combination.conversionC3", "link" : "rte\/Or.html#conversionC3():rte.Rte", "kind" : "def"}, {"label" : "firstTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "rte.Combination.firstTypes", "link" : "rte\/Or.html#firstTypes:Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "simulate", "tail" : "(exitValue: E, seq: Seq[Any]): Option[E]", "member" : "rte.Rte.simulate", "link" : "rte\/Or.html#simulate[E](exitValue:E,seq:Seq[Any]):Option[E]", "kind" : "def"}, {"label" : "toDfa", "tail" : "(exitValue: E): Dfa[Any, SimpleTypeD, E]", "member" : "rte.Rte.toDfa", "link" : "rte\/Or.html#toDfa[E](exitValue:E):xymbolyco.Dfa[Any,genus.SimpleTypeD,E]", "kind" : "def"}, {"label" : "derivatives", "tail" : "(): (Vector[Rte], Vector[Seq[(SimpleTypeD, Int)]])", "member" : "rte.Rte.derivatives", "link" : "rte\/Or.html#derivatives():(Vector[rte.Rte],Vector[Seq[(genus.SimpleTypeD,Int)]])", "kind" : "def"}, {"label" : "derivative", "tail" : "(wrt: Option[SimpleTypeD], factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.Rte.derivative", "link" : "rte\/Or.html#derivative(wrt:Option[genus.SimpleTypeD],factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "derivative1", "tail" : "(wrt: Option[SimpleTypeD]): Rte", "member" : "rte.Rte.derivative1", "link" : "rte\/Or.html#derivative1(wrt:Option[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Or.html#canonicalizeDebug(n:Int):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, samples: Seq[Seq[Any]]): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Or.html#canonicalizeDebug(n:Int,samples:Seq[Seq[Any]]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, f: (Rte, Rte) => Unit): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Or.html#canonicalizeDebug(n:Int,f:(rte.Rte,rte.Rte)=>Unit):rte.Rte", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(): Rte", "member" : "rte.Rte.canonicalize", "link" : "rte\/Or.html#canonicalize:rte.Rte", "kind" : "def"}, {"label" : "isomorphic", "tail" : "(that: Rte): Option[Boolean]", "member" : "rte.Rte.isomorphic", "link" : "rte\/Or.html#isomorphic(that:rte.Rte):Option[Boolean]", "kind" : "def"}, {"label" : "~=", "tail" : "(that: Rte): Boolean", "member" : "rte.Rte.~=", "link" : "rte\/Or.html#~=(that:rte.Rte):Boolean", "kind" : "def"}, {"label" : "^", "tail" : "(n: Short): Rte", "member" : "rte.Rte.^", "link" : "rte\/Or.html#^(n:Short):rte.Rte", "kind" : "def"}, {"label" : "+", "tail" : "(): Rte", "member" : "rte.Rte.+", "link" : "rte\/Or.html#+:rte.Rte", "kind" : "def"}, {"label" : "*", "tail" : "(): Rte", "member" : "rte.Rte.*", "link" : "rte\/Or.html#*:rte.Rte", "kind" : "def"}, {"label" : "?", "tail" : "(): Rte", "member" : "rte.Rte.?", "link" : "rte\/Or.html#?:rte.Rte", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): Rte", "member" : "rte.Rte.unary_!", "link" : "rte\/Or.html#unary_!:rte.Rte", "kind" : "def"}, {"label" : "++", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.++", "link" : "rte\/Or.html#++(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "&", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.&", "link" : "rte\/Or.html#&(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "|", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.|", "link" : "rte\/Or.html#|(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/Or.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/Or.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/Or.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/Or.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/Or.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/Or.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/Or.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Or.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Or.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Or.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/Or.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/Or.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/Or.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/Or.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/Or.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/Or.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "rte\/Or.html", "kind" : "case class"}, {"name" : "rte.Permute", "shortDescription" : "", "object" : "rte\/Permute$.html", "members_object" : [{"label" : "apply", "tail" : "(operands: Rte*): Rte", "member" : "rte.Permute.apply", "link" : "rte\/Permute$.html#apply(operands:rte.Rte*):rte.Rte", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/Permute$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/Permute$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/Permute$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/Permute$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/Permute$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/Permute$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/Permute$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Permute$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Permute$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Permute$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/Permute$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/Permute$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "rte\/Permute$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/Permute$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "rte\/Permute$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "rte\/Permute$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/Permute$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/Permute$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/Permute$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "rte.Plus", "shortDescription" : "", "object" : "rte\/Plus$.html", "members_object" : [{"label" : "apply", "tail" : "(rte: Rte): Rte", "member" : "rte.Plus.apply", "link" : "rte\/Plus$.html#apply(rte:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/Plus$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/Plus$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/Plus$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/Plus$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/Plus$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/Plus$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/Plus$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Plus$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Plus$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Plus$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/Plus$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/Plus$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "rte\/Plus$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/Plus$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "rte\/Plus$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "rte\/Plus$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/Plus$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/Plus$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/Plus$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "rte.Rte", "shortDescription" : "", "object" : "rte\/Rte$.html", "members_class" : [{"label" : "search", "tail" : "(test: (Rte) => Boolean): Option[Rte]", "member" : "rte.Rte.search", "link" : "rte\/Rte.html#search(test:rte.Rte=>Boolean):Option[rte.Rte]", "kind" : "def"}, {"label" : "simulate", "tail" : "(exitValue: E, seq: Seq[Any]): Option[E]", "member" : "rte.Rte.simulate", "link" : "rte\/Rte.html#simulate[E](exitValue:E,seq:Seq[Any]):Option[E]", "kind" : "def"}, {"label" : "toDfa", "tail" : "(exitValue: E): Dfa[Any, SimpleTypeD, E]", "member" : "rte.Rte.toDfa", "link" : "rte\/Rte.html#toDfa[E](exitValue:E):xymbolyco.Dfa[Any,genus.SimpleTypeD,E]", "kind" : "def"}, {"label" : "derivatives", "tail" : "(): (Vector[Rte], Vector[Seq[(SimpleTypeD, Int)]])", "member" : "rte.Rte.derivatives", "link" : "rte\/Rte.html#derivatives():(Vector[rte.Rte],Vector[Seq[(genus.SimpleTypeD,Int)]])", "kind" : "def"}, {"label" : "derivative", "tail" : "(wrt: Option[SimpleTypeD], factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.Rte.derivative", "link" : "rte\/Rte.html#derivative(wrt:Option[genus.SimpleTypeD],factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "derivative1", "tail" : "(wrt: Option[SimpleTypeD]): Rte", "member" : "rte.Rte.derivative1", "link" : "rte\/Rte.html#derivative1(wrt:Option[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeOnce", "tail" : "(): Rte", "member" : "rte.Rte.canonicalizeOnce", "link" : "rte\/Rte.html#canonicalizeOnce:rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Rte.html#canonicalizeDebug(n:Int):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, samples: Seq[Seq[Any]]): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Rte.html#canonicalizeDebug(n:Int,samples:Seq[Seq[Any]]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, f: (Rte, Rte) => Unit): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Rte.html#canonicalizeDebug(n:Int,f:(rte.Rte,rte.Rte)=>Unit):rte.Rte", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(): Rte", "member" : "rte.Rte.canonicalize", "link" : "rte\/Rte.html#canonicalize:rte.Rte", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "rte.Rte.toDot", "link" : "rte\/Rte.html#toDot():String", "kind" : "def"}, {"label" : "isomorphic", "tail" : "(that: Rte): Option[Boolean]", "member" : "rte.Rte.isomorphic", "link" : "rte\/Rte.html#isomorphic(that:rte.Rte):Option[Boolean]", "kind" : "def"}, {"label" : "~=", "tail" : "(that: Rte): Boolean", "member" : "rte.Rte.~=", "link" : "rte\/Rte.html#~=(that:rte.Rte):Boolean", "kind" : "def"}, {"label" : "^", "tail" : "(n: Short): Rte", "member" : "rte.Rte.^", "link" : "rte\/Rte.html#^(n:Short):rte.Rte", "kind" : "def"}, {"label" : "+", "tail" : "(): Rte", "member" : "rte.Rte.+", "link" : "rte\/Rte.html#+:rte.Rte", "kind" : "def"}, {"label" : "*", "tail" : "(): Rte", "member" : "rte.Rte.*", "link" : "rte\/Rte.html#*:rte.Rte", "kind" : "def"}, {"label" : "?", "tail" : "(): Rte", "member" : "rte.Rte.?", "link" : "rte\/Rte.html#?:rte.Rte", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): Rte", "member" : "rte.Rte.unary_!", "link" : "rte\/Rte.html#unary_!:rte.Rte", "kind" : "def"}, {"label" : "++", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.++", "link" : "rte\/Rte.html#++(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "&", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.&", "link" : "rte\/Rte.html#&(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "|", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.|", "link" : "rte\/Rte.html#|(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "rte.Rte.toMachineReadable", "link" : "rte\/Rte.html#toMachineReadable():String", "kind" : "def"}, {"member" : "rte.Rte#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/Rte.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/Rte.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/Rte.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/Rte.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/Rte.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/Rte.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/Rte.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Rte.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Rte.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Rte.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/Rte.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/Rte.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "rte\/Rte.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/Rte.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "rte\/Rte.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "rte\/Rte.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/Rte.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/Rte.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/Rte.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "derivativeDown", "tail" : "(wrt: SimpleTypeD, factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.Rte.derivativeDown", "link" : "rte\/Rte.html#derivativeDown(wrt:genus.SimpleTypeD,factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "abstract def"}, {"label" : "firstTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "rte.Rte.firstTypes", "link" : "rte\/Rte.html#firstTypes:Set[genus.SimpleTypeD]", "kind" : "abstract def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "rte.Rte.nullable", "link" : "rte\/Rte.html#nullable:Boolean", "kind" : "abstract def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "rte.Rte.toLaTeX", "link" : "rte\/Rte.html#toLaTeX():String", "kind" : "abstract def"}], "members_object" : [{"label" : "rteView", "tail" : "(rte: Rte, title: String, abbrev: Boolean, label: Option[String], showSink: Boolean, dotFileCB: (String) => Unit, givenLabels: Seq[SimpleTypeD], printLatex: Boolean): String", "member" : "rte.Rte.rteView", "link" : "rte\/Rte$.html#rteView(rte:rte.Rte,title:String,abbrev:Boolean,label:Option[String],showSink:Boolean,dotFileCB:String=>Unit,givenLabels:Seq[genus.SimpleTypeD],printLatex:Boolean):String", "kind" : "def"}, {"label" : "randomRte", "tail" : "(depth: Int, avoidEmpty: Boolean): Rte", "member" : "rte.Rte.randomRte", "link" : "rte\/Rte$.html#randomRte(depth:Int,avoidEmpty:Boolean):rte.Rte", "kind" : "def"}, {"label" : "sortAlphabetically", "tail" : "(seq: Seq[Rte]): Seq[Rte]", "member" : "rte.Rte.sortAlphabetically", "link" : "rte\/Rte$.html#sortAlphabetically(seq:Seq[rte.Rte]):Seq[rte.Rte]", "kind" : "def"}, {"label" : "rteIfThenElse", "tail" : "(seq: Seq[(Rte, () => E)], otherwise: () => E, handleUnreachable: (Rte) => Unit): (Seq[Any]) => E", "member" : "rte.Rte.rteIfThenElse", "link" : "rte\/Rte$.html#rteIfThenElse[E](seq:Seq[(rte.Rte,()=>E)],otherwise:()=>E,handleUnreachable:rte.Rte=>Unit):Seq[Any]=>E", "kind" : "def"}, {"label" : "rteCase", "tail" : "(seq: Seq[(Rte, E)], handleUnreachable: (Rte) => Unit): (IterableOnce[Any]) => Option[E]", "member" : "rte.Rte.rteCase", "link" : "rte\/Rte$.html#rteCase[E](seq:Seq[(rte.Rte,E)],handleUnreachable:rte.Rte=>Unit):IterableOnce[Any]=>Option[E]", "kind" : "def"}, {"label" : "randomSeq", "tail" : "(depth: Int, length: Int, option: Boolean): Seq[Rte]", "member" : "rte.Rte.randomSeq", "link" : "rte\/Rte$.html#randomSeq(depth:Int,length:Int,option:Boolean):Seq[rte.Rte]", "kind" : "def"}, {"label" : "catxyzp", "tail" : "(rt: Rte): Boolean", "member" : "rte.Rte.catxyzp", "link" : "rte\/Rte$.html#catxyzp(rt:rte.Rte):Boolean", "kind" : "def"}, {"label" : "isSingleton", "tail" : "(rt: Rte): Boolean", "member" : "rte.Rte.isSingleton", "link" : "rte\/Rte$.html#isSingleton(rt:rte.Rte):Boolean", "kind" : "def"}, {"label" : "isOr", "tail" : "(rt: Rte): Boolean", "member" : "rte.Rte.isOr", "link" : "rte\/Rte$.html#isOr(rt:rte.Rte):Boolean", "kind" : "def"}, {"label" : "isStarCat", "tail" : "(rt: Rte): Boolean", "member" : "rte.Rte.isStarCat", "link" : "rte\/Rte$.html#isStarCat(rt:rte.Rte):Boolean", "kind" : "def"}, {"label" : "isStar", "tail" : "(rt: Rte): Boolean", "member" : "rte.Rte.isStar", "link" : "rte\/Rte$.html#isStar(rt:rte.Rte):Boolean", "kind" : "def"}, {"label" : "isPlus", "tail" : "(rt: Rte): Boolean", "member" : "rte.Rte.isPlus", "link" : "rte\/Rte$.html#isPlus(rt:rte.Rte):Boolean", "kind" : "def"}, {"label" : "isCat", "tail" : "(rt: Rte): Boolean", "member" : "rte.Rte.isCat", "link" : "rte\/Rte$.html#isCat(rt:rte.Rte):Boolean", "kind" : "def"}, {"label" : "isAnd", "tail" : "(rt: Rte): Boolean", "member" : "rte.Rte.isAnd", "link" : "rte\/Rte$.html#isAnd(rt:rte.Rte):Boolean", "kind" : "def"}, {"label" : "Atomic", "tail" : "(ct: Class[_]): Rte", "member" : "rte.Rte.Atomic", "link" : "rte\/Rte$.html#Atomic(ct:Class[_]):rte.Rte", "kind" : "def"}, {"label" : "Eql", "tail" : "(x: Any): Rte", "member" : "rte.Rte.Eql", "link" : "rte\/Rte$.html#Eql(x:Any):rte.Rte", "kind" : "def"}, {"label" : "Member", "tail" : "(xs: Any*): Rte", "member" : "rte.Rte.Member", "link" : "rte\/Rte$.html#Member(xs:Any*):rte.Rte", "kind" : "def"}, {"label" : "flattenSingletonTypes", "tail" : ": Boolean", "member" : "rte.Rte.flattenSingletonTypes", "link" : "rte\/Rte$.html#flattenSingletonTypes:Boolean", "kind" : "val"}, {"label" : "sigmaSigmaStar", "tail" : ": Rte", "member" : "rte.Rte.sigmaSigmaStar", "link" : "rte\/Rte$.html#sigmaSigmaStar:rte.Rte", "kind" : "val"}, {"label" : "notEpsilon", "tail" : ": Rte", "member" : "rte.Rte.notEpsilon", "link" : "rte\/Rte$.html#notEpsilon:rte.Rte", "kind" : "val"}, {"label" : "notSigma", "tail" : ": Rte", "member" : "rte.Rte.notSigma", "link" : "rte\/Rte$.html#notSigma:rte.Rte", "kind" : "val"}, {"label" : "sigmaSigmaStarSigma", "tail" : ": Rte", "member" : "rte.Rte.sigmaSigmaStarSigma", "link" : "rte\/Rte$.html#sigmaSigmaStarSigma:rte.Rte", "kind" : "val"}, {"label" : "sigmaStar", "tail" : ": Rte", "member" : "rte.Rte.sigmaStar", "link" : "rte\/Rte$.html#sigmaStar:rte.Rte", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/Rte$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/Rte$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/Rte$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/Rte$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/Rte$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/Rte$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/Rte$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Rte$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Rte$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Rte$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/Rte$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/Rte$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "rte\/Rte$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/Rte$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "rte\/Rte$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "rte\/Rte$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/Rte$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/Rte$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/Rte$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "rte\/Rte.html", "kind" : "class"}, {"name" : "rte.RteImplicits", "shortDescription" : "", "object" : "rte\/RteImplicits$.html", "members_object" : [{"label" : "classToRte", "tail" : "(raw: Class[_]): Rte", "member" : "rte.RteImplicits.classToRte", "link" : "rte\/RteImplicits$.html#classToRte(raw:Class[_]):rte.Rte", "kind" : "implicit def"}, {"label" : "tdToRte", "tail" : "(raw: SimpleTypeD): Rte", "member" : "rte.RteImplicits.tdToRte", "link" : "rte\/RteImplicits$.html#tdToRte(raw:genus.SimpleTypeD):rte.Rte", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/RteImplicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/RteImplicits$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/RteImplicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/RteImplicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/RteImplicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/RteImplicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/RteImplicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/RteImplicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/RteImplicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/RteImplicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/RteImplicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/RteImplicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "rte\/RteImplicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/RteImplicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "rte\/RteImplicits$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "rte\/RteImplicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/RteImplicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/RteImplicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/RteImplicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "rte.sanityTest", "shortDescription" : "", "object" : "rte\/sanityTest$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "rte.sanityTest.main", "link" : "rte\/sanityTest$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "check2", "tail" : "(): Unit", "member" : "rte.sanityTest.check2", "link" : "rte\/sanityTest$.html#check2():Unit", "kind" : "def"}, {"label" : "check1", "tail" : "(): Int", "member" : "rte.sanityTest.check1", "link" : "rte\/sanityTest$.html#check1():Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/sanityTest$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/sanityTest$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/sanityTest$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/sanityTest$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/sanityTest$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/sanityTest$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/sanityTest$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/sanityTest$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/sanityTest$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/sanityTest$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/sanityTest$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/sanityTest$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "rte\/sanityTest$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/sanityTest$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "rte\/sanityTest$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "rte\/sanityTest$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/sanityTest$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/sanityTest$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/sanityTest$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "rte.sanityTest2", "shortDescription" : "", "object" : "rte\/sanityTest2$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "rte.sanityTest2.main", "link" : "rte\/sanityTest2$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/sanityTest2$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/sanityTest2$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/sanityTest2$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/sanityTest2$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/sanityTest2$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/sanityTest2$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/sanityTest2$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/sanityTest2$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/sanityTest2$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/sanityTest2$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/sanityTest2$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/sanityTest2$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "rte\/sanityTest2$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/sanityTest2$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "rte\/sanityTest2$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "rte\/sanityTest2$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/sanityTest2$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/sanityTest2$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/sanityTest2$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "rte.Sigma", "shortDescription" : "", "object" : "rte\/Sigma$.html", "members_object" : [{"label" : "derivativeDown", "tail" : "(wrt: SimpleTypeD, factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.Sigma.derivativeDown", "link" : "rte\/Sigma$.html#derivativeDown(wrt:genus.SimpleTypeD,factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeOnce", "tail" : "(): Rte", "member" : "rte.Sigma.canonicalizeOnce", "link" : "rte\/Sigma$.html#canonicalizeOnce:rte.Rte", "kind" : "def"}, {"label" : "inhabited", "tail" : "(): Option[Boolean]", "member" : "rte.Sigma.inhabited", "link" : "rte\/Sigma$.html#inhabited:Option[Boolean]", "kind" : "def"}, {"label" : "firstTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "rte.Sigma.firstTypes", "link" : "rte\/Sigma$.html#firstTypes:Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "rte.Sigma.nullable", "link" : "rte\/Sigma$.html#nullable:Boolean", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "rte.Sigma.toDot", "link" : "rte\/Sigma$.html#toDot():String", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "rte.Sigma.toMachineReadable", "link" : "rte\/Sigma$.html#toMachineReadable():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "rte.Sigma.toString", "link" : "rte\/Sigma$.html#toString():String", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "rte.Sigma.toLaTeX", "link" : "rte\/Sigma$.html#toLaTeX():String", "kind" : "def"}, {"label" : "search", "tail" : "(test: (Rte) => Boolean): Option[Rte]", "member" : "rte.Rte.search", "link" : "rte\/Sigma$.html#search(test:rte.Rte=>Boolean):Option[rte.Rte]", "kind" : "def"}, {"label" : "simulate", "tail" : "(exitValue: E, seq: Seq[Any]): Option[E]", "member" : "rte.Rte.simulate", "link" : "rte\/Sigma$.html#simulate[E](exitValue:E,seq:Seq[Any]):Option[E]", "kind" : "def"}, {"label" : "toDfa", "tail" : "(exitValue: E): Dfa[Any, SimpleTypeD, E]", "member" : "rte.Rte.toDfa", "link" : "rte\/Sigma$.html#toDfa[E](exitValue:E):xymbolyco.Dfa[Any,genus.SimpleTypeD,E]", "kind" : "def"}, {"label" : "derivatives", "tail" : "(): (Vector[Rte], Vector[Seq[(SimpleTypeD, Int)]])", "member" : "rte.Rte.derivatives", "link" : "rte\/Sigma$.html#derivatives():(Vector[rte.Rte],Vector[Seq[(genus.SimpleTypeD,Int)]])", "kind" : "def"}, {"label" : "derivative", "tail" : "(wrt: Option[SimpleTypeD], factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.Rte.derivative", "link" : "rte\/Sigma$.html#derivative(wrt:Option[genus.SimpleTypeD],factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "derivative1", "tail" : "(wrt: Option[SimpleTypeD]): Rte", "member" : "rte.Rte.derivative1", "link" : "rte\/Sigma$.html#derivative1(wrt:Option[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Sigma$.html#canonicalizeDebug(n:Int):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, samples: Seq[Seq[Any]]): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Sigma$.html#canonicalizeDebug(n:Int,samples:Seq[Seq[Any]]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, f: (Rte, Rte) => Unit): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Sigma$.html#canonicalizeDebug(n:Int,f:(rte.Rte,rte.Rte)=>Unit):rte.Rte", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(): Rte", "member" : "rte.Rte.canonicalize", "link" : "rte\/Sigma$.html#canonicalize:rte.Rte", "kind" : "def"}, {"label" : "isomorphic", "tail" : "(that: Rte): Option[Boolean]", "member" : "rte.Rte.isomorphic", "link" : "rte\/Sigma$.html#isomorphic(that:rte.Rte):Option[Boolean]", "kind" : "def"}, {"label" : "~=", "tail" : "(that: Rte): Boolean", "member" : "rte.Rte.~=", "link" : "rte\/Sigma$.html#~=(that:rte.Rte):Boolean", "kind" : "def"}, {"label" : "^", "tail" : "(n: Short): Rte", "member" : "rte.Rte.^", "link" : "rte\/Sigma$.html#^(n:Short):rte.Rte", "kind" : "def"}, {"label" : "+", "tail" : "(): Rte", "member" : "rte.Rte.+", "link" : "rte\/Sigma$.html#+:rte.Rte", "kind" : "def"}, {"label" : "*", "tail" : "(): Rte", "member" : "rte.Rte.*", "link" : "rte\/Sigma$.html#*:rte.Rte", "kind" : "def"}, {"label" : "?", "tail" : "(): Rte", "member" : "rte.Rte.?", "link" : "rte\/Sigma$.html#?:rte.Rte", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): Rte", "member" : "rte.Rte.unary_!", "link" : "rte\/Sigma$.html#unary_!:rte.Rte", "kind" : "def"}, {"label" : "++", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.++", "link" : "rte\/Sigma$.html#++(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "&", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.&", "link" : "rte\/Sigma$.html#&(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "|", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.|", "link" : "rte\/Sigma$.html#|(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/Sigma$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/Sigma$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/Sigma$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/Sigma$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/Sigma$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/Sigma$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/Sigma$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Sigma$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Sigma$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Sigma$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/Sigma$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/Sigma$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/Sigma$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "rte\/Sigma$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "rte\/Sigma$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/Sigma$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/Sigma$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/Sigma$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "rte.Singleton", "shortDescription" : "", "members_case class" : [{"label" : "derivative", "tail" : "(wrt: Option[SimpleTypeD], factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.Singleton.derivative", "link" : "rte\/Singleton.html#derivative(wrt:Option[genus.SimpleTypeD],factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "derivativeDown", "tail" : "(wrt: SimpleTypeD, factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.Singleton.derivativeDown", "link" : "rte\/Singleton.html#derivativeDown(wrt:genus.SimpleTypeD,factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeOnce", "tail" : "(): Rte", "member" : "rte.Singleton.canonicalizeOnce", "link" : "rte\/Singleton.html#canonicalizeOnce:rte.Rte", "kind" : "def"}, {"label" : "flattenTypes", "tail" : ": Boolean", "member" : "rte.Singleton.flattenTypes", "link" : "rte\/Singleton.html#flattenTypes:Boolean", "kind" : "val"}, {"label" : "inhabited", "tail" : "(): Option[Boolean]", "member" : "rte.Singleton.inhabited", "link" : "rte\/Singleton.html#inhabited:Option[Boolean]", "kind" : "def"}, {"label" : "firstTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "rte.Singleton.firstTypes", "link" : "rte\/Singleton.html#firstTypes:Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "rte.Singleton.nullable", "link" : "rte\/Singleton.html#nullable:Boolean", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "rte.Singleton.toDot", "link" : "rte\/Singleton.html#toDot():String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "rte.Singleton.toString", "link" : "rte\/Singleton.html#toString():String", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "rte.Singleton.toMachineReadable", "link" : "rte\/Singleton.html#toMachineReadable():String", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "rte.Singleton.toLaTeX", "link" : "rte\/Singleton.html#toLaTeX():String", "kind" : "def"}, {"member" : "rte.Singleton#<init>", "error" : "unsupported entity"}, {"label" : "td", "tail" : ": SimpleTypeD", "member" : "rte.Singleton.td", "link" : "rte\/Singleton.html#td:genus.SimpleTypeD", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "rte\/Singleton.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "search", "tail" : "(test: (Rte) => Boolean): Option[Rte]", "member" : "rte.Rte.search", "link" : "rte\/Singleton.html#search(test:rte.Rte=>Boolean):Option[rte.Rte]", "kind" : "def"}, {"label" : "simulate", "tail" : "(exitValue: E, seq: Seq[Any]): Option[E]", "member" : "rte.Rte.simulate", "link" : "rte\/Singleton.html#simulate[E](exitValue:E,seq:Seq[Any]):Option[E]", "kind" : "def"}, {"label" : "toDfa", "tail" : "(exitValue: E): Dfa[Any, SimpleTypeD, E]", "member" : "rte.Rte.toDfa", "link" : "rte\/Singleton.html#toDfa[E](exitValue:E):xymbolyco.Dfa[Any,genus.SimpleTypeD,E]", "kind" : "def"}, {"label" : "derivatives", "tail" : "(): (Vector[Rte], Vector[Seq[(SimpleTypeD, Int)]])", "member" : "rte.Rte.derivatives", "link" : "rte\/Singleton.html#derivatives():(Vector[rte.Rte],Vector[Seq[(genus.SimpleTypeD,Int)]])", "kind" : "def"}, {"label" : "derivative1", "tail" : "(wrt: Option[SimpleTypeD]): Rte", "member" : "rte.Rte.derivative1", "link" : "rte\/Singleton.html#derivative1(wrt:Option[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Singleton.html#canonicalizeDebug(n:Int):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, samples: Seq[Seq[Any]]): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Singleton.html#canonicalizeDebug(n:Int,samples:Seq[Seq[Any]]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, f: (Rte, Rte) => Unit): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Singleton.html#canonicalizeDebug(n:Int,f:(rte.Rte,rte.Rte)=>Unit):rte.Rte", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(): Rte", "member" : "rte.Rte.canonicalize", "link" : "rte\/Singleton.html#canonicalize:rte.Rte", "kind" : "def"}, {"label" : "isomorphic", "tail" : "(that: Rte): Option[Boolean]", "member" : "rte.Rte.isomorphic", "link" : "rte\/Singleton.html#isomorphic(that:rte.Rte):Option[Boolean]", "kind" : "def"}, {"label" : "~=", "tail" : "(that: Rte): Boolean", "member" : "rte.Rte.~=", "link" : "rte\/Singleton.html#~=(that:rte.Rte):Boolean", "kind" : "def"}, {"label" : "^", "tail" : "(n: Short): Rte", "member" : "rte.Rte.^", "link" : "rte\/Singleton.html#^(n:Short):rte.Rte", "kind" : "def"}, {"label" : "+", "tail" : "(): Rte", "member" : "rte.Rte.+", "link" : "rte\/Singleton.html#+:rte.Rte", "kind" : "def"}, {"label" : "*", "tail" : "(): Rte", "member" : "rte.Rte.*", "link" : "rte\/Singleton.html#*:rte.Rte", "kind" : "def"}, {"label" : "?", "tail" : "(): Rte", "member" : "rte.Rte.?", "link" : "rte\/Singleton.html#?:rte.Rte", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): Rte", "member" : "rte.Rte.unary_!", "link" : "rte\/Singleton.html#unary_!:rte.Rte", "kind" : "def"}, {"label" : "++", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.++", "link" : "rte\/Singleton.html#++(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "&", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.&", "link" : "rte\/Singleton.html#&(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "|", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.|", "link" : "rte\/Singleton.html#|(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/Singleton.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/Singleton.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/Singleton.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/Singleton.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/Singleton.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/Singleton.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/Singleton.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Singleton.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Singleton.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Singleton.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/Singleton.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/Singleton.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/Singleton.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/Singleton.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/Singleton.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/Singleton.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "rte\/Singleton.html", "kind" : "case class"}, {"name" : "rte.Star", "shortDescription" : "", "object" : "rte\/Star$.html", "members_object" : [{"label" : "createStar", "tail" : "(operand: Rte): Rte", "member" : "rte.Star.createStar", "link" : "rte\/Star$.html#createStar(operand:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/Star$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/Star$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/Star$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/Star$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/Star$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/Star$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/Star$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Star$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Star$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Star$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/Star$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/Star$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "rte\/Star$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/Star$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "rte\/Star$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "rte\/Star$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/Star$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/Star$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/Star$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "search", "tail" : "(test: (Rte) => Boolean): Option[Rte]", "member" : "rte.Star.search", "link" : "rte\/Star.html#search(test:rte.Rte=>Boolean):Option[rte.Rte]", "kind" : "def"}, {"label" : "derivativeDown", "tail" : "(wrt: SimpleTypeD, factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.Star.derivativeDown", "link" : "rte\/Star.html#derivativeDown(wrt:genus.SimpleTypeD,factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeOnce", "tail" : "(): Rte", "member" : "rte.Star.canonicalizeOnce", "link" : "rte\/Star.html#canonicalizeOnce:rte.Rte", "kind" : "def"}, {"label" : "conversion99", "tail" : "(): Rte", "member" : "rte.Star.conversion99", "link" : "rte\/Star.html#conversion99():rte.Rte", "kind" : "def"}, {"label" : "conversion3", "tail" : "(): Rte", "member" : "rte.Star.conversion3", "link" : "rte\/Star.html#conversion3():rte.Rte", "kind" : "def"}, {"label" : "conversion2", "tail" : "(): Rte", "member" : "rte.Star.conversion2", "link" : "rte\/Star.html#conversion2():rte.Rte", "kind" : "def"}, {"label" : "conversion1", "tail" : "(): Rte", "member" : "rte.Star.conversion1", "link" : "rte\/Star.html#conversion1():rte.Rte", "kind" : "def"}, {"label" : "getStarCatOperands", "tail" : "(rt: Rte): Seq[Rte]", "member" : "rte.Star.getStarCatOperands", "link" : "rte\/Star.html#getStarCatOperands(rt:rte.Rte):Seq[rte.Rte]", "kind" : "def"}, {"label" : "firstTypes", "tail" : "(): Set[SimpleTypeD]", "member" : "rte.Star.firstTypes", "link" : "rte\/Star.html#firstTypes:Set[genus.SimpleTypeD]", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "rte.Star.nullable", "link" : "rte\/Star.html#nullable:Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "rte.Star.toString", "link" : "rte\/Star.html#toString():String", "kind" : "def"}, {"label" : "toMachineReadable", "tail" : "(): String", "member" : "rte.Star.toMachineReadable", "link" : "rte\/Star.html#toMachineReadable():String", "kind" : "def"}, {"label" : "toDot", "tail" : "(): String", "member" : "rte.Star.toDot", "link" : "rte\/Star.html#toDot():String", "kind" : "def"}, {"label" : "toLaTeX", "tail" : "(): String", "member" : "rte.Star.toLaTeX", "link" : "rte\/Star.html#toLaTeX():String", "kind" : "def"}, {"member" : "rte.Star#<init>", "error" : "unsupported entity"}, {"label" : "operand", "tail" : ": Rte", "member" : "rte.Star.operand", "link" : "rte\/Star.html#operand:rte.Rte", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "rte\/Star.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "simulate", "tail" : "(exitValue: E, seq: Seq[Any]): Option[E]", "member" : "rte.Rte.simulate", "link" : "rte\/Star.html#simulate[E](exitValue:E,seq:Seq[Any]):Option[E]", "kind" : "def"}, {"label" : "toDfa", "tail" : "(exitValue: E): Dfa[Any, SimpleTypeD, E]", "member" : "rte.Rte.toDfa", "link" : "rte\/Star.html#toDfa[E](exitValue:E):xymbolyco.Dfa[Any,genus.SimpleTypeD,E]", "kind" : "def"}, {"label" : "derivatives", "tail" : "(): (Vector[Rte], Vector[Seq[(SimpleTypeD, Int)]])", "member" : "rte.Rte.derivatives", "link" : "rte\/Star.html#derivatives():(Vector[rte.Rte],Vector[Seq[(genus.SimpleTypeD,Int)]])", "kind" : "def"}, {"label" : "derivative", "tail" : "(wrt: Option[SimpleTypeD], factors: List[SimpleTypeD], disjoints: List[SimpleTypeD]): Rte", "member" : "rte.Rte.derivative", "link" : "rte\/Star.html#derivative(wrt:Option[genus.SimpleTypeD],factors:List[genus.SimpleTypeD],disjoints:List[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "derivative1", "tail" : "(wrt: Option[SimpleTypeD]): Rte", "member" : "rte.Rte.derivative1", "link" : "rte\/Star.html#derivative1(wrt:Option[genus.SimpleTypeD]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Star.html#canonicalizeDebug(n:Int):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, samples: Seq[Seq[Any]]): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Star.html#canonicalizeDebug(n:Int,samples:Seq[Seq[Any]]):rte.Rte", "kind" : "def"}, {"label" : "canonicalizeDebug", "tail" : "(n: Int, f: (Rte, Rte) => Unit): Rte", "member" : "rte.Rte.canonicalizeDebug", "link" : "rte\/Star.html#canonicalizeDebug(n:Int,f:(rte.Rte,rte.Rte)=>Unit):rte.Rte", "kind" : "def"}, {"label" : "canonicalize", "tail" : "(): Rte", "member" : "rte.Rte.canonicalize", "link" : "rte\/Star.html#canonicalize:rte.Rte", "kind" : "def"}, {"label" : "isomorphic", "tail" : "(that: Rte): Option[Boolean]", "member" : "rte.Rte.isomorphic", "link" : "rte\/Star.html#isomorphic(that:rte.Rte):Option[Boolean]", "kind" : "def"}, {"label" : "~=", "tail" : "(that: Rte): Boolean", "member" : "rte.Rte.~=", "link" : "rte\/Star.html#~=(that:rte.Rte):Boolean", "kind" : "def"}, {"label" : "^", "tail" : "(n: Short): Rte", "member" : "rte.Rte.^", "link" : "rte\/Star.html#^(n:Short):rte.Rte", "kind" : "def"}, {"label" : "+", "tail" : "(): Rte", "member" : "rte.Rte.+", "link" : "rte\/Star.html#+:rte.Rte", "kind" : "def"}, {"label" : "*", "tail" : "(): Rte", "member" : "rte.Rte.*", "link" : "rte\/Star.html#*:rte.Rte", "kind" : "def"}, {"label" : "?", "tail" : "(): Rte", "member" : "rte.Rte.?", "link" : "rte\/Star.html#?:rte.Rte", "kind" : "def"}, {"label" : "unary_!", "tail" : "(): Rte", "member" : "rte.Rte.unary_!", "link" : "rte\/Star.html#unary_!:rte.Rte", "kind" : "def"}, {"label" : "++", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.++", "link" : "rte\/Star.html#++(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "&", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.&", "link" : "rte\/Star.html#&(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "|", "tail" : "(r: Rte): Rte", "member" : "rte.Rte.|", "link" : "rte\/Star.html#|(r:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/Star.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/Star.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/Star.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/Star.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/Star.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/Star.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/Star.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Star.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Star.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Star.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/Star.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/Star.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/Star.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/Star.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/Star.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/Star.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "rte\/Star.html", "kind" : "case class"}, {"name" : "rte.Xor", "shortDescription" : "", "object" : "rte\/Xor$.html", "members_object" : [{"label" : "apply", "tail" : "(a: Rte, b: Rte): Rte", "member" : "rte.Xor.apply", "link" : "rte\/Xor$.html#apply(a:rte.Rte,b:rte.Rte):rte.Rte", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "rte\/Xor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "rte\/Xor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "rte\/Xor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "rte\/Xor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "rte\/Xor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "rte\/Xor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "rte\/Xor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Xor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Xor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "rte\/Xor$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "rte\/Xor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "rte\/Xor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "rte\/Xor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "rte\/Xor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "rte\/Xor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "rte\/Xor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "rte\/Xor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "rte\/Xor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "rte\/Xor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ifl" : [{"name" : "ifl.Ifl2022", "shortDescription" : "", "object" : "ifl\/Ifl2022$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "ifl.Ifl2022.main", "link" : "ifl\/Ifl2022$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "timeColorGraph", "tail" : "(): Unit", "member" : "ifl.Ifl2022.timeColorGraph", "link" : "ifl\/Ifl2022$.html#timeColorGraph():Unit", "kind" : "def"}, {"label" : "drawMapConstraints", "tail" : "(): Unit", "member" : "ifl.Ifl2022.drawMapConstraints", "link" : "ifl\/Ifl2022$.html#drawMapConstraints():Unit", "kind" : "def"}, {"label" : "fourColor", "tail" : "(): Unit", "member" : "ifl.Ifl2022.fourColor", "link" : "ifl\/Ifl2022$.html#fourColor():Unit", "kind" : "def"}, {"label" : "rationalSums", "tail" : "(): Unit", "member" : "ifl.Ifl2022.rationalSums", "link" : "ifl\/Ifl2022$.html#rationalSums():Unit", "kind" : "def"}, {"label" : "floatSums", "tail" : "(n: Int): Unit", "member" : "ifl.Ifl2022.floatSums", "link" : "ifl\/Ifl2022$.html#floatSums(n:Int):Unit", "kind" : "def"}, {"label" : "setUnionsRandom", "tail" : "(n: Int, getA: () => A): Unit", "member" : "ifl.Ifl2022.setUnionsRandom", "link" : "ifl\/Ifl2022$.html#setUnionsRandom[A](n:Int,getA:()=>A):Unit", "kind" : "def"}, {"label" : "r1", "tail" : ": Random.type", "member" : "ifl.Ifl2022.r1", "link" : "ifl\/Ifl2022$.html#r1:scala.util.Random.type", "kind" : "val"}, {"label" : "floatSumsRandom", "tail" : "(n: Int): Unit", "member" : "ifl.Ifl2022.floatSumsRandom", "link" : "ifl\/Ifl2022$.html#floatSumsRandom(n:Int):Unit", "kind" : "def"}, {"label" : "indices", "tail" : "(scale: Double, data: List[Int], n: Int): List[Int]", "member" : "ifl.Ifl2022.indices", "link" : "ifl\/Ifl2022$.html#indices(scale:Double,data:List[Int],n:Int):List[Int]", "kind" : "def"}, {"label" : "floatAddition", "tail" : "(n: Int): (Rational, Double, Double)", "member" : "ifl.Ifl2022.floatAddition", "link" : "ifl\/Ifl2022$.html#floatAddition(n:Int):(spire.math.Rational,Double,Double)", "kind" : "def"}, {"label" : "suppressDotTitle", "tail" : "(line: String): Boolean", "member" : "ifl.Ifl2022.suppressDotTitle", "link" : "ifl\/Ifl2022$.html#suppressDotTitle(line:String):Boolean", "kind" : "def"}, {"label" : "suppressGnuTitle", "tail" : "(line: String): Boolean", "member" : "ifl.Ifl2022.suppressGnuTitle", "link" : "ifl\/Ifl2022$.html#suppressGnuTitle(line:String):Boolean", "kind" : "def"}, {"label" : "rationalZero", "tail" : ": Rational", "member" : "ifl.Ifl2022.rationalZero", "link" : "ifl\/Ifl2022$.html#rationalZero:spire.math.Rational", "kind" : "val"}, {"label" : "rationalAdd", "tail" : "(a: Rational, b: Rational): Rational", "member" : "ifl.Ifl2022.rationalAdd", "link" : "ifl\/Ifl2022$.html#rationalAdd(a:spire.math.Rational,b:spire.math.Rational):spire.math.Rational", "kind" : "def"}, {"label" : "dotDirName", "tail" : ": String", "member" : "ifl.Ifl2022.dotDirName", "link" : "ifl\/Ifl2022$.html#dotDirName:String", "kind" : "val"}, {"label" : "gnuPlotDataDirName", "tail" : ": String", "member" : "ifl.Ifl2022.gnuPlotDataDirName", "link" : "ifl\/Ifl2022$.html#gnuPlotDataDirName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ifl\/Ifl2022$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ifl\/Ifl2022$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ifl\/Ifl2022$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ifl\/Ifl2022$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ifl\/Ifl2022$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ifl\/Ifl2022$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ifl\/Ifl2022$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ifl\/Ifl2022$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ifl\/Ifl2022$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ifl\/Ifl2022$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ifl\/Ifl2022$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ifl\/Ifl2022$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ifl\/Ifl2022$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ifl\/Ifl2022$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ifl\/Ifl2022$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ifl\/Ifl2022$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ifl\/Ifl2022$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ifl\/Ifl2022$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ifl\/Ifl2022$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "lbdd" : [{"name" : "lbdd.And", "shortDescription" : "", "object" : "lbdd\/And$.html", "members_object" : [{"label" : "apply", "tail" : "(b1: LBdd, b2: LBdd): LBdd", "member" : "lbdd.And.apply", "link" : "lbdd\/And$.html#apply(b1:lbdd.LBdd,b2:lbdd.LBdd):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(l1: lazyNode, l2: lazyNode): LBdd", "member" : "lbdd.And.apply", "link" : "lbdd\/And$.html#apply(l1:lbdd.lazyNode,l2:lbdd.lazyNode):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(b: LBdd, l: lazyNode): lazyNode", "member" : "lbdd.And.apply", "link" : "lbdd\/And$.html#apply(b:lbdd.LBdd,l:lbdd.lazyNode):lbdd.lazyNode", "kind" : "def"}, {"label" : "andOp", "tail" : "(b1: LBddNode, b2: LBddNode): LBdd", "member" : "lbdd.And.andOp", "link" : "lbdd\/And$.html#andOp(b1:lbdd.LBddNode,b2:lbdd.LBddNode):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(b: LBdd): LBdd", "member" : "lbdd.And.apply", "link" : "lbdd\/And$.html#apply(b:lbdd.LBdd):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(): LBdd", "member" : "lbdd.And.apply", "link" : "lbdd\/And$.html#apply():lbdd.LBdd", "kind" : "def"}, {"label" : "commutative", "tail" : ": Boolean", "member" : "lbdd.And.commutative", "link" : "lbdd\/And$.html#commutative:Boolean", "kind" : "val"}, {"label" : "apply", "tail" : "(args: LBdd*): LBdd", "member" : "lbdd.BinaryOperations.apply", "link" : "lbdd\/And$.html#apply(args:lbdd.LBdd*):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(args: List[LBdd]): LBdd", "member" : "lbdd.BinaryOperations.apply", "link" : "lbdd\/And$.html#apply(args:List[lbdd.LBdd]):lbdd.LBdd", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lbdd\/And$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lbdd\/And$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lbdd\/And$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lbdd\/And$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lbdd\/And$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lbdd\/And$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lbdd\/And$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/And$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/And$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/And$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lbdd\/And$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lbdd\/And$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lbdd\/And$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lbdd\/And$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lbdd\/And$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lbdd\/And$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lbdd\/And$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lbdd\/And$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lbdd\/And$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lbdd.AndNot", "shortDescription" : "", "object" : "lbdd\/AndNot$.html", "members_object" : [{"label" : "apply", "tail" : "(b1: LBdd, b2: LBdd): LBdd", "member" : "lbdd.AndNot.apply", "link" : "lbdd\/AndNot$.html#apply(b1:lbdd.LBdd,b2:lbdd.LBdd):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(b: LBdd, l: lazyNode): LBdd", "member" : "lbdd.AndNot.apply", "link" : "lbdd\/AndNot$.html#apply(b:lbdd.LBdd,l:lbdd.lazyNode):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(l: lazyNode, b: LBdd): LBdd", "member" : "lbdd.AndNot.apply", "link" : "lbdd\/AndNot$.html#apply(l:lbdd.lazyNode,b:lbdd.LBdd):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(l1: lazyNode, l2: lazyNode): lazyNode", "member" : "lbdd.AndNot.apply", "link" : "lbdd\/AndNot$.html#apply(l1:lbdd.lazyNode,l2:lbdd.lazyNode):lbdd.lazyNode", "kind" : "def"}, {"label" : "andNotOp", "tail" : "(b1: LBddNode, b2: LBddNode): LBdd", "member" : "lbdd.AndNot.andNotOp", "link" : "lbdd\/AndNot$.html#andNotOp(b1:lbdd.LBddNode,b2:lbdd.LBddNode):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(b: LBdd): LBdd", "member" : "lbdd.AndNot.apply", "link" : "lbdd\/AndNot$.html#apply(b:lbdd.LBdd):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(): LBdd", "member" : "lbdd.AndNot.apply", "link" : "lbdd\/AndNot$.html#apply():lbdd.LBdd", "kind" : "def"}, {"label" : "commutative", "tail" : ": Boolean", "member" : "lbdd.AndNot.commutative", "link" : "lbdd\/AndNot$.html#commutative:Boolean", "kind" : "val"}, {"label" : "apply", "tail" : "(args: LBdd*): LBdd", "member" : "lbdd.BinaryOperations.apply", "link" : "lbdd\/AndNot$.html#apply(args:lbdd.LBdd*):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(args: List[LBdd]): LBdd", "member" : "lbdd.BinaryOperations.apply", "link" : "lbdd\/AndNot$.html#apply(args:List[lbdd.LBdd]):lbdd.LBdd", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lbdd\/AndNot$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lbdd\/AndNot$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lbdd\/AndNot$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lbdd\/AndNot$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lbdd\/AndNot$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lbdd\/AndNot$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lbdd\/AndNot$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/AndNot$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/AndNot$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/AndNot$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lbdd\/AndNot$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lbdd\/AndNot$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lbdd\/AndNot$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lbdd\/AndNot$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lbdd\/AndNot$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lbdd\/AndNot$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lbdd\/AndNot$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lbdd\/AndNot$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lbdd\/AndNot$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lbdd.BinaryOperations", "shortDescription" : "", "members_class" : [{"label" : "apply", "tail" : "(args: LBdd*): LBdd", "member" : "lbdd.BinaryOperations.apply", "link" : "lbdd\/BinaryOperations.html#apply(args:lbdd.LBdd*):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(args: List[LBdd]): LBdd", "member" : "lbdd.BinaryOperations.apply", "link" : "lbdd\/BinaryOperations.html#apply(args:List[lbdd.LBdd]):lbdd.LBdd", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lbdd\/BinaryOperations.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lbdd\/BinaryOperations.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lbdd\/BinaryOperations.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lbdd\/BinaryOperations.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lbdd\/BinaryOperations.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lbdd\/BinaryOperations.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lbdd\/BinaryOperations.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/BinaryOperations.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/BinaryOperations.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/BinaryOperations.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lbdd\/BinaryOperations.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lbdd\/BinaryOperations.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lbdd\/BinaryOperations.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lbdd\/BinaryOperations.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lbdd\/BinaryOperations.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lbdd\/BinaryOperations.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lbdd\/BinaryOperations.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lbdd\/BinaryOperations.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lbdd\/BinaryOperations.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "commutative", "tail" : ": Boolean", "member" : "lbdd.BinaryOperations.commutative", "link" : "lbdd\/BinaryOperations.html#commutative:Boolean", "kind" : "abstract val"}, {"label" : "apply", "tail" : "(b1: LBdd, b2: LBdd): LBdd", "member" : "lbdd.BinaryOperations.apply", "link" : "lbdd\/BinaryOperations.html#apply(b1:lbdd.LBdd,b2:lbdd.LBdd):lbdd.LBdd", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(b: LBdd): LBdd", "member" : "lbdd.BinaryOperations.apply", "link" : "lbdd\/BinaryOperations.html#apply(b:lbdd.LBdd):lbdd.LBdd", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(): LBdd", "member" : "lbdd.BinaryOperations.apply", "link" : "lbdd\/BinaryOperations.html#apply():lbdd.LBdd", "kind" : "abstract def"}], "class" : "lbdd\/BinaryOperations.html", "kind" : "class"}, {"name" : "lbdd.Evaluator", "shortDescription" : "", "object" : "lbdd\/Evaluator$.html", "members_object" : [{"label" : "truthTable", "tail" : "(b: LBdd, n: Int): Unit", "member" : "lbdd.Evaluator.truthTable", "link" : "lbdd\/Evaluator$.html#truthTable(b:lbdd.LBdd,n:Int):Unit", "kind" : "def"}, {"label" : "truthEval", "tail" : "(b1: LBdd, b2: LBdd, n: Int): Boolean", "member" : "lbdd.Evaluator.truthEval", "link" : "lbdd\/Evaluator$.html#truthEval(b1:lbdd.LBdd,b2:lbdd.LBdd,n:Int):Boolean", "kind" : "def"}, {"label" : "mapPermutations", "tail" : "(n: Int): Set[Map[Int, Boolean]]", "member" : "lbdd.Evaluator.mapPermutations", "link" : "lbdd\/Evaluator$.html#mapPermutations(n:Int):Set[Map[Int,Boolean]]", "kind" : "def"}, {"label" : "permutations", "tail" : "(n: Int): List[List[Boolean]]", "member" : "lbdd.Evaluator.permutations", "link" : "lbdd\/Evaluator$.html#permutations(n:Int):List[List[Boolean]]", "kind" : "def"}, {"label" : "apply", "tail" : "(node: lazyNode, assignment: Map[Int, Boolean]): Boolean", "member" : "lbdd.Evaluator.apply", "link" : "lbdd\/Evaluator$.html#apply(node:lbdd.lazyNode,assignment:Map[Int,Boolean]):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(node: LBddNode, assignment: Map[Int, Boolean]): Boolean", "member" : "lbdd.Evaluator.apply", "link" : "lbdd\/Evaluator$.html#apply(node:lbdd.LBddNode,assignment:Map[Int,Boolean]):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(b: LBdd, assignment: Map[Int, Boolean]): Boolean", "member" : "lbdd.Evaluator.apply", "link" : "lbdd\/Evaluator$.html#apply(b:lbdd.LBdd,assignment:Map[Int,Boolean]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lbdd\/Evaluator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lbdd\/Evaluator$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lbdd\/Evaluator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lbdd\/Evaluator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lbdd\/Evaluator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lbdd\/Evaluator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lbdd\/Evaluator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/Evaluator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/Evaluator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/Evaluator$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lbdd\/Evaluator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lbdd\/Evaluator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lbdd\/Evaluator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lbdd\/Evaluator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lbdd\/Evaluator$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lbdd\/Evaluator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lbdd\/Evaluator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lbdd\/Evaluator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lbdd\/Evaluator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lbdd.GraphViz", "shortDescription" : "", "object" : "lbdd\/GraphViz$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "lbdd.GraphViz.main", "link" : "lbdd\/GraphViz$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "GraphVizOps", "tail" : "", "member" : "lbdd.GraphViz.GraphVizOps", "link" : "lbdd\/GraphViz$.html#GraphVizOpsextendsAnyVal", "kind" : "implicit final class"}, {"label" : "bddToDot", "tail" : "(bdd: LBdd, stream: OutputStream, drawFalseLeaf: Boolean, title: String): Unit", "member" : "lbdd.GraphViz.bddToDot", "link" : "lbdd\/GraphViz$.html#bddToDot(bdd:lbdd.LBdd,stream:java.io.OutputStream,drawFalseLeaf:Boolean,title:String):Unit", "kind" : "def"}, {"label" : "bddToPng", "tail" : "(bdd: LBdd, pathname: String, drawFalseLeaf: Boolean, title: String): String", "member" : "lbdd.GraphViz.bddToPng", "link" : "lbdd\/GraphViz$.html#bddToPng(bdd:lbdd.LBdd,pathname:String,drawFalseLeaf:Boolean,title:String):String", "kind" : "def"}, {"label" : "bddToPng", "tail" : "(bdd: LBdd, drawFalseLeaf: Boolean, title: String): String", "member" : "lbdd.GraphViz.bddToPng", "link" : "lbdd\/GraphViz$.html#bddToPng(bdd:lbdd.LBdd,drawFalseLeaf:Boolean,title:String):String", "kind" : "def"}, {"label" : "dotProgram", "tail" : ": String", "member" : "lbdd.GraphViz.dotProgram", "link" : "lbdd\/GraphViz$.html#dotProgram:String", "kind" : "val"}, {"label" : "bddView", "tail" : "(bdd: LBdd, drawFalseLeaf: Boolean, title: String): String", "member" : "lbdd.GraphViz.bddView", "link" : "lbdd\/GraphViz$.html#bddView(bdd:lbdd.LBdd,drawFalseLeaf:Boolean,title:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lbdd\/GraphViz$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lbdd\/GraphViz$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lbdd\/GraphViz$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lbdd\/GraphViz$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lbdd\/GraphViz$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lbdd\/GraphViz$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lbdd\/GraphViz$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/GraphViz$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/GraphViz$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/GraphViz$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lbdd\/GraphViz$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lbdd\/GraphViz$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lbdd\/GraphViz$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lbdd\/GraphViz$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lbdd\/GraphViz$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lbdd\/GraphViz$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lbdd\/GraphViz$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lbdd\/GraphViz$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lbdd\/GraphViz$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lbdd.LBdd", "shortDescription" : "", "object" : "lbdd\/LBdd$.html", "members_class" : [{"label" : "size", "tail" : "(): Int", "member" : "lbdd.LBdd.size", "link" : "lbdd\/LBdd.html#size():Int", "kind" : "def"}, {"label" : "fold", "tail" : "(z: R)(f: (R, LBdd) => R): R", "member" : "lbdd.LBdd.fold", "link" : "lbdd\/LBdd.html#fold[R](z:R)(f:(R,lbdd.LBdd)=>R):R", "kind" : "def"}, {"label" : "findSatisfyingAssignment", "tail" : "(): Option[(Assignment, Assignment)]", "member" : "lbdd.LBdd.findSatisfyingAssignment", "link" : "lbdd\/LBdd.html#findSatisfyingAssignment():Option[(bdd.Assignment,bdd.Assignment)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lbdd\/LBdd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lbdd\/LBdd.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lbdd\/LBdd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lbdd\/LBdd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lbdd\/LBdd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lbdd\/LBdd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lbdd\/LBdd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBdd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBdd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBdd.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lbdd\/LBdd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lbdd\/LBdd.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lbdd\/LBdd.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lbdd\/LBdd.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lbdd\/LBdd.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lbdd\/LBdd.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lbdd\/LBdd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lbdd\/LBdd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lbdd\/LBdd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(assignment: Assignment): Boolean", "member" : "lbdd.LBdd.apply", "link" : "lbdd\/LBdd.html#apply(assignment:bdd.Assignment):Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "apply", "tail" : "(label: Int, positive: LBdd, middle: lazyNode, negative: LBdd, negation: Boolean): LBdd", "member" : "lbdd.LBdd.apply", "link" : "lbdd\/LBdd$.html#apply(label:Int,positive:lbdd.LBdd,middle:lbdd.lazyNode,negative:lbdd.LBdd,negation:Boolean):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(label: Int, positive: LBdd, middle: lazyNode, negative: LBdd): LBdd", "member" : "lbdd.LBdd.apply", "link" : "lbdd\/LBdd$.html#apply(label:Int,positive:lbdd.LBdd,middle:lbdd.lazyNode,negative:lbdd.LBdd):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(label: Int): LBdd", "member" : "lbdd.LBdd.apply", "link" : "lbdd\/LBdd$.html#apply(label:Int):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(label: Int, b1: LBdd, b2: LBdd): LBdd", "member" : "lbdd.LBdd.apply", "link" : "lbdd\/LBdd$.html#apply(label:Int,b1:lbdd.LBdd,b2:lbdd.LBdd):lbdd.LBdd", "kind" : "def"}, {"label" : "int2lbdd", "tail" : "(raw: Int): LBdd", "member" : "lbdd.LBdd.int2lbdd", "link" : "lbdd\/LBdd$.html#int2lbdd(raw:Int):lbdd.LBdd", "kind" : "implicit def"}, {"label" : "counter", "tail" : ": Int", "member" : "lbdd.LBdd.counter", "link" : "lbdd\/LBdd$.html#counter:Int", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lbdd\/LBdd$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lbdd\/LBdd$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lbdd\/LBdd$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lbdd\/LBdd$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lbdd\/LBdd$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lbdd\/LBdd$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lbdd\/LBdd$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBdd$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBdd$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBdd$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lbdd\/LBdd$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lbdd\/LBdd$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lbdd\/LBdd$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lbdd\/LBdd$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lbdd\/LBdd$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lbdd\/LBdd$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lbdd\/LBdd$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lbdd\/LBdd$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lbdd\/LBdd$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "lbdd\/LBdd.html", "kind" : "class"}, {"name" : "lbdd.LBddFalse", "shortDescription" : "", "object" : "lbdd\/LBddFalse$.html", "members_object" : [{"label" : "apply", "tail" : "(assignment: Assignment): Boolean", "member" : "lbdd.LBddFalse.apply", "link" : "lbdd\/LBddFalse$.html#apply(assignment:bdd.Assignment):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "lbdd.LBddFalse.toString", "link" : "lbdd\/LBddFalse$.html#toString():String", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "lbdd.LBdd.size", "link" : "lbdd\/LBddFalse$.html#size():Int", "kind" : "def"}, {"label" : "fold", "tail" : "(z: R)(f: (R, LBdd) => R): R", "member" : "lbdd.LBdd.fold", "link" : "lbdd\/LBddFalse$.html#fold[R](z:R)(f:(R,lbdd.LBdd)=>R):R", "kind" : "def"}, {"label" : "findSatisfyingAssignment", "tail" : "(): Option[(Assignment, Assignment)]", "member" : "lbdd.LBdd.findSatisfyingAssignment", "link" : "lbdd\/LBddFalse$.html#findSatisfyingAssignment():Option[(bdd.Assignment,bdd.Assignment)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lbdd\/LBddFalse$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lbdd\/LBddFalse$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lbdd\/LBddFalse$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lbdd\/LBddFalse$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lbdd\/LBddFalse$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lbdd\/LBddFalse$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lbdd\/LBddFalse$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBddFalse$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBddFalse$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBddFalse$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lbdd\/LBddFalse$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lbdd\/LBddFalse$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lbdd\/LBddFalse$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lbdd\/LBddFalse$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lbdd\/LBddFalse$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lbdd\/LBddFalse$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lbdd\/LBddFalse$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lbdd\/LBddFalse$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lbdd.LBddNode", "shortDescription" : "", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "lbdd.LBddNode.toString", "link" : "lbdd\/LBddNode.html#toString():String", "kind" : "def"}, {"label" : "apply", "tail" : "(assignment: Assignment): Boolean", "member" : "lbdd.LBddNode.apply", "link" : "lbdd\/LBddNode.html#apply(assignment:bdd.Assignment):Boolean", "kind" : "def"}, {"label" : "validateChild", "tail" : "(child: LBdd): Unit", "member" : "lbdd.LBddNode.validateChild", "link" : "lbdd\/LBddNode.html#validateChild(child:lbdd.LBdd):Unit", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "lbdd.LBddNode.equals", "link" : "lbdd\/LBddNode.html#equals(that:Any):Boolean", "kind" : "def"}, {"member" : "lbdd.LBddNode#<init>", "error" : "unsupported entity"}, {"label" : "negation", "tail" : ": Boolean", "member" : "lbdd.LBddNode.negation", "link" : "lbdd\/LBddNode.html#negation:Boolean", "kind" : "val"}, {"label" : "negative", "tail" : ": LBdd", "member" : "lbdd.LBddNode.negative", "link" : "lbdd\/LBddNode.html#negative:lbdd.LBdd", "kind" : "val"}, {"label" : "middle", "tail" : ": lazyNode", "member" : "lbdd.LBddNode.middle", "link" : "lbdd\/LBddNode.html#middle:lbdd.lazyNode", "kind" : "val"}, {"label" : "positive", "tail" : ": LBdd", "member" : "lbdd.LBddNode.positive", "link" : "lbdd\/LBddNode.html#positive:lbdd.LBdd", "kind" : "val"}, {"label" : "label", "tail" : ": Int", "member" : "lbdd.LBddNode.label", "link" : "lbdd\/LBddNode.html#label:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "lbdd\/LBddNode.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "lbdd.LBdd.size", "link" : "lbdd\/LBddNode.html#size():Int", "kind" : "def"}, {"label" : "fold", "tail" : "(z: R)(f: (R, LBdd) => R): R", "member" : "lbdd.LBdd.fold", "link" : "lbdd\/LBddNode.html#fold[R](z:R)(f:(R,lbdd.LBdd)=>R):R", "kind" : "def"}, {"label" : "findSatisfyingAssignment", "tail" : "(): Option[(Assignment, Assignment)]", "member" : "lbdd.LBdd.findSatisfyingAssignment", "link" : "lbdd\/LBddNode.html#findSatisfyingAssignment():Option[(bdd.Assignment,bdd.Assignment)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lbdd\/LBddNode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lbdd\/LBddNode.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lbdd\/LBddNode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lbdd\/LBddNode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lbdd\/LBddNode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lbdd\/LBddNode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lbdd\/LBddNode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBddNode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBddNode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBddNode.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lbdd\/LBddNode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lbdd\/LBddNode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lbdd\/LBddNode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lbdd\/LBddNode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lbdd\/LBddNode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lbdd\/LBddNode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "lbdd\/LBddNode.html", "kind" : "case class"}, {"name" : "lbdd.LBddTerm", "shortDescription" : "", "members_class" : [{"label" : "size", "tail" : "(): Int", "member" : "lbdd.LBdd.size", "link" : "lbdd\/LBddTerm.html#size():Int", "kind" : "def"}, {"label" : "fold", "tail" : "(z: R)(f: (R, LBdd) => R): R", "member" : "lbdd.LBdd.fold", "link" : "lbdd\/LBddTerm.html#fold[R](z:R)(f:(R,lbdd.LBdd)=>R):R", "kind" : "def"}, {"label" : "findSatisfyingAssignment", "tail" : "(): Option[(Assignment, Assignment)]", "member" : "lbdd.LBdd.findSatisfyingAssignment", "link" : "lbdd\/LBddTerm.html#findSatisfyingAssignment():Option[(bdd.Assignment,bdd.Assignment)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lbdd\/LBddTerm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lbdd\/LBddTerm.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lbdd\/LBddTerm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lbdd\/LBddTerm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lbdd\/LBddTerm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lbdd\/LBddTerm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lbdd\/LBddTerm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBddTerm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBddTerm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBddTerm.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lbdd\/LBddTerm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lbdd\/LBddTerm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lbdd\/LBddTerm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lbdd\/LBddTerm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lbdd\/LBddTerm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lbdd\/LBddTerm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lbdd\/LBddTerm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lbdd\/LBddTerm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lbdd\/LBddTerm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(assignment: Assignment): Boolean", "member" : "lbdd.LBdd.apply", "link" : "lbdd\/LBddTerm.html#apply(assignment:bdd.Assignment):Boolean", "kind" : "abstract def"}], "class" : "lbdd\/LBddTerm.html", "kind" : "class"}, {"name" : "lbdd.LBddTest", "shortDescription" : "", "object" : "lbdd\/LBddTest$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "lbdd.LBddTest.main", "link" : "lbdd\/LBddTest$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lbdd\/LBddTest$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lbdd\/LBddTest$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lbdd\/LBddTest$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lbdd\/LBddTest$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lbdd\/LBddTest$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lbdd\/LBddTest$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lbdd\/LBddTest$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBddTest$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBddTest$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBddTest$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lbdd\/LBddTest$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lbdd\/LBddTest$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lbdd\/LBddTest$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lbdd\/LBddTest$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lbdd\/LBddTest$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lbdd\/LBddTest$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lbdd\/LBddTest$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lbdd\/LBddTest$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lbdd\/LBddTest$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lbdd.LBddTrue", "shortDescription" : "", "object" : "lbdd\/LBddTrue$.html", "members_object" : [{"label" : "apply", "tail" : "(assignments: Assignment): Boolean", "member" : "lbdd.LBddTrue.apply", "link" : "lbdd\/LBddTrue$.html#apply(assignments:bdd.Assignment):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "lbdd.LBddTrue.toString", "link" : "lbdd\/LBddTrue$.html#toString():String", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "lbdd.LBdd.size", "link" : "lbdd\/LBddTrue$.html#size():Int", "kind" : "def"}, {"label" : "fold", "tail" : "(z: R)(f: (R, LBdd) => R): R", "member" : "lbdd.LBdd.fold", "link" : "lbdd\/LBddTrue$.html#fold[R](z:R)(f:(R,lbdd.LBdd)=>R):R", "kind" : "def"}, {"label" : "findSatisfyingAssignment", "tail" : "(): Option[(Assignment, Assignment)]", "member" : "lbdd.LBdd.findSatisfyingAssignment", "link" : "lbdd\/LBddTrue$.html#findSatisfyingAssignment():Option[(bdd.Assignment,bdd.Assignment)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lbdd\/LBddTrue$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lbdd\/LBddTrue$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lbdd\/LBddTrue$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lbdd\/LBddTrue$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lbdd\/LBddTrue$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lbdd\/LBddTrue$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lbdd\/LBddTrue$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBddTrue$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBddTrue$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/LBddTrue$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lbdd\/LBddTrue$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lbdd\/LBddTrue$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lbdd\/LBddTrue$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lbdd\/LBddTrue$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lbdd\/LBddTrue$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lbdd\/LBddTrue$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lbdd\/LBddTrue$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lbdd\/LBddTrue$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lbdd.main", "shortDescription" : "", "object" : "lbdd\/main$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "lbdd.main.main", "link" : "lbdd\/main$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lbdd\/main$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lbdd\/main$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lbdd\/main$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lbdd\/main$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lbdd\/main$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lbdd\/main$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lbdd\/main$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/main$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/main$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/main$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lbdd\/main$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lbdd\/main$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lbdd\/main$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lbdd\/main$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lbdd\/main$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lbdd\/main$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lbdd\/main$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lbdd\/main$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lbdd\/main$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lbdd.Not", "shortDescription" : "", "object" : "lbdd\/Not$.html", "members_object" : [{"label" : "apply", "tail" : "(b: LBdd): LBdd", "member" : "lbdd.Not.apply", "link" : "lbdd\/Not$.html#apply(b:lbdd.LBdd):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(l: lazyNode): LBdd", "member" : "lbdd.Not.apply", "link" : "lbdd\/Not$.html#apply(l:lbdd.lazyNode):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(): LBdd", "member" : "lbdd.Not.apply", "link" : "lbdd\/Not$.html#apply():lbdd.LBdd", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lbdd\/Not$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lbdd\/Not$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lbdd\/Not$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lbdd\/Not$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lbdd\/Not$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lbdd\/Not$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lbdd\/Not$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/Not$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/Not$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/Not$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lbdd\/Not$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lbdd\/Not$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lbdd\/Not$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lbdd\/Not$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lbdd\/Not$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lbdd\/Not$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lbdd\/Not$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lbdd\/Not$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lbdd\/Not$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lbdd.Or", "shortDescription" : "", "object" : "lbdd\/Or$.html", "members_object" : [{"label" : "apply", "tail" : "(b: LBdd, l: lazyNode): lazyNode", "member" : "lbdd.Or.apply", "link" : "lbdd\/Or$.html#apply(b:lbdd.LBdd,l:lbdd.lazyNode):lbdd.lazyNode", "kind" : "def"}, {"label" : "apply", "tail" : "(l1: lazyNode, l2: lazyNode): lazyNode", "member" : "lbdd.Or.apply", "link" : "lbdd\/Or$.html#apply(l1:lbdd.lazyNode,l2:lbdd.lazyNode):lbdd.lazyNode", "kind" : "def"}, {"label" : "apply", "tail" : "(b1: LBdd, b2: LBdd): LBdd", "member" : "lbdd.Or.apply", "link" : "lbdd\/Or$.html#apply(b1:lbdd.LBdd,b2:lbdd.LBdd):lbdd.LBdd", "kind" : "def"}, {"label" : "orOp", "tail" : "(b1: LBddNode, b2: LBddNode): LBdd", "member" : "lbdd.Or.orOp", "link" : "lbdd\/Or$.html#orOp(b1:lbdd.LBddNode,b2:lbdd.LBddNode):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(b: LBdd): LBdd", "member" : "lbdd.Or.apply", "link" : "lbdd\/Or$.html#apply(b:lbdd.LBdd):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(): LBdd", "member" : "lbdd.Or.apply", "link" : "lbdd\/Or$.html#apply():lbdd.LBdd", "kind" : "def"}, {"label" : "commutative", "tail" : ": Boolean", "member" : "lbdd.Or.commutative", "link" : "lbdd\/Or$.html#commutative:Boolean", "kind" : "val"}, {"label" : "apply", "tail" : "(args: LBdd*): LBdd", "member" : "lbdd.BinaryOperations.apply", "link" : "lbdd\/Or$.html#apply(args:lbdd.LBdd*):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(args: List[LBdd]): LBdd", "member" : "lbdd.BinaryOperations.apply", "link" : "lbdd\/Or$.html#apply(args:List[lbdd.LBdd]):lbdd.LBdd", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lbdd\/Or$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lbdd\/Or$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lbdd\/Or$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lbdd\/Or$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lbdd\/Or$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lbdd\/Or$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lbdd\/Or$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/Or$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/Or$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/Or$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lbdd\/Or$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lbdd\/Or$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lbdd\/Or$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lbdd\/Or$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lbdd\/Or$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lbdd\/Or$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lbdd\/Or$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lbdd\/Or$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lbdd\/Or$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lbdd.Xnor", "shortDescription" : "", "object" : "lbdd\/Xnor$.html", "members_object" : [{"label" : "apply", "tail" : "(b1: LBdd, b2: LBdd): LBdd", "member" : "lbdd.Xnor.apply", "link" : "lbdd\/Xnor$.html#apply(b1:lbdd.LBdd,b2:lbdd.LBdd):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(b: LBdd): LBdd", "member" : "lbdd.Xnor.apply", "link" : "lbdd\/Xnor$.html#apply(b:lbdd.LBdd):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(): LBdd", "member" : "lbdd.Xnor.apply", "link" : "lbdd\/Xnor$.html#apply():lbdd.LBdd", "kind" : "def"}, {"label" : "commutative", "tail" : ": Boolean", "member" : "lbdd.Xnor.commutative", "link" : "lbdd\/Xnor$.html#commutative:Boolean", "kind" : "val"}, {"label" : "apply", "tail" : "(args: LBdd*): LBdd", "member" : "lbdd.BinaryOperations.apply", "link" : "lbdd\/Xnor$.html#apply(args:lbdd.LBdd*):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(args: List[LBdd]): LBdd", "member" : "lbdd.BinaryOperations.apply", "link" : "lbdd\/Xnor$.html#apply(args:List[lbdd.LBdd]):lbdd.LBdd", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lbdd\/Xnor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lbdd\/Xnor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lbdd\/Xnor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lbdd\/Xnor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lbdd\/Xnor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lbdd\/Xnor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lbdd\/Xnor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/Xnor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/Xnor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/Xnor$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lbdd\/Xnor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lbdd\/Xnor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lbdd\/Xnor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lbdd\/Xnor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lbdd\/Xnor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lbdd\/Xnor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lbdd\/Xnor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lbdd\/Xnor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lbdd\/Xnor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "lbdd.Xor", "shortDescription" : "", "object" : "lbdd\/Xor$.html", "members_object" : [{"label" : "apply", "tail" : "(b1: LBdd, b2: LBdd): LBdd", "member" : "lbdd.Xor.apply", "link" : "lbdd\/Xor$.html#apply(b1:lbdd.LBdd,b2:lbdd.LBdd):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(b: LBdd): LBdd", "member" : "lbdd.Xor.apply", "link" : "lbdd\/Xor$.html#apply(b:lbdd.LBdd):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(): LBdd", "member" : "lbdd.Xor.apply", "link" : "lbdd\/Xor$.html#apply():lbdd.LBdd", "kind" : "def"}, {"label" : "commutative", "tail" : ": Boolean", "member" : "lbdd.Xor.commutative", "link" : "lbdd\/Xor$.html#commutative:Boolean", "kind" : "val"}, {"label" : "apply", "tail" : "(args: LBdd*): LBdd", "member" : "lbdd.BinaryOperations.apply", "link" : "lbdd\/Xor$.html#apply(args:lbdd.LBdd*):lbdd.LBdd", "kind" : "def"}, {"label" : "apply", "tail" : "(args: List[LBdd]): LBdd", "member" : "lbdd.BinaryOperations.apply", "link" : "lbdd\/Xor$.html#apply(args:List[lbdd.LBdd]):lbdd.LBdd", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lbdd\/Xor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lbdd\/Xor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lbdd\/Xor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lbdd\/Xor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lbdd\/Xor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lbdd\/Xor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lbdd\/Xor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/Xor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/Xor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/Xor$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lbdd\/Xor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lbdd\/Xor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lbdd\/Xor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lbdd\/Xor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lbdd\/Xor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lbdd\/Xor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lbdd\/Xor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lbdd\/Xor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lbdd\/Xor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "bdd" : [{"name" : "bdd.And", "shortDescription" : "", "object" : "bdd\/And$.html", "members_object" : [{"label" : "apply", "tail" : "(b1: Bdd, b2: Bdd): Bdd", "member" : "bdd.And.apply", "link" : "bdd\/And$.html#apply(b1:bdd.Bdd,b2:bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(bdd: Bdd): Bdd", "member" : "bdd.And.apply", "link" : "bdd\/And$.html#apply(bdd:bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(): Bdd", "member" : "bdd.And.apply", "link" : "bdd\/And$.html#apply():bdd.Bdd", "kind" : "def"}, {"label" : "commutative", "tail" : ": Boolean", "member" : "bdd.And.commutative", "link" : "bdd\/And$.html#commutative:Boolean", "kind" : "val"}, {"label" : "bddOp", "tail" : "(b1: BddNode, b2: BddNode): Bdd", "member" : "bdd.BinaryOperation.bddOp", "link" : "bdd\/And$.html#bddOp(b1:bdd.BddNode,b2:bdd.BddNode):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(args: List[Bdd]): Bdd", "member" : "bdd.BinaryOperation.apply", "link" : "bdd\/And$.html#apply(args:List[bdd.Bdd]):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(args: Bdd*): Bdd", "member" : "bdd.BinaryOperation.apply", "link" : "bdd\/And$.html#apply(args:bdd.Bdd*):bdd.Bdd", "kind" : "def"}, {"label" : "memoize", "tail" : "(b1: Bdd, b2: Bdd, thunk: => Bdd): Bdd", "member" : "bdd.BinaryOperation.memoize", "link" : "bdd\/And$.html#memoize(b1:bdd.Bdd,b2:bdd.Bdd,thunk:=>bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "memoize", "tail" : "(thunk: => Bdd): Bdd", "member" : "bdd.BinaryOperation.memoize", "link" : "bdd\/And$.html#memoize(thunk:=>bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "maybeOpHash", "tail" : ": DynamicVariable[Option[OP_HASH]]", "member" : "bdd.BinaryOperation.maybeOpHash", "link" : "bdd\/And$.html#maybeOpHash:scala.util.DynamicVariable[Option[BinaryOperation.this.OP_HASH]]", "kind" : "val"}, {"label" : "newHashMap", "tail" : "(): OP_HASH", "member" : "bdd.BinaryOperation.newHashMap", "link" : "bdd\/And$.html#newHashMap():BinaryOperation.this.OP_HASH", "kind" : "def"}, {"label" : "OP_HASH", "tail" : "", "member" : "bdd.BinaryOperation.OP_HASH", "link" : "bdd\/And$.html#OP_HASH=scala.collection.mutable.Map[(bdd.Bdd,bdd.Bdd),bdd.Bdd]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/And$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/And$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/And$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/And$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/And$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/And$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/And$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/And$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/And$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/And$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/And$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/And$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/And$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/And$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/And$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/And$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/And$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/And$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/And$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bdd.AndNot", "shortDescription" : "", "object" : "bdd\/AndNot$.html", "members_object" : [{"label" : "apply", "tail" : "(b1: Bdd, b2: Bdd): Bdd", "member" : "bdd.AndNot.apply", "link" : "bdd\/AndNot$.html#apply(b1:bdd.Bdd,b2:bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(args: List[Bdd]): Bdd", "member" : "bdd.AndNot.apply", "link" : "bdd\/AndNot$.html#apply(args:List[bdd.Bdd]):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(bdd: Bdd): Bdd", "member" : "bdd.AndNot.apply", "link" : "bdd\/AndNot$.html#apply(bdd:bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(): Bdd", "member" : "bdd.AndNot.apply", "link" : "bdd\/AndNot$.html#apply():bdd.Bdd", "kind" : "def"}, {"label" : "commutative", "tail" : ": Boolean", "member" : "bdd.AndNot.commutative", "link" : "bdd\/AndNot$.html#commutative:Boolean", "kind" : "val"}, {"label" : "bddOp", "tail" : "(b1: BddNode, b2: BddNode): Bdd", "member" : "bdd.BinaryOperation.bddOp", "link" : "bdd\/AndNot$.html#bddOp(b1:bdd.BddNode,b2:bdd.BddNode):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(args: Bdd*): Bdd", "member" : "bdd.BinaryOperation.apply", "link" : "bdd\/AndNot$.html#apply(args:bdd.Bdd*):bdd.Bdd", "kind" : "def"}, {"label" : "memoize", "tail" : "(b1: Bdd, b2: Bdd, thunk: => Bdd): Bdd", "member" : "bdd.BinaryOperation.memoize", "link" : "bdd\/AndNot$.html#memoize(b1:bdd.Bdd,b2:bdd.Bdd,thunk:=>bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "memoize", "tail" : "(thunk: => Bdd): Bdd", "member" : "bdd.BinaryOperation.memoize", "link" : "bdd\/AndNot$.html#memoize(thunk:=>bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "maybeOpHash", "tail" : ": DynamicVariable[Option[OP_HASH]]", "member" : "bdd.BinaryOperation.maybeOpHash", "link" : "bdd\/AndNot$.html#maybeOpHash:scala.util.DynamicVariable[Option[BinaryOperation.this.OP_HASH]]", "kind" : "val"}, {"label" : "newHashMap", "tail" : "(): OP_HASH", "member" : "bdd.BinaryOperation.newHashMap", "link" : "bdd\/AndNot$.html#newHashMap():BinaryOperation.this.OP_HASH", "kind" : "def"}, {"label" : "OP_HASH", "tail" : "", "member" : "bdd.BinaryOperation.OP_HASH", "link" : "bdd\/AndNot$.html#OP_HASH=scala.collection.mutable.Map[(bdd.Bdd,bdd.Bdd),bdd.Bdd]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/AndNot$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/AndNot$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/AndNot$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/AndNot$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/AndNot$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/AndNot$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/AndNot$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/AndNot$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/AndNot$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/AndNot$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/AndNot$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/AndNot$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/AndNot$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/AndNot$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/AndNot$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/AndNot$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/AndNot$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/AndNot$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/AndNot$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bdd.Assignment", "shortDescription" : "", "object" : "bdd\/Assignment$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "bdd.Assignment.main", "link" : "bdd\/Assignment$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "toMinTerm", "tail" : "(v: String, assignTrue: Assignment, assignFalse: Assignment): String", "member" : "bdd.Assignment.toMinTerm", "link" : "bdd\/Assignment$.html#toMinTerm(v:String,assignTrue:bdd.Assignment,assignFalse:bdd.Assignment):String", "kind" : "def"}, {"label" : "toMinTerm", "tail" : "(assignTrue: Assignment, assignFalse: Assignment): String", "member" : "bdd.Assignment.toMinTerm", "link" : "bdd\/Assignment$.html#toMinTerm(assignTrue:bdd.Assignment,assignFalse:bdd.Assignment):String", "kind" : "def"}, {"label" : "apply", "tail" : "(bitMask: Long): Assignment", "member" : "bdd.Assignment.apply", "link" : "bdd\/Assignment$.html#apply(bitMask:Long):bdd.Assignment", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/Assignment$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/Assignment$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/Assignment$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/Assignment$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/Assignment$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/Assignment$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/Assignment$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Assignment$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Assignment$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Assignment$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/Assignment$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/Assignment$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/Assignment$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/Assignment$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/Assignment$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/Assignment$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/Assignment$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/Assignment$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/Assignment$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "value", "tail" : "(v: Int): Boolean", "member" : "bdd.Assignment.value", "link" : "bdd\/Assignment.html#value(v:Int):Boolean", "kind" : "def"}, {"member" : "bdd.Assignment#<init>", "error" : "unsupported entity"}, {"label" : "trueVariables", "tail" : ": Set[Int]", "member" : "bdd.Assignment.trueVariables", "link" : "bdd\/Assignment.html#trueVariables:Set[Int]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "bdd\/Assignment.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/Assignment.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/Assignment.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/Assignment.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/Assignment.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/Assignment.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/Assignment.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/Assignment.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Assignment.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Assignment.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Assignment.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/Assignment.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/Assignment.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/Assignment.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/Assignment.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/Assignment.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/Assignment.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bdd\/Assignment.html", "kind" : "case class"}, {"name" : "bdd.Bdd", "shortDescription" : "", "object" : "bdd\/Bdd$.html", "members_class" : [{"label" : "size", "tail" : "(): Int", "member" : "bdd.Bdd.size", "link" : "bdd\/Bdd.html#size():Int", "kind" : "def"}, {"label" : "fold", "tail" : "(z: R)(f: (R, Bdd) => R): R", "member" : "bdd.Bdd.fold", "link" : "bdd\/Bdd.html#fold[R](z:R)(f:(R,bdd.Bdd)=>R):R", "kind" : "def"}, {"label" : "toDnf", "tail" : "(x: String): String", "member" : "bdd.Bdd.toDnf", "link" : "bdd\/Bdd.html#toDnf(x:String):String", "kind" : "def"}, {"label" : "findSatisfyingAssignment", "tail" : "(determinist: Boolean): Option[(Assignment, Assignment)]", "member" : "bdd.Bdd.findSatisfyingAssignment", "link" : "bdd\/Bdd.html#findSatisfyingAssignment(determinist:Boolean):Option[(bdd.Assignment,bdd.Assignment)]", "kind" : "def"}, {"label" : "visitSatisfyingAssignments", "tail" : "(client: (Assignment, Assignment) => Unit): Unit", "member" : "bdd.Bdd.visitSatisfyingAssignments", "link" : "bdd\/Bdd.html#visitSatisfyingAssignments(client:(bdd.Assignment,bdd.Assignment)=>Unit):Unit", "kind" : "def"}, {"label" : "equivalentBySubset", "tail" : "(that: Bdd): Boolean", "member" : "bdd.Bdd.equivalentBySubset", "link" : "bdd\/Bdd.html#equivalentBySubset(that:bdd.Bdd):Boolean", "kind" : "def"}, {"label" : "supersetp", "tail" : "(that: Bdd): Boolean", "member" : "bdd.Bdd.supersetp", "link" : "bdd\/Bdd.html#supersetp(that:bdd.Bdd):Boolean", "kind" : "def"}, {"label" : "subsetp", "tail" : "(that: Bdd): Boolean", "member" : "bdd.Bdd.subsetp", "link" : "bdd\/Bdd.html#subsetp(that:bdd.Bdd):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/Bdd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/Bdd.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/Bdd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/Bdd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/Bdd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/Bdd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/Bdd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Bdd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Bdd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Bdd.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/Bdd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/Bdd.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/Bdd.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/Bdd.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/Bdd.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/Bdd.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/Bdd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/Bdd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/Bdd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(assignments: Assignment): Boolean", "member" : "bdd.Bdd.apply", "link" : "bdd\/Bdd.html#apply(assignments:bdd.Assignment):Boolean", "kind" : "abstract def"}, {"label" : "directedWalk", "tail" : "(client: (Bdd) => Boolean): Boolean", "member" : "bdd.Bdd.directedWalk", "link" : "bdd\/Bdd.html#directedWalk(client:bdd.Bdd=>Boolean):Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "apply", "tail" : "(label: Short, positive: Bdd, negative: Bdd): Bdd", "member" : "bdd.Bdd.apply", "link" : "bdd\/Bdd$.html#apply(label:Short,positive:bdd.Bdd,negative:bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "getBddSizeCount", "tail" : "(): (Long, Long)", "member" : "bdd.Bdd.getBddSizeCount", "link" : "bdd\/Bdd$.html#getBddSizeCount:(Long,Long)", "kind" : "def"}, {"label" : "newCache", "tail" : "(): Cache", "member" : "bdd.Bdd.newCache", "link" : "bdd\/Bdd$.html#newCache():bdd.Cache", "kind" : "def"}, {"label" : "withNewBddHash", "tail" : "(code: => A): A", "member" : "bdd.Bdd.withNewBddHash", "link" : "bdd\/Bdd$.html#withNewBddHash[A](code:=>A):A", "kind" : "def"}, {"label" : "maybeNodeHash", "tail" : ": DynamicVariable[Option[Cache]]", "member" : "bdd.Bdd.maybeNodeHash", "link" : "bdd\/Bdd$.html#maybeNodeHash:scala.util.DynamicVariable[Option[bdd.Cache]]", "kind" : "val"}, {"label" : "apply", "tail" : "(label: Short): Bdd", "member" : "bdd.Bdd.apply", "link" : "bdd\/Bdd$.html#apply(label:Short):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(label: Int): Bdd", "member" : "bdd.Bdd.apply", "link" : "bdd\/Bdd$.html#apply(label:Int):bdd.Bdd", "kind" : "def"}, {"label" : "short2bdd", "tail" : "(raw: Short): Bdd", "member" : "bdd.Bdd.short2bdd", "link" : "bdd\/Bdd$.html#short2bdd(raw:Short):bdd.Bdd", "kind" : "implicit def"}, {"label" : "int2bdd", "tail" : "(raw: Int): Bdd", "member" : "bdd.Bdd.int2bdd", "link" : "bdd\/Bdd$.html#int2bdd(raw:Int):bdd.Bdd", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/Bdd$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/Bdd$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/Bdd$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/Bdd$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/Bdd$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/Bdd$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/Bdd$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Bdd$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Bdd$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Bdd$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/Bdd$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/Bdd$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/Bdd$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/Bdd$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/Bdd$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/Bdd$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/Bdd$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/Bdd$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/Bdd$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bdd\/Bdd.html", "kind" : "class"}, {"name" : "bdd.BddFalse", "shortDescription" : "", "object" : "bdd\/BddFalse$.html", "members_object" : [{"label" : "directedWalk", "tail" : "(client: (Bdd) => Boolean): Boolean", "member" : "bdd.BddFalse.directedWalk", "link" : "bdd\/BddFalse$.html#directedWalk(client:bdd.Bdd=>Boolean):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(assignments: Assignment): Boolean", "member" : "bdd.BddFalse.apply", "link" : "bdd\/BddFalse$.html#apply(assignments:bdd.Assignment):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "bdd.BddFalse.toString", "link" : "bdd\/BddFalse$.html#toString():String", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bdd.Bdd.size", "link" : "bdd\/BddFalse$.html#size():Int", "kind" : "def"}, {"label" : "fold", "tail" : "(z: R)(f: (R, Bdd) => R): R", "member" : "bdd.Bdd.fold", "link" : "bdd\/BddFalse$.html#fold[R](z:R)(f:(R,bdd.Bdd)=>R):R", "kind" : "def"}, {"label" : "toDnf", "tail" : "(x: String): String", "member" : "bdd.Bdd.toDnf", "link" : "bdd\/BddFalse$.html#toDnf(x:String):String", "kind" : "def"}, {"label" : "findSatisfyingAssignment", "tail" : "(determinist: Boolean): Option[(Assignment, Assignment)]", "member" : "bdd.Bdd.findSatisfyingAssignment", "link" : "bdd\/BddFalse$.html#findSatisfyingAssignment(determinist:Boolean):Option[(bdd.Assignment,bdd.Assignment)]", "kind" : "def"}, {"label" : "visitSatisfyingAssignments", "tail" : "(client: (Assignment, Assignment) => Unit): Unit", "member" : "bdd.Bdd.visitSatisfyingAssignments", "link" : "bdd\/BddFalse$.html#visitSatisfyingAssignments(client:(bdd.Assignment,bdd.Assignment)=>Unit):Unit", "kind" : "def"}, {"label" : "equivalentBySubset", "tail" : "(that: Bdd): Boolean", "member" : "bdd.Bdd.equivalentBySubset", "link" : "bdd\/BddFalse$.html#equivalentBySubset(that:bdd.Bdd):Boolean", "kind" : "def"}, {"label" : "supersetp", "tail" : "(that: Bdd): Boolean", "member" : "bdd.Bdd.supersetp", "link" : "bdd\/BddFalse$.html#supersetp(that:bdd.Bdd):Boolean", "kind" : "def"}, {"label" : "subsetp", "tail" : "(that: Bdd): Boolean", "member" : "bdd.Bdd.subsetp", "link" : "bdd\/BddFalse$.html#subsetp(that:bdd.Bdd):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/BddFalse$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/BddFalse$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/BddFalse$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/BddFalse$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/BddFalse$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/BddFalse$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/BddFalse$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BddFalse$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BddFalse$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BddFalse$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/BddFalse$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/BddFalse$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/BddFalse$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/BddFalse$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/BddFalse$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/BddFalse$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/BddFalse$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/BddFalse$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bdd.BddNode", "shortDescription" : "", "members_case class" : [{"label" : "directedWalk", "tail" : "(client: (Bdd) => Boolean): Boolean", "member" : "bdd.BddNode.directedWalk", "link" : "bdd\/BddNode.html#directedWalk(client:bdd.Bdd=>Boolean):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(assignment: Assignment): Boolean", "member" : "bdd.BddNode.apply", "link" : "bdd\/BddNode.html#apply(assignment:bdd.Assignment):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "bdd.BddNode.toString", "link" : "bdd\/BddNode.html#toString():String", "kind" : "def"}, {"label" : "validateChild", "tail" : "(child: Bdd): Unit", "member" : "bdd.BddNode.validateChild", "link" : "bdd\/BddNode.html#validateChild(child:bdd.Bdd):Unit", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "bdd.BddNode.hashCode", "link" : "bdd\/BddNode.html#hashCode():Int", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "bdd.BddNode.equals", "link" : "bdd\/BddNode.html#equals(that:Any):Boolean", "kind" : "def"}, {"member" : "bdd.BddNode#<init>", "error" : "unsupported entity"}, {"label" : "negative", "tail" : ": Bdd", "member" : "bdd.BddNode.negative", "link" : "bdd\/BddNode.html#negative:bdd.Bdd", "kind" : "val"}, {"label" : "positive", "tail" : ": Bdd", "member" : "bdd.BddNode.positive", "link" : "bdd\/BddNode.html#positive:bdd.Bdd", "kind" : "val"}, {"label" : "label", "tail" : ": Short", "member" : "bdd.BddNode.label", "link" : "bdd\/BddNode.html#label:Short", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "bdd\/BddNode.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bdd.Bdd.size", "link" : "bdd\/BddNode.html#size():Int", "kind" : "def"}, {"label" : "fold", "tail" : "(z: R)(f: (R, Bdd) => R): R", "member" : "bdd.Bdd.fold", "link" : "bdd\/BddNode.html#fold[R](z:R)(f:(R,bdd.Bdd)=>R):R", "kind" : "def"}, {"label" : "toDnf", "tail" : "(x: String): String", "member" : "bdd.Bdd.toDnf", "link" : "bdd\/BddNode.html#toDnf(x:String):String", "kind" : "def"}, {"label" : "findSatisfyingAssignment", "tail" : "(determinist: Boolean): Option[(Assignment, Assignment)]", "member" : "bdd.Bdd.findSatisfyingAssignment", "link" : "bdd\/BddNode.html#findSatisfyingAssignment(determinist:Boolean):Option[(bdd.Assignment,bdd.Assignment)]", "kind" : "def"}, {"label" : "visitSatisfyingAssignments", "tail" : "(client: (Assignment, Assignment) => Unit): Unit", "member" : "bdd.Bdd.visitSatisfyingAssignments", "link" : "bdd\/BddNode.html#visitSatisfyingAssignments(client:(bdd.Assignment,bdd.Assignment)=>Unit):Unit", "kind" : "def"}, {"label" : "equivalentBySubset", "tail" : "(that: Bdd): Boolean", "member" : "bdd.Bdd.equivalentBySubset", "link" : "bdd\/BddNode.html#equivalentBySubset(that:bdd.Bdd):Boolean", "kind" : "def"}, {"label" : "supersetp", "tail" : "(that: Bdd): Boolean", "member" : "bdd.Bdd.supersetp", "link" : "bdd\/BddNode.html#supersetp(that:bdd.Bdd):Boolean", "kind" : "def"}, {"label" : "subsetp", "tail" : "(that: Bdd): Boolean", "member" : "bdd.Bdd.subsetp", "link" : "bdd\/BddNode.html#subsetp(that:bdd.Bdd):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/BddNode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/BddNode.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/BddNode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/BddNode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/BddNode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/BddNode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/BddNode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BddNode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BddNode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BddNode.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/BddNode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/BddNode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/BddNode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/BddNode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/BddNode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/BddNode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bdd\/BddNode.html", "kind" : "case class"}, {"name" : "bdd.BddTerm", "shortDescription" : "", "members_class" : [{"label" : "size", "tail" : "(): Int", "member" : "bdd.Bdd.size", "link" : "bdd\/BddTerm.html#size():Int", "kind" : "def"}, {"label" : "fold", "tail" : "(z: R)(f: (R, Bdd) => R): R", "member" : "bdd.Bdd.fold", "link" : "bdd\/BddTerm.html#fold[R](z:R)(f:(R,bdd.Bdd)=>R):R", "kind" : "def"}, {"label" : "toDnf", "tail" : "(x: String): String", "member" : "bdd.Bdd.toDnf", "link" : "bdd\/BddTerm.html#toDnf(x:String):String", "kind" : "def"}, {"label" : "findSatisfyingAssignment", "tail" : "(determinist: Boolean): Option[(Assignment, Assignment)]", "member" : "bdd.Bdd.findSatisfyingAssignment", "link" : "bdd\/BddTerm.html#findSatisfyingAssignment(determinist:Boolean):Option[(bdd.Assignment,bdd.Assignment)]", "kind" : "def"}, {"label" : "visitSatisfyingAssignments", "tail" : "(client: (Assignment, Assignment) => Unit): Unit", "member" : "bdd.Bdd.visitSatisfyingAssignments", "link" : "bdd\/BddTerm.html#visitSatisfyingAssignments(client:(bdd.Assignment,bdd.Assignment)=>Unit):Unit", "kind" : "def"}, {"label" : "equivalentBySubset", "tail" : "(that: Bdd): Boolean", "member" : "bdd.Bdd.equivalentBySubset", "link" : "bdd\/BddTerm.html#equivalentBySubset(that:bdd.Bdd):Boolean", "kind" : "def"}, {"label" : "supersetp", "tail" : "(that: Bdd): Boolean", "member" : "bdd.Bdd.supersetp", "link" : "bdd\/BddTerm.html#supersetp(that:bdd.Bdd):Boolean", "kind" : "def"}, {"label" : "subsetp", "tail" : "(that: Bdd): Boolean", "member" : "bdd.Bdd.subsetp", "link" : "bdd\/BddTerm.html#subsetp(that:bdd.Bdd):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/BddTerm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/BddTerm.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/BddTerm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/BddTerm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/BddTerm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/BddTerm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/BddTerm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BddTerm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BddTerm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BddTerm.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/BddTerm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/BddTerm.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/BddTerm.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/BddTerm.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/BddTerm.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/BddTerm.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/BddTerm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/BddTerm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/BddTerm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(assignments: Assignment): Boolean", "member" : "bdd.Bdd.apply", "link" : "bdd\/BddTerm.html#apply(assignments:bdd.Assignment):Boolean", "kind" : "abstract def"}, {"label" : "directedWalk", "tail" : "(client: (Bdd) => Boolean): Boolean", "member" : "bdd.Bdd.directedWalk", "link" : "bdd\/BddTerm.html#directedWalk(client:bdd.Bdd=>Boolean):Boolean", "kind" : "abstract def"}], "class" : "bdd\/BddTerm.html", "kind" : "class"}, {"name" : "bdd.BddTest", "shortDescription" : "", "object" : "bdd\/BddTest$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "bdd.BddTest.main", "link" : "bdd\/BddTest$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/BddTest$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/BddTest$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/BddTest$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/BddTest$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/BddTest$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/BddTest$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/BddTest$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BddTest$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BddTest$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BddTest$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/BddTest$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/BddTest$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/BddTest$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/BddTest$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/BddTest$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/BddTest$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/BddTest$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/BddTest$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/BddTest$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bdd.BddTrue", "shortDescription" : "", "object" : "bdd\/BddTrue$.html", "members_object" : [{"label" : "directedWalk", "tail" : "(client: (Bdd) => Boolean): Boolean", "member" : "bdd.BddTrue.directedWalk", "link" : "bdd\/BddTrue$.html#directedWalk(client:bdd.Bdd=>Boolean):Boolean", "kind" : "def"}, {"label" : "apply", "tail" : "(assignments: Assignment): Boolean", "member" : "bdd.BddTrue.apply", "link" : "bdd\/BddTrue$.html#apply(assignments:bdd.Assignment):Boolean", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "bdd.BddTrue.toString", "link" : "bdd\/BddTrue$.html#toString():String", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "bdd.Bdd.size", "link" : "bdd\/BddTrue$.html#size():Int", "kind" : "def"}, {"label" : "fold", "tail" : "(z: R)(f: (R, Bdd) => R): R", "member" : "bdd.Bdd.fold", "link" : "bdd\/BddTrue$.html#fold[R](z:R)(f:(R,bdd.Bdd)=>R):R", "kind" : "def"}, {"label" : "toDnf", "tail" : "(x: String): String", "member" : "bdd.Bdd.toDnf", "link" : "bdd\/BddTrue$.html#toDnf(x:String):String", "kind" : "def"}, {"label" : "findSatisfyingAssignment", "tail" : "(determinist: Boolean): Option[(Assignment, Assignment)]", "member" : "bdd.Bdd.findSatisfyingAssignment", "link" : "bdd\/BddTrue$.html#findSatisfyingAssignment(determinist:Boolean):Option[(bdd.Assignment,bdd.Assignment)]", "kind" : "def"}, {"label" : "visitSatisfyingAssignments", "tail" : "(client: (Assignment, Assignment) => Unit): Unit", "member" : "bdd.Bdd.visitSatisfyingAssignments", "link" : "bdd\/BddTrue$.html#visitSatisfyingAssignments(client:(bdd.Assignment,bdd.Assignment)=>Unit):Unit", "kind" : "def"}, {"label" : "equivalentBySubset", "tail" : "(that: Bdd): Boolean", "member" : "bdd.Bdd.equivalentBySubset", "link" : "bdd\/BddTrue$.html#equivalentBySubset(that:bdd.Bdd):Boolean", "kind" : "def"}, {"label" : "supersetp", "tail" : "(that: Bdd): Boolean", "member" : "bdd.Bdd.supersetp", "link" : "bdd\/BddTrue$.html#supersetp(that:bdd.Bdd):Boolean", "kind" : "def"}, {"label" : "subsetp", "tail" : "(that: Bdd): Boolean", "member" : "bdd.Bdd.subsetp", "link" : "bdd\/BddTrue$.html#subsetp(that:bdd.Bdd):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/BddTrue$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/BddTrue$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/BddTrue$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/BddTrue$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/BddTrue$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/BddTrue$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/BddTrue$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BddTrue$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BddTrue$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BddTrue$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/BddTrue$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/BddTrue$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/BddTrue$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/BddTrue$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/BddTrue$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/BddTrue$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/BddTrue$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/BddTrue$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bdd.BinaryOperation", "shortDescription" : "", "object" : "bdd\/BinaryOperation$.html", "members_class" : [{"label" : "bddOp", "tail" : "(b1: BddNode, b2: BddNode): Bdd", "member" : "bdd.BinaryOperation.bddOp", "link" : "bdd\/BinaryOperation.html#bddOp(b1:bdd.BddNode,b2:bdd.BddNode):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(args: List[Bdd]): Bdd", "member" : "bdd.BinaryOperation.apply", "link" : "bdd\/BinaryOperation.html#apply(args:List[bdd.Bdd]):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(args: Bdd*): Bdd", "member" : "bdd.BinaryOperation.apply", "link" : "bdd\/BinaryOperation.html#apply(args:bdd.Bdd*):bdd.Bdd", "kind" : "def"}, {"label" : "memoize", "tail" : "(b1: Bdd, b2: Bdd, thunk: => Bdd): Bdd", "member" : "bdd.BinaryOperation.memoize", "link" : "bdd\/BinaryOperation.html#memoize(b1:bdd.Bdd,b2:bdd.Bdd,thunk:=>bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "memoize", "tail" : "(thunk: => Bdd): Bdd", "member" : "bdd.BinaryOperation.memoize", "link" : "bdd\/BinaryOperation.html#memoize(thunk:=>bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "maybeOpHash", "tail" : ": DynamicVariable[Option[OP_HASH]]", "member" : "bdd.BinaryOperation.maybeOpHash", "link" : "bdd\/BinaryOperation.html#maybeOpHash:scala.util.DynamicVariable[Option[BinaryOperation.this.OP_HASH]]", "kind" : "val"}, {"label" : "newHashMap", "tail" : "(): OP_HASH", "member" : "bdd.BinaryOperation.newHashMap", "link" : "bdd\/BinaryOperation.html#newHashMap():BinaryOperation.this.OP_HASH", "kind" : "def"}, {"label" : "OP_HASH", "tail" : "", "member" : "bdd.BinaryOperation.OP_HASH", "link" : "bdd\/BinaryOperation.html#OP_HASH=scala.collection.mutable.Map[(bdd.Bdd,bdd.Bdd),bdd.Bdd]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/BinaryOperation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/BinaryOperation.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/BinaryOperation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/BinaryOperation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/BinaryOperation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/BinaryOperation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/BinaryOperation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BinaryOperation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BinaryOperation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BinaryOperation.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/BinaryOperation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/BinaryOperation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/BinaryOperation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/BinaryOperation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/BinaryOperation.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/BinaryOperation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/BinaryOperation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/BinaryOperation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/BinaryOperation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "commutative", "tail" : ": Boolean", "member" : "bdd.BinaryOperation.commutative", "link" : "bdd\/BinaryOperation.html#commutative:Boolean", "kind" : "abstract val"}, {"label" : "apply", "tail" : "(b1: Bdd, b2: Bdd): Bdd", "member" : "bdd.BinaryOperation.apply", "link" : "bdd\/BinaryOperation.html#apply(b1:bdd.Bdd,b2:bdd.Bdd):bdd.Bdd", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(bdd: Bdd): Bdd", "member" : "bdd.BinaryOperation.apply", "link" : "bdd\/BinaryOperation.html#apply(bdd:bdd.Bdd):bdd.Bdd", "kind" : "abstract def"}, {"label" : "apply", "tail" : "(): Bdd", "member" : "bdd.BinaryOperation.apply", "link" : "bdd\/BinaryOperation.html#apply():bdd.Bdd", "kind" : "abstract def"}], "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "bdd.BinaryOperation.main", "link" : "bdd\/BinaryOperation$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/BinaryOperation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/BinaryOperation$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/BinaryOperation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/BinaryOperation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/BinaryOperation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/BinaryOperation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/BinaryOperation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BinaryOperation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BinaryOperation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BinaryOperation$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/BinaryOperation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/BinaryOperation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/BinaryOperation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/BinaryOperation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/BinaryOperation$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/BinaryOperation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/BinaryOperation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/BinaryOperation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/BinaryOperation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "bdd\/BinaryOperation.html", "kind" : "class"}, {"name" : "bdd.BitFiddle", "shortDescription" : "", "object" : "bdd\/BitFiddle$.html", "members_object" : [{"label" : "genKthBdd", "tail" : "(numVars: Int, truthTable: Long): Bdd", "member" : "bdd.BitFiddle.genKthBdd", "link" : "bdd\/BitFiddle$.html#genKthBdd(numVars:Int,truthTable:Long):bdd.Bdd", "kind" : "def"}, {"label" : "isRowSet", "tail" : "(truthTable: Long, truthTableRow: Int): Boolean", "member" : "bdd.BitFiddle.isRowSet", "link" : "bdd\/BitFiddle$.html#isRowSet(truthTable:Long,truthTableRow:Int):Boolean", "kind" : "def"}, {"label" : "genRandomBdd", "tail" : "(n: Int, maxNumBits: Int, odds: Double): Bdd", "member" : "bdd.BitFiddle.genRandomBdd", "link" : "bdd\/BitFiddle$.html#genRandomBdd(n:Int,maxNumBits:Int,odds:Double):bdd.Bdd", "kind" : "def"}, {"label" : "genRandomBdd", "tail" : "(n: Int): Bdd", "member" : "bdd.BitFiddle.genRandomBdd", "link" : "bdd\/BitFiddle$.html#genRandomBdd(n:Int):bdd.Bdd", "kind" : "def"}, {"label" : "genBddFromBitMask", "tail" : "(n: Int, maxNumBits: Int, maxNumTerms: Int, f: (Int) => Boolean): Bdd", "member" : "bdd.BitFiddle.genBddFromBitMask", "link" : "bdd\/BitFiddle$.html#genBddFromBitMask(n:Int,maxNumBits:Int,maxNumTerms:Int,f:Int=>Boolean):bdd.Bdd", "kind" : "def"}, {"label" : "genRandomDnf", "tail" : "(n: Int, maxNumBits: Int, maxNumTerms: Int, odds: Double): IterableOnce[List[Int]]", "member" : "bdd.BitFiddle.genRandomDnf", "link" : "bdd\/BitFiddle$.html#genRandomDnf(n:Int,maxNumBits:Int,maxNumTerms:Int,odds:Double):IterableOnce[List[Int]]", "kind" : "def"}, {"label" : "genRandomDnf", "tail" : "(n: Int): IterableOnce[List[Int]]", "member" : "bdd.BitFiddle.genRandomDnf", "link" : "bdd\/BitFiddle$.html#genRandomDnf(n:Int):IterableOnce[List[Int]]", "kind" : "def"}, {"label" : "genDnfFromBitMask", "tail" : "(n: Int, maxNumBits: Int, maxNumTerms: Int, f: (Int) => Boolean): IterableOnce[List[Int]]", "member" : "bdd.BitFiddle.genDnfFromBitMask", "link" : "bdd\/BitFiddle$.html#genDnfFromBitMask(n:Int,maxNumBits:Int,maxNumTerms:Int,f:Int=>Boolean):IterableOnce[List[Int]]", "kind" : "def"}, {"label" : "genSample", "tail" : "(n: Int, m: Int): Set[Int]", "member" : "bdd.BitFiddle.genSample", "link" : "bdd\/BitFiddle$.html#genSample(n:Int,m:Int):Set[Int]", "kind" : "def"}, {"label" : "minTerm", "tail" : "(n: Int, i: Long): List[Int]", "member" : "bdd.BitFiddle.minTerm", "link" : "bdd\/BitFiddle$.html#minTerm(n:Int,i:Long):List[Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/BitFiddle$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/BitFiddle$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/BitFiddle$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/BitFiddle$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/BitFiddle$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/BitFiddle$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/BitFiddle$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BitFiddle$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BitFiddle$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/BitFiddle$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/BitFiddle$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/BitFiddle$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/BitFiddle$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/BitFiddle$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/BitFiddle$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/BitFiddle$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/BitFiddle$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/BitFiddle$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/BitFiddle$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bdd.Cache", "shortDescription" : "", "members_class" : [{"label" : "numAllocations", "tail" : ": Long", "member" : "bdd.Cache.numAllocations", "link" : "bdd\/Cache.html#numAllocations:Long", "kind" : "var"}, {"member" : "bdd.Cache#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/Cache.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/Cache.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/Cache.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/Cache.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/Cache.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/Cache.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/Cache.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Cache.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Cache.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Cache.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/Cache.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/Cache.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/Cache.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/Cache.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/Cache.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/Cache.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/Cache.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/Cache.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/Cache.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getBddSizeCount", "tail" : "(): (Long, Long)", "member" : "bdd.Cache.getBddSizeCount", "link" : "bdd\/Cache.html#getBddSizeCount:(Long,Long)", "kind" : "abstract def"}, {"label" : "getOrCreate", "tail" : "(label: Short, positive: Bdd, negative: Bdd): BddNode", "member" : "bdd.Cache.getOrCreate", "link" : "bdd\/Cache.html#getOrCreate(label:Short,positive:bdd.Bdd,negative:bdd.Bdd):bdd.BddNode", "kind" : "abstract def"}], "class" : "bdd\/Cache.html", "kind" : "class"}, {"name" : "bdd.CacheByJboss", "shortDescription" : "", "members_case class" : [{"label" : "getOrCreate", "tail" : "(label: Short, positive: Bdd, negative: Bdd): BddNode", "member" : "bdd.CacheByJboss.getOrCreate", "link" : "bdd\/CacheByJboss.html#getOrCreate(label:Short,positive:bdd.Bdd,negative:bdd.Bdd):bdd.BddNode", "kind" : "def"}, {"label" : "getBddSizeCount", "tail" : "(): (Long, Long)", "member" : "bdd.CacheByJboss.getBddSizeCount", "link" : "bdd\/CacheByJboss.html#getBddSizeCount:(Long,Long)", "kind" : "def"}, {"label" : "hash", "tail" : ": Map[(Int, Bdd, Bdd), BddNode]", "member" : "bdd.CacheByJboss.hash", "link" : "bdd\/CacheByJboss.html#hash:scala.collection.mutable.Map[(Int,bdd.Bdd,bdd.Bdd),bdd.BddNode]", "kind" : "val"}, {"label" : "BDD_HASH", "tail" : "", "member" : "bdd.CacheByJboss.BDD_HASH", "link" : "bdd\/CacheByJboss.html#BDD_HASH=scala.collection.mutable.Map[(Int,bdd.Bdd,bdd.Bdd),bdd.BddNode]", "kind" : "type"}, {"member" : "bdd.CacheByJboss#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "bdd\/CacheByJboss.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "numAllocations", "tail" : ": Long", "member" : "bdd.Cache.numAllocations", "link" : "bdd\/CacheByJboss.html#numAllocations:Long", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/CacheByJboss.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/CacheByJboss.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/CacheByJboss.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/CacheByJboss.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/CacheByJboss.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/CacheByJboss.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/CacheByJboss.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/CacheByJboss.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/CacheByJboss.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/CacheByJboss.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/CacheByJboss.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/CacheByJboss.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/CacheByJboss.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/CacheByJboss.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/CacheByJboss.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/CacheByJboss.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bdd\/CacheByJboss.html", "kind" : "case class"}, {"name" : "bdd.CacheByWeakRef", "shortDescription" : "", "members_case class" : [{"label" : "getOrCreate", "tail" : "(label: Short, positive: Bdd, negative: Bdd): BddNode", "member" : "bdd.CacheByWeakRef.getOrCreate", "link" : "bdd\/CacheByWeakRef.html#getOrCreate(label:Short,positive:bdd.Bdd,negative:bdd.Bdd):bdd.BddNode", "kind" : "def"}, {"label" : "getBddSizeCount", "tail" : "(): (Long, Long)", "member" : "bdd.CacheByWeakRef.getBddSizeCount", "link" : "bdd\/CacheByWeakRef.html#getBddSizeCount:(Long,Long)", "kind" : "def"}, {"label" : "nodesIndex", "tail" : ": WeakHashMap[BddNode, WeakReference[BddNode]]", "member" : "bdd.CacheByWeakRef.nodesIndex", "link" : "bdd\/CacheByWeakRef.html#nodesIndex:scala.collection.mutable.WeakHashMap[bdd.BddNode,scala.ref.WeakReference[bdd.BddNode]]", "kind" : "val"}, {"member" : "bdd.CacheByWeakRef#<init>", "error" : "unsupported entity"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "bdd\/CacheByWeakRef.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "numAllocations", "tail" : ": Long", "member" : "bdd.Cache.numAllocations", "link" : "bdd\/CacheByWeakRef.html#numAllocations:Long", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/CacheByWeakRef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/CacheByWeakRef.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/CacheByWeakRef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/CacheByWeakRef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/CacheByWeakRef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/CacheByWeakRef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/CacheByWeakRef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/CacheByWeakRef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/CacheByWeakRef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/CacheByWeakRef.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/CacheByWeakRef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/CacheByWeakRef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/CacheByWeakRef.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/CacheByWeakRef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/CacheByWeakRef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/CacheByWeakRef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "bdd\/CacheByWeakRef.html", "kind" : "case class"}, {"name" : "bdd.DimacsBdd", "shortDescription" : "", "object" : "bdd\/DimacsBdd$.html", "members_object" : [{"label" : "dnfToBdd2", "tail" : "(dnf: IterableOnce[ClauseAsList], thunk: () => Unit): Bdd", "member" : "bdd.DimacsBdd.dnfToBdd2", "link" : "bdd\/DimacsBdd$.html#dnfToBdd2(dnf:IterableOnce[dimacs.QmVec.ClauseAsList],thunk:()=>Unit):bdd.Bdd", "kind" : "def"}, {"label" : "dnfToBdd", "tail" : "(dnf: IterableOnce[ClauseAsList]): Bdd", "member" : "bdd.DimacsBdd.dnfToBdd", "link" : "bdd\/DimacsBdd$.html#dnfToBdd(dnf:IterableOnce[dimacs.QmVec.ClauseAsList]):bdd.Bdd", "kind" : "def"}, {"label" : "cnfToBdd", "tail" : "(cnf: IterableOnce[ClauseAsList]): Bdd", "member" : "bdd.DimacsBdd.cnfToBdd", "link" : "bdd\/DimacsBdd$.html#cnfToBdd(cnf:IterableOnce[dimacs.QmVec.ClauseAsList]):bdd.Bdd", "kind" : "def"}, {"label" : "dnfClauseToBdd", "tail" : "(dnfClause: ClauseAsList): Bdd", "member" : "bdd.DimacsBdd.dnfClauseToBdd", "link" : "bdd\/DimacsBdd$.html#dnfClauseToBdd(dnfClause:dimacs.QmVec.ClauseAsList):bdd.Bdd", "kind" : "def"}, {"label" : "cnfClauseToBdd", "tail" : "(cnfClause: ClauseAsList): Bdd", "member" : "bdd.DimacsBdd.cnfClauseToBdd", "link" : "bdd\/DimacsBdd$.html#cnfClauseToBdd(cnfClause:dimacs.QmVec.ClauseAsList):bdd.Bdd", "kind" : "def"}, {"label" : "clauseToBdd", "tail" : "(clause: ClauseAsList, ident: BddTerm, op: BinaryOperation): Bdd", "member" : "bdd.DimacsBdd.clauseToBdd", "link" : "bdd\/DimacsBdd$.html#clauseToBdd(clause:dimacs.QmVec.ClauseAsList,ident:bdd.BddTerm,op:bdd.BinaryOperation):bdd.Bdd", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/DimacsBdd$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/DimacsBdd$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/DimacsBdd$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/DimacsBdd$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/DimacsBdd$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/DimacsBdd$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/DimacsBdd$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/DimacsBdd$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/DimacsBdd$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/DimacsBdd$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/DimacsBdd$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/DimacsBdd$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/DimacsBdd$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/DimacsBdd$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/DimacsBdd$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/DimacsBdd$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/DimacsBdd$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/DimacsBdd$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/DimacsBdd$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bdd.DimacsFold", "shortDescription" : "", "object" : "bdd\/DimacsFold$.html", "members_object" : [{"label" : "dnfToBdd2", "tail" : "(dnf: IterableOnce[ClauseAsList], thunk: () => Unit): Bdd", "member" : "bdd.DimacsFold.dnfToBdd2", "link" : "bdd\/DimacsFold$.html#dnfToBdd2(dnf:IterableOnce[dimacs.QmVec.ClauseAsList],thunk:()=>Unit):bdd.Bdd", "kind" : "def"}, {"label" : "dnfToBdd", "tail" : "(dnf: IterableOnce[ClauseAsList]): Bdd", "member" : "bdd.DimacsFold.dnfToBdd", "link" : "bdd\/DimacsFold$.html#dnfToBdd(dnf:IterableOnce[dimacs.QmVec.ClauseAsList]):bdd.Bdd", "kind" : "def"}, {"label" : "dnfClauseToBdd", "tail" : "(dnfClause: ClauseAsList): Bdd", "member" : "bdd.DimacsFold.dnfClauseToBdd", "link" : "bdd\/DimacsFold$.html#dnfClauseToBdd(dnfClause:dimacs.QmVec.ClauseAsList):bdd.Bdd", "kind" : "def"}, {"label" : "clauseToBdd", "tail" : "(clause: ClauseAsList, ident: BddTerm, op: BinaryOperation): Bdd", "member" : "bdd.DimacsFold.clauseToBdd", "link" : "bdd\/DimacsFold$.html#clauseToBdd(clause:dimacs.QmVec.ClauseAsList,ident:bdd.BddTerm,op:bdd.BinaryOperation):bdd.Bdd", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/DimacsFold$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/DimacsFold$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/DimacsFold$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/DimacsFold$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/DimacsFold$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/DimacsFold$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/DimacsFold$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/DimacsFold$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/DimacsFold$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/DimacsFold$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/DimacsFold$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/DimacsFold$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/DimacsFold$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/DimacsFold$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/DimacsFold$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/DimacsFold$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/DimacsFold$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/DimacsFold$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/DimacsFold$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bdd.DimacsMixedReduce", "shortDescription" : "", "object" : "bdd\/DimacsMixedReduce$.html", "members_object" : [{"label" : "dnfToBdd", "tail" : "(dnf: IterableOnce[ClauseAsList]): Bdd", "member" : "bdd.DimacsMixedReduce.dnfToBdd", "link" : "bdd\/DimacsMixedReduce$.html#dnfToBdd(dnf:IterableOnce[dimacs.QmVec.ClauseAsList]):bdd.Bdd", "kind" : "def"}, {"label" : "dnfClauseToBdd", "tail" : "(dnfClause: ClauseAsList): Bdd", "member" : "bdd.DimacsMixedReduce.dnfClauseToBdd", "link" : "bdd\/DimacsMixedReduce$.html#dnfClauseToBdd(dnfClause:dimacs.QmVec.ClauseAsList):bdd.Bdd", "kind" : "def"}, {"label" : "clauseToBdd", "tail" : "(clause: ClauseAsList, ident: BddTerm, op: BinaryOperation): Bdd", "member" : "bdd.DimacsMixedReduce.clauseToBdd", "link" : "bdd\/DimacsMixedReduce$.html#clauseToBdd(clause:dimacs.QmVec.ClauseAsList,ident:bdd.BddTerm,op:bdd.BinaryOperation):bdd.Bdd", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/DimacsMixedReduce$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/DimacsMixedReduce$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/DimacsMixedReduce$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/DimacsMixedReduce$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/DimacsMixedReduce$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/DimacsMixedReduce$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/DimacsMixedReduce$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/DimacsMixedReduce$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/DimacsMixedReduce$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/DimacsMixedReduce$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/DimacsMixedReduce$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/DimacsMixedReduce$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/DimacsMixedReduce$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/DimacsMixedReduce$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/DimacsMixedReduce$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/DimacsMixedReduce$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/DimacsMixedReduce$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/DimacsMixedReduce$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/DimacsMixedReduce$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bdd.DimacsParallelReduce", "shortDescription" : "", "object" : "bdd\/DimacsParallelReduce$.html", "members_object" : [{"label" : "dnfToBdd", "tail" : "(dnf: List[ClauseAsList]): Bdd", "member" : "bdd.DimacsParallelReduce.dnfToBdd", "link" : "bdd\/DimacsParallelReduce$.html#dnfToBdd(dnf:List[dimacs.QmVec.ClauseAsList]):bdd.Bdd", "kind" : "def"}, {"label" : "dnfClauseToBdd", "tail" : "(dnfClause: ClauseAsList): Bdd", "member" : "bdd.DimacsParallelReduce.dnfClauseToBdd", "link" : "bdd\/DimacsParallelReduce$.html#dnfClauseToBdd(dnfClause:dimacs.QmVec.ClauseAsList):bdd.Bdd", "kind" : "def"}, {"label" : "clauseToBdd", "tail" : "(clause: ClauseAsList, ident: BddTerm, op: BinaryOperation): Bdd", "member" : "bdd.DimacsParallelReduce.clauseToBdd", "link" : "bdd\/DimacsParallelReduce$.html#clauseToBdd(clause:dimacs.QmVec.ClauseAsList,ident:bdd.BddTerm,op:bdd.BinaryOperation):bdd.Bdd", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/DimacsParallelReduce$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/DimacsParallelReduce$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/DimacsParallelReduce$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/DimacsParallelReduce$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/DimacsParallelReduce$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/DimacsParallelReduce$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/DimacsParallelReduce$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/DimacsParallelReduce$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/DimacsParallelReduce$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/DimacsParallelReduce$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/DimacsParallelReduce$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/DimacsParallelReduce$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/DimacsParallelReduce$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/DimacsParallelReduce$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/DimacsParallelReduce$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/DimacsParallelReduce$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/DimacsParallelReduce$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/DimacsParallelReduce$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/DimacsParallelReduce$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bdd.GraphViz", "shortDescription" : "", "object" : "bdd\/GraphViz$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "bdd.GraphViz.main", "link" : "bdd\/GraphViz$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "GraphVizOps", "tail" : "", "member" : "bdd.GraphViz.GraphVizOps", "link" : "bdd\/GraphViz$.html#GraphVizOpsextendsAnyVal", "kind" : "implicit final class"}, {"label" : "bddToDotStream", "tail" : "(bdd: Bdd, stream: OutputStream, drawFalseLeaf: Boolean, title: String, labelToString: (Int) => String, htmlLabels: Boolean): Unit", "member" : "bdd.GraphViz.bddToDotStream", "link" : "bdd\/GraphViz$.html#bddToDotStream(bdd:bdd.Bdd,stream:java.io.OutputStream,drawFalseLeaf:Boolean,title:String,labelToString:Int=>String,htmlLabels:Boolean):Unit", "kind" : "def"}, {"label" : "bddToDot", "tail" : "(bdd: Bdd, pathname: String, drawFalseLeaf: Boolean, title: String, dotFileCB: (String) => Unit, labelToString: (Int) => String, htmlLabels: Boolean): String", "member" : "bdd.GraphViz.bddToDot", "link" : "bdd\/GraphViz$.html#bddToDot(bdd:bdd.Bdd,pathname:String,drawFalseLeaf:Boolean,title:String,dotFileCB:String=>Unit,labelToString:Int=>String,htmlLabels:Boolean):String", "kind" : "def"}, {"label" : "bddToPng", "tail" : "(bdd: Bdd, drawFalseLeaf: Boolean, title: String, dotFileCB: (String) => Unit, labelToString: (Int) => String, htmlLabels: Boolean): String", "member" : "bdd.GraphViz.bddToPng", "link" : "bdd\/GraphViz$.html#bddToPng(bdd:bdd.Bdd,drawFalseLeaf:Boolean,title:String,dotFileCB:String=>Unit,labelToString:Int=>String,htmlLabels:Boolean):String", "kind" : "def"}, {"label" : "dotProgram", "tail" : ": String", "member" : "bdd.GraphViz.dotProgram", "link" : "bdd\/GraphViz$.html#dotProgram:String", "kind" : "val"}, {"label" : "bddView", "tail" : "(bdd: Bdd, drawFalseLeaf: Boolean, title: String, dotFileCB: (String) => Unit, labelToString: (Int) => String, htmlLabels: Boolean): String", "member" : "bdd.GraphViz.bddView", "link" : "bdd\/GraphViz$.html#bddView(bdd:bdd.Bdd,drawFalseLeaf:Boolean,title:String,dotFileCB:String=>Unit,labelToString:Int=>String,htmlLabels:Boolean):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/GraphViz$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/GraphViz$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/GraphViz$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/GraphViz$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/GraphViz$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/GraphViz$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/GraphViz$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/GraphViz$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/GraphViz$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/GraphViz$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/GraphViz$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/GraphViz$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/GraphViz$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/GraphViz$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/GraphViz$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/GraphViz$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/GraphViz$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/GraphViz$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/GraphViz$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bdd.Histogram", "shortDescription" : "", "object" : "bdd\/Histogram$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "bdd.Histogram.main", "link" : "bdd\/Histogram$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "gnuPlotBddSizeHistogram", "tail" : "(r: Range, numSamples: (Int) => Long): Unit", "member" : "bdd.Histogram.gnuPlotBddSizeHistogram", "link" : "bdd\/Histogram$.html#gnuPlotBddSizeHistogram(r:Range,numSamples:Int=>Long):Unit", "kind" : "def"}, {"label" : "genBddNormalizedSizeHistogram", "tail" : "(n: Int, numSamples: Long): Map[Int, Double]", "member" : "bdd.Histogram.genBddNormalizedSizeHistogram", "link" : "bdd\/Histogram$.html#genBddNormalizedSizeHistogram(n:Int,numSamples:Long):Map[Int,Double]", "kind" : "def"}, {"label" : "genBddNormalizedSizeHistogram", "tail" : "(n: Int): Map[Int, Double]", "member" : "bdd.Histogram.genBddNormalizedSizeHistogram", "link" : "bdd\/Histogram$.html#genBddNormalizedSizeHistogram(n:Int):Map[Int,Double]", "kind" : "def"}, {"label" : "genBddSizeHistogram", "tail" : "(n: Int, numSamples: Long): Map[Int, Long]", "member" : "bdd.Histogram.genBddSizeHistogram", "link" : "bdd\/Histogram$.html#genBddSizeHistogram(n:Int,numSamples:Long):Map[Int,Long]", "kind" : "def"}, {"label" : "addMaps", "tail" : "(m1: Map[Int, Long], m2: Map[Int, Long]): Map[Int, Long]", "member" : "bdd.Histogram.addMaps", "link" : "bdd\/Histogram$.html#addMaps(m1:Map[Int,Long],m2:Map[Int,Long]):Map[Int,Long]", "kind" : "def"}, {"label" : "genBddSizeHistogram", "tail" : "(n: Int): Map[Int, Long]", "member" : "bdd.Histogram.genBddSizeHistogram", "link" : "bdd\/Histogram$.html#genBddSizeHistogram(n:Int):Map[Int,Long]", "kind" : "def"}, {"label" : "foldBdds", "tail" : "(n: Int, numSamples: Long, init: A)(f: (A, Bdd) => A): A", "member" : "bdd.Histogram.foldBdds", "link" : "bdd\/Histogram$.html#foldBdds[A](n:Int,numSamples:Long,init:A)(f:(A,bdd.Bdd)=>A):A", "kind" : "def"}, {"label" : "foldBdds", "tail" : "(n: Int, init: A)(f: (A, Bdd) => A): A", "member" : "bdd.Histogram.foldBdds", "link" : "bdd\/Histogram$.html#foldBdds[A](n:Int,init:A)(f:(A,bdd.Bdd)=>A):A", "kind" : "def"}, {"label" : "foreachBdd", "tail" : "(n: Int, numSamples: Long)(f: (Bdd) => Unit): Unit", "member" : "bdd.Histogram.foreachBdd", "link" : "bdd\/Histogram$.html#foreachBdd(n:Int,numSamples:Long)(f:bdd.Bdd=>Unit):Unit", "kind" : "def"}, {"label" : "foreachBdd", "tail" : "(n: Int)(f: (Bdd) => Unit): Unit", "member" : "bdd.Histogram.foreachBdd", "link" : "bdd\/Histogram$.html#foreachBdd(n:Int)(f:bdd.Bdd=>Unit):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/Histogram$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/Histogram$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/Histogram$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/Histogram$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/Histogram$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/Histogram$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/Histogram$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Histogram$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Histogram$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Histogram$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/Histogram$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/Histogram$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/Histogram$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/Histogram$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/Histogram$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/Histogram$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/Histogram$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/Histogram$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/Histogram$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bdd.Not", "shortDescription" : "", "object" : "bdd\/Not$.html", "members_object" : [{"label" : "apply", "tail" : "(b1: Bdd): Bdd", "member" : "bdd.Not.apply", "link" : "bdd\/Not$.html#apply(b1:bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/Not$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/Not$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/Not$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/Not$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/Not$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/Not$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/Not$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Not$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Not$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Not$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/Not$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/Not$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/Not$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/Not$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/Not$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/Not$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/Not$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/Not$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/Not$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bdd.Or", "shortDescription" : "", "object" : "bdd\/Or$.html", "members_object" : [{"label" : "apply", "tail" : "(b1: Bdd, b2: Bdd): Bdd", "member" : "bdd.Or.apply", "link" : "bdd\/Or$.html#apply(b1:bdd.Bdd,b2:bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(bdd: Bdd): Bdd", "member" : "bdd.Or.apply", "link" : "bdd\/Or$.html#apply(bdd:bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(): Bdd", "member" : "bdd.Or.apply", "link" : "bdd\/Or$.html#apply():bdd.Bdd", "kind" : "def"}, {"label" : "commutative", "tail" : ": Boolean", "member" : "bdd.Or.commutative", "link" : "bdd\/Or$.html#commutative:Boolean", "kind" : "val"}, {"label" : "bddOp", "tail" : "(b1: BddNode, b2: BddNode): Bdd", "member" : "bdd.BinaryOperation.bddOp", "link" : "bdd\/Or$.html#bddOp(b1:bdd.BddNode,b2:bdd.BddNode):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(args: List[Bdd]): Bdd", "member" : "bdd.BinaryOperation.apply", "link" : "bdd\/Or$.html#apply(args:List[bdd.Bdd]):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(args: Bdd*): Bdd", "member" : "bdd.BinaryOperation.apply", "link" : "bdd\/Or$.html#apply(args:bdd.Bdd*):bdd.Bdd", "kind" : "def"}, {"label" : "memoize", "tail" : "(b1: Bdd, b2: Bdd, thunk: => Bdd): Bdd", "member" : "bdd.BinaryOperation.memoize", "link" : "bdd\/Or$.html#memoize(b1:bdd.Bdd,b2:bdd.Bdd,thunk:=>bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "memoize", "tail" : "(thunk: => Bdd): Bdd", "member" : "bdd.BinaryOperation.memoize", "link" : "bdd\/Or$.html#memoize(thunk:=>bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "maybeOpHash", "tail" : ": DynamicVariable[Option[OP_HASH]]", "member" : "bdd.BinaryOperation.maybeOpHash", "link" : "bdd\/Or$.html#maybeOpHash:scala.util.DynamicVariable[Option[BinaryOperation.this.OP_HASH]]", "kind" : "val"}, {"label" : "newHashMap", "tail" : "(): OP_HASH", "member" : "bdd.BinaryOperation.newHashMap", "link" : "bdd\/Or$.html#newHashMap():BinaryOperation.this.OP_HASH", "kind" : "def"}, {"label" : "OP_HASH", "tail" : "", "member" : "bdd.BinaryOperation.OP_HASH", "link" : "bdd\/Or$.html#OP_HASH=scala.collection.mutable.Map[(bdd.Bdd,bdd.Bdd),bdd.Bdd]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/Or$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/Or$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/Or$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/Or$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/Or$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/Or$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/Or$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Or$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Or$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Or$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/Or$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/Or$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/Or$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/Or$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/Or$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/Or$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/Or$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/Or$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/Or$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bdd.ReducePerf", "shortDescription" : "", "object" : "bdd\/ReducePerf$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "bdd.ReducePerf.main", "link" : "bdd\/ReducePerf$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "testRandomBddConstruction", "tail" : "(maxNumVars: Int, verbose: Boolean): Unit", "member" : "bdd.ReducePerf.testRandomBddConstruction", "link" : "bdd\/ReducePerf$.html#testRandomBddConstruction(maxNumVars:Int,verbose:Boolean):Unit", "kind" : "def"}, {"label" : "testRandomBddConstruction", "tail" : "(verbose: Boolean): Unit", "member" : "bdd.ReducePerf.testRandomBddConstruction", "link" : "bdd\/ReducePerf$.html#testRandomBddConstruction(verbose:Boolean):Unit", "kind" : "def"}, {"label" : "testNumBitsConstruction", "tail" : "(numVars: Int, maxNumTerms: Int, numDnfs: Int, maxNumLiteralsPerTerm: Int, verbose: Boolean): Unit", "member" : "bdd.ReducePerf.testNumBitsConstruction", "link" : "bdd\/ReducePerf$.html#testNumBitsConstruction(numVars:Int,maxNumTerms:Int,numDnfs:Int,maxNumLiteralsPerTerm:Int,verbose:Boolean):Unit", "kind" : "def"}, {"label" : "testGenSizePlotPerFold", "tail" : "(numVars: Int, numTerms: Int, maxNumLiteralsPerTerm: Int, verbose: Boolean): Unit", "member" : "bdd.ReducePerf.testGenSizePlotPerFold", "link" : "bdd\/ReducePerf$.html#testGenSizePlotPerFold(numVars:Int,numTerms:Int,maxNumLiteralsPerTerm:Int,verbose:Boolean):Unit", "kind" : "def"}, {"label" : "testNumBitsConstruction", "tail" : "(verbose: Boolean): Unit", "member" : "bdd.ReducePerf.testNumBitsConstruction", "link" : "bdd\/ReducePerf$.html#testNumBitsConstruction(verbose:Boolean):Unit", "kind" : "def"}, {"label" : "testLimitedBddConstruction", "tail" : "(maxNumBits: Int, numVars: Int, maxNumTerms: Int, numTermsStep: Int, timeOutMinutes: Int, verbose: Boolean): Unit", "member" : "bdd.ReducePerf.testLimitedBddConstruction", "link" : "bdd\/ReducePerf$.html#testLimitedBddConstruction(maxNumBits:Int,numVars:Int,maxNumTerms:Int,numTermsStep:Int,timeOutMinutes:Int,verbose:Boolean):Unit", "kind" : "def"}, {"label" : "testLimitedBddConstruction", "tail" : "(verbose: Boolean): Unit", "member" : "bdd.ReducePerf.testLimitedBddConstruction", "link" : "bdd\/ReducePerf$.html#testLimitedBddConstruction(verbose:Boolean):Unit", "kind" : "def"}, {"label" : "foldPairs", "tail" : ": List[(String, (List[ClauseAsList]) => Bdd)]", "member" : "bdd.ReducePerf.foldPairs", "link" : "bdd\/ReducePerf$.html#foldPairs:List[(String,List[dimacs.QmVec.ClauseAsList]=>bdd.Bdd)]", "kind" : "val"}, {"label" : "time", "tail" : "(repetitions: Int, name: String, block: => R): Double", "member" : "bdd.ReducePerf.time", "link" : "bdd\/ReducePerf$.html#time[R](repetitions:Int,name:String,block:=>R):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/ReducePerf$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/ReducePerf$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/ReducePerf$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/ReducePerf$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/ReducePerf$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/ReducePerf$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/ReducePerf$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/ReducePerf$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/ReducePerf$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/ReducePerf$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/ReducePerf$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/ReducePerf$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/ReducePerf$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/ReducePerf$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/ReducePerf$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/ReducePerf$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/ReducePerf$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/ReducePerf$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/ReducePerf$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bdd.Xnor", "shortDescription" : "", "object" : "bdd\/Xnor$.html", "members_object" : [{"label" : "apply", "tail" : "(b1: Bdd, b2: Bdd): Bdd", "member" : "bdd.Xnor.apply", "link" : "bdd\/Xnor$.html#apply(b1:bdd.Bdd,b2:bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(bdd: Bdd): Bdd", "member" : "bdd.Xnor.apply", "link" : "bdd\/Xnor$.html#apply(bdd:bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(): Bdd", "member" : "bdd.Xnor.apply", "link" : "bdd\/Xnor$.html#apply():bdd.Bdd", "kind" : "def"}, {"label" : "commutative", "tail" : ": Boolean", "member" : "bdd.Xnor.commutative", "link" : "bdd\/Xnor$.html#commutative:Boolean", "kind" : "val"}, {"label" : "bddOp", "tail" : "(b1: BddNode, b2: BddNode): Bdd", "member" : "bdd.BinaryOperation.bddOp", "link" : "bdd\/Xnor$.html#bddOp(b1:bdd.BddNode,b2:bdd.BddNode):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(args: List[Bdd]): Bdd", "member" : "bdd.BinaryOperation.apply", "link" : "bdd\/Xnor$.html#apply(args:List[bdd.Bdd]):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(args: Bdd*): Bdd", "member" : "bdd.BinaryOperation.apply", "link" : "bdd\/Xnor$.html#apply(args:bdd.Bdd*):bdd.Bdd", "kind" : "def"}, {"label" : "memoize", "tail" : "(b1: Bdd, b2: Bdd, thunk: => Bdd): Bdd", "member" : "bdd.BinaryOperation.memoize", "link" : "bdd\/Xnor$.html#memoize(b1:bdd.Bdd,b2:bdd.Bdd,thunk:=>bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "memoize", "tail" : "(thunk: => Bdd): Bdd", "member" : "bdd.BinaryOperation.memoize", "link" : "bdd\/Xnor$.html#memoize(thunk:=>bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "maybeOpHash", "tail" : ": DynamicVariable[Option[OP_HASH]]", "member" : "bdd.BinaryOperation.maybeOpHash", "link" : "bdd\/Xnor$.html#maybeOpHash:scala.util.DynamicVariable[Option[BinaryOperation.this.OP_HASH]]", "kind" : "val"}, {"label" : "newHashMap", "tail" : "(): OP_HASH", "member" : "bdd.BinaryOperation.newHashMap", "link" : "bdd\/Xnor$.html#newHashMap():BinaryOperation.this.OP_HASH", "kind" : "def"}, {"label" : "OP_HASH", "tail" : "", "member" : "bdd.BinaryOperation.OP_HASH", "link" : "bdd\/Xnor$.html#OP_HASH=scala.collection.mutable.Map[(bdd.Bdd,bdd.Bdd),bdd.Bdd]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/Xnor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/Xnor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/Xnor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/Xnor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/Xnor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/Xnor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/Xnor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Xnor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Xnor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Xnor$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/Xnor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/Xnor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/Xnor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/Xnor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/Xnor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/Xnor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/Xnor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/Xnor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/Xnor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "bdd.Xor", "shortDescription" : "", "object" : "bdd\/Xor$.html", "members_object" : [{"label" : "apply", "tail" : "(b1: Bdd, b2: Bdd): Bdd", "member" : "bdd.Xor.apply", "link" : "bdd\/Xor$.html#apply(b1:bdd.Bdd,b2:bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(bdd: Bdd): Bdd", "member" : "bdd.Xor.apply", "link" : "bdd\/Xor$.html#apply(bdd:bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(): Bdd", "member" : "bdd.Xor.apply", "link" : "bdd\/Xor$.html#apply():bdd.Bdd", "kind" : "def"}, {"label" : "commutative", "tail" : ": Boolean", "member" : "bdd.Xor.commutative", "link" : "bdd\/Xor$.html#commutative:Boolean", "kind" : "val"}, {"label" : "bddOp", "tail" : "(b1: BddNode, b2: BddNode): Bdd", "member" : "bdd.BinaryOperation.bddOp", "link" : "bdd\/Xor$.html#bddOp(b1:bdd.BddNode,b2:bdd.BddNode):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(args: List[Bdd]): Bdd", "member" : "bdd.BinaryOperation.apply", "link" : "bdd\/Xor$.html#apply(args:List[bdd.Bdd]):bdd.Bdd", "kind" : "def"}, {"label" : "apply", "tail" : "(args: Bdd*): Bdd", "member" : "bdd.BinaryOperation.apply", "link" : "bdd\/Xor$.html#apply(args:bdd.Bdd*):bdd.Bdd", "kind" : "def"}, {"label" : "memoize", "tail" : "(b1: Bdd, b2: Bdd, thunk: => Bdd): Bdd", "member" : "bdd.BinaryOperation.memoize", "link" : "bdd\/Xor$.html#memoize(b1:bdd.Bdd,b2:bdd.Bdd,thunk:=>bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "memoize", "tail" : "(thunk: => Bdd): Bdd", "member" : "bdd.BinaryOperation.memoize", "link" : "bdd\/Xor$.html#memoize(thunk:=>bdd.Bdd):bdd.Bdd", "kind" : "def"}, {"label" : "maybeOpHash", "tail" : ": DynamicVariable[Option[OP_HASH]]", "member" : "bdd.BinaryOperation.maybeOpHash", "link" : "bdd\/Xor$.html#maybeOpHash:scala.util.DynamicVariable[Option[BinaryOperation.this.OP_HASH]]", "kind" : "val"}, {"label" : "newHashMap", "tail" : "(): OP_HASH", "member" : "bdd.BinaryOperation.newHashMap", "link" : "bdd\/Xor$.html#newHashMap():BinaryOperation.this.OP_HASH", "kind" : "def"}, {"label" : "OP_HASH", "tail" : "", "member" : "bdd.BinaryOperation.OP_HASH", "link" : "bdd\/Xor$.html#OP_HASH=scala.collection.mutable.Map[(bdd.Bdd,bdd.Bdd),bdd.Bdd]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "bdd\/Xor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "bdd\/Xor$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "bdd\/Xor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "bdd\/Xor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "bdd\/Xor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "bdd\/Xor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "bdd\/Xor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Xor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Xor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "bdd\/Xor$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "bdd\/Xor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "bdd\/Xor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "bdd\/Xor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "bdd\/Xor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "bdd\/Xor$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "bdd\/Xor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "bdd\/Xor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "bdd\/Xor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "bdd\/Xor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "lbdd.benchmarks" : [{"name" : "lbdd.benchmarks.Targets", "shortDescription" : "", "object" : "lbdd\/benchmarks\/Targets$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "lbdd.benchmarks.Targets.main", "link" : "lbdd\/benchmarks\/Targets$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "lazyBddSamples", "tail" : "(n: Int): Any", "member" : "lbdd.benchmarks.Targets.lazyBddSamples", "link" : "lbdd\/benchmarks\/Targets$.html#lazyBddSamples(n:Int):Any", "kind" : "def"}, {"label" : "bddSamples", "tail" : "(n: Int): Bdd", "member" : "lbdd.benchmarks.Targets.bddSamples", "link" : "lbdd\/benchmarks\/Targets$.html#bddSamples(n:Int):bdd.Bdd", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "lbdd\/benchmarks\/Targets$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "lbdd\/benchmarks\/Targets$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "lbdd\/benchmarks\/Targets$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "lbdd\/benchmarks\/Targets$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "lbdd\/benchmarks\/Targets$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "lbdd\/benchmarks\/Targets$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "lbdd\/benchmarks\/Targets$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/benchmarks\/Targets$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/benchmarks\/Targets$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "lbdd\/benchmarks\/Targets$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "lbdd\/benchmarks\/Targets$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "lbdd\/benchmarks\/Targets$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "lbdd\/benchmarks\/Targets$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "lbdd\/benchmarks\/Targets$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "lbdd\/benchmarks\/Targets$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "lbdd\/benchmarks\/Targets$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "lbdd\/benchmarks\/Targets$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "lbdd\/benchmarks\/Targets$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "lbdd\/benchmarks\/Targets$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "dimacs" : [{"name" : "dimacs.ClauseDesignator", "shortDescription" : "", "members_case class" : [{"member" : "dimacs.ClauseDesignator#<init>", "error" : "unsupported entity"}, {"label" : "rectified", "tail" : ": ClauseAsList", "member" : "dimacs.ClauseDesignator.rectified", "link" : "dimacs\/ClauseDesignator.html#rectified:dimacs.QmVec.ClauseAsList", "kind" : "val"}, {"label" : "length", "tail" : ": Int", "member" : "dimacs.ClauseDesignator.length", "link" : "dimacs\/ClauseDesignator.html#length:Int", "kind" : "val"}, {"label" : "posCount", "tail" : ": Int", "member" : "dimacs.ClauseDesignator.posCount", "link" : "dimacs\/ClauseDesignator.html#posCount:Int", "kind" : "val"}, {"label" : "clause", "tail" : ": ClauseAsBitSet", "member" : "dimacs.ClauseDesignator.clause", "link" : "dimacs\/ClauseDesignator.html#clause:dimacs.QmVec.ClauseAsBitSet", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "dimacs\/ClauseDesignator.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dimacs\/ClauseDesignator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dimacs\/ClauseDesignator.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dimacs\/ClauseDesignator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dimacs\/ClauseDesignator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dimacs\/ClauseDesignator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dimacs\/ClauseDesignator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dimacs\/ClauseDesignator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/ClauseDesignator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/ClauseDesignator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/ClauseDesignator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dimacs\/ClauseDesignator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dimacs\/ClauseDesignator.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dimacs\/ClauseDesignator.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dimacs\/ClauseDesignator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dimacs\/ClauseDesignator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dimacs\/ClauseDesignator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "dimacs\/ClauseDesignator.html", "kind" : "case class"}, {"name" : "dimacs.DimacsFile", "shortDescription" : "", "members_case class" : [{"member" : "dimacs.DimacsFile#<init>", "error" : "unsupported entity"}, {"label" : "clauses", "tail" : ": List[ClauseAsList]", "member" : "dimacs.DimacsFile.clauses", "link" : "dimacs\/DimacsFile.html#clauses:List[dimacs.QmVec.ClauseAsList]", "kind" : "val"}, {"label" : "problem", "tail" : ": Problem", "member" : "dimacs.DimacsFile.problem", "link" : "dimacs\/DimacsFile.html#problem:dimacs.Problem", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "dimacs\/DimacsFile.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dimacs\/DimacsFile.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dimacs\/DimacsFile.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dimacs\/DimacsFile.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dimacs\/DimacsFile.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dimacs\/DimacsFile.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dimacs\/DimacsFile.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dimacs\/DimacsFile.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/DimacsFile.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/DimacsFile.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/DimacsFile.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dimacs\/DimacsFile.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dimacs\/DimacsFile.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dimacs\/DimacsFile.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dimacs\/DimacsFile.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dimacs\/DimacsFile.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dimacs\/DimacsFile.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "dimacs\/DimacsFile.html", "kind" : "case class"}, {"name" : "dimacs.dimacsParse", "shortDescription" : "", "object" : "dimacs\/dimacsParse$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "dimacs.dimacsParse.main", "link" : "dimacs\/dimacsParse$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "dimacsConvertFile", "tail" : "(fName: String, getInputName: (String) => String, getOutputName: (String) => String): Unit", "member" : "dimacs.dimacsParse.dimacsConvertFile", "link" : "dimacs\/dimacsParse$.html#dimacsConvertFile(fName:String,getInputName:String=>String,getOutputName:String=>String):Unit", "kind" : "def"}, {"label" : "dimacsConvertFile", "tail" : "(inFileName: String, outFileName: String): Unit", "member" : "dimacs.dimacsParse.dimacsConvertFile", "link" : "dimacs\/dimacsParse$.html#dimacsConvertFile(inFileName:String,outFileName:String):Unit", "kind" : "def"}, {"label" : "dimacsConvertDirectory", "tail" : "(suffix: String, inputDirectory: String, getOutputName: (String) => String): Unit", "member" : "dimacs.dimacsParse.dimacsConvertDirectory", "link" : "dimacs\/dimacsParse$.html#dimacsConvertDirectory(suffix:String,inputDirectory:String,getOutputName:String=>String):Unit", "kind" : "def"}, {"label" : "dimacsConvertDirectory", "tail" : "(suffix: String, inputDirectory: String, getOutputName: (String) => String, fileNames: List[String]): Unit", "member" : "dimacs.dimacsParse.dimacsConvertDirectory", "link" : "dimacs\/dimacsParse$.html#dimacsConvertDirectory(suffix:String,inputDirectory:String,getOutputName:String=>String,fileNames:List[String]):Unit", "kind" : "def"}, {"label" : "getListOfFiles", "tail" : "(dir: File, extensions: List[String]): List[File]", "member" : "dimacs.dimacsParse.getListOfFiles", "link" : "dimacs\/dimacsParse$.html#getListOfFiles(dir:java.io.File,extensions:List[String]):List[java.io.File]", "kind" : "def"}, {"label" : "parseBufferedContent", "tail" : "(it: BufferedIterator[Char]): DimacsFile", "member" : "dimacs.dimacsParse.parseBufferedContent", "link" : "dimacs\/dimacsParse$.html#parseBufferedContent(it:scala.collection.BufferedIterator[Char]):dimacs.DimacsFile", "kind" : "def"}, {"label" : "consumeBufferedContent", "tail" : "(it: BufferedIterator[Char], consumeClause: (ClauseAsList) => Unit, consumeProblem: (Problem) => Unit): Unit", "member" : "dimacs.dimacsParse.consumeBufferedContent", "link" : "dimacs\/dimacsParse$.html#consumeBufferedContent(it:scala.collection.BufferedIterator[Char],consumeClause:dimacs.QmVec.ClauseAsList=>Unit,consumeProblem:dimacs.Problem=>Unit):Unit", "kind" : "def"}, {"label" : "skipComment", "tail" : "(it: BufferedIterator[Char]): Unit", "member" : "dimacs.dimacsParse.skipComment", "link" : "dimacs\/dimacsParse$.html#skipComment(it:scala.collection.BufferedIterator[Char]):Unit", "kind" : "def"}, {"label" : "skipThroughEOL", "tail" : "(it: BufferedIterator[Char]): Unit", "member" : "dimacs.dimacsParse.skipThroughEOL", "link" : "dimacs\/dimacsParse$.html#skipThroughEOL(it:scala.collection.BufferedIterator[Char]):Unit", "kind" : "def"}, {"label" : "parseProblem", "tail" : "(it: BufferedIterator[Char]): Problem", "member" : "dimacs.dimacsParse.parseProblem", "link" : "dimacs\/dimacsParse$.html#parseProblem(it:scala.collection.BufferedIterator[Char]):dimacs.Problem", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(it: BufferedIterator[Char], p: (Char) => Boolean): List[Char]", "member" : "dimacs.dimacsParse.takeWhile", "link" : "dimacs\/dimacsParse$.html#takeWhile(it:scala.collection.BufferedIterator[Char],p:Char=>Boolean):List[Char]", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(it: BufferedIterator[Char], p: (Char) => Boolean): BufferedIterator[Char]", "member" : "dimacs.dimacsParse.dropWhile", "link" : "dimacs\/dimacsParse$.html#dropWhile(it:scala.collection.BufferedIterator[Char],p:Char=>Boolean):scala.collection.BufferedIterator[Char]", "kind" : "def"}, {"label" : "parseStringContent", "tail" : "(content: String): DimacsFile", "member" : "dimacs.dimacsParse.parseStringContent", "link" : "dimacs\/dimacsParse$.html#parseStringContent(content:String):dimacs.DimacsFile", "kind" : "def"}, {"label" : "consumeFileByName", "tail" : "(fileName: String, consumeClause: (ClauseAsList) => Unit, consumeProblem: (Problem) => Unit): Unit", "member" : "dimacs.dimacsParse.consumeFileByName", "link" : "dimacs\/dimacsParse$.html#consumeFileByName(fileName:String,consumeClause:dimacs.QmVec.ClauseAsList=>Unit,consumeProblem:dimacs.Problem=>Unit):Unit", "kind" : "def"}, {"label" : "parseFileByName", "tail" : "(fileName: String): DimacsFile", "member" : "dimacs.dimacsParse.parseFileByName", "link" : "dimacs\/dimacsParse$.html#parseFileByName(fileName:String):dimacs.DimacsFile", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dimacs\/dimacsParse$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dimacs\/dimacsParse$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dimacs\/dimacsParse$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dimacs\/dimacsParse$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dimacs\/dimacsParse$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dimacs\/dimacsParse$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dimacs\/dimacsParse$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/dimacsParse$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/dimacsParse$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/dimacsParse$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dimacs\/dimacsParse$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dimacs\/dimacsParse$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dimacs\/dimacsParse$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dimacs\/dimacsParse$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "dimacs\/dimacsParse$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dimacs\/dimacsParse$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dimacs\/dimacsParse$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dimacs\/dimacsParse$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dimacs\/dimacsParse$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "dimacs.dimacsSimplify", "shortDescription" : "", "object" : "dimacs\/dimacsSimplify$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "dimacs.dimacsSimplify.main", "link" : "dimacs\/dimacsSimplify$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "crossCompatiblize", "tail" : "(cla: Set[ClauseAsBitSet], clb: Set[ClauseAsBitSet], posCount: Int, length: Int, rectified: ClauseAsList): RemoveAdd", "member" : "dimacs.dimacsSimplify.crossCompatiblize", "link" : "dimacs\/dimacsSimplify$.html#crossCompatiblize(cla:Set[dimacs.QmVec.ClauseAsBitSet],clb:Set[dimacs.QmVec.ClauseAsBitSet],posCount:Int,length:Int,rectified:dimacs.QmVec.ClauseAsList):dimacs.RemoveAdd", "kind" : "def"}, {"label" : "quineMcCluskeyReduce", "tail" : "(clauses: CNF): CNF", "member" : "dimacs.dimacsSimplify.quineMcCluskeyReduce", "link" : "dimacs\/dimacsSimplify$.html#quineMcCluskeyReduce(clauses:dimacs.QmVec.CNF):dimacs.QmVec.CNF", "kind" : "def"}, {"label" : "quineMcCluskeyReduceAndSortResults", "tail" : "(vec: QmVec): CNF", "member" : "dimacs.dimacsSimplify.quineMcCluskeyReduceAndSortResults", "link" : "dimacs\/dimacsSimplify$.html#quineMcCluskeyReduceAndSortResults(vec:dimacs.QmVec):dimacs.QmVec.CNF", "kind" : "def"}, {"label" : "reduceOneVar", "tail" : "(rectified: ClauseAsList, clause1: ClauseAsBitSet, clause2: ClauseAsBitSet): (ClauseAsBitSet, ClauseAsList)", "member" : "dimacs.dimacsSimplify.reduceOneVar", "link" : "dimacs\/dimacsSimplify$.html#reduceOneVar(rectified:dimacs.QmVec.ClauseAsList,clause1:dimacs.QmVec.ClauseAsBitSet,clause2:dimacs.QmVec.ClauseAsBitSet):(dimacs.QmVec.ClauseAsBitSet,dimacs.QmVec.ClauseAsList)", "kind" : "def"}, {"label" : "isCompatible", "tail" : "(clause1: ClauseAsBitSet, clause2: ClauseAsBitSet): Boolean", "member" : "dimacs.dimacsSimplify.isCompatible", "link" : "dimacs\/dimacsSimplify$.html#isCompatible(clause1:dimacs.QmVec.ClauseAsBitSet,clause2:dimacs.QmVec.ClauseAsBitSet):Boolean", "kind" : "def"}, {"label" : "isCompatible2", "tail" : "(clause1: ClauseAsList, clause2: ClauseAsList): Boolean", "member" : "dimacs.dimacsSimplify.isCompatible2", "link" : "dimacs\/dimacsSimplify$.html#isCompatible2(clause1:dimacs.QmVec.ClauseAsList,clause2:dimacs.QmVec.ClauseAsList):Boolean", "kind" : "def"}, {"label" : "HashUpdateFunction", "tail" : "", "member" : "dimacs.dimacsSimplify.HashUpdateFunction", "link" : "dimacs\/dimacsSimplify$.html#HashUpdateFunction=(dimacs.QmVec.ClauseAsList,Int,Int,dimacs.QmVec.ClauseAsList)=>Unit", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dimacs\/dimacsSimplify$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dimacs\/dimacsSimplify$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dimacs\/dimacsSimplify$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dimacs\/dimacsSimplify$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dimacs\/dimacsSimplify$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dimacs\/dimacsSimplify$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dimacs\/dimacsSimplify$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/dimacsSimplify$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/dimacsSimplify$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/dimacsSimplify$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dimacs\/dimacsSimplify$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dimacs\/dimacsSimplify$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dimacs\/dimacsSimplify$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dimacs\/dimacsSimplify$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "dimacs\/dimacsSimplify$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dimacs\/dimacsSimplify$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dimacs\/dimacsSimplify$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dimacs\/dimacsSimplify$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dimacs\/dimacsSimplify$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "dimacs.perfTest", "shortDescription" : "", "object" : "dimacs\/perfTest$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "dimacs.perfTest.main", "link" : "dimacs\/perfTest$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "genCNF", "tail" : "(numVars: Int, numClauses: Int, density: Int): CNF", "member" : "dimacs.perfTest.genCNF", "link" : "dimacs\/perfTest$.html#genCNF(numVars:Int,numClauses:Int,density:Int):dimacs.QmVec.CNF", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dimacs\/perfTest$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dimacs\/perfTest$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dimacs\/perfTest$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dimacs\/perfTest$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dimacs\/perfTest$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dimacs\/perfTest$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dimacs\/perfTest$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/perfTest$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/perfTest$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/perfTest$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dimacs\/perfTest$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dimacs\/perfTest$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dimacs\/perfTest$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dimacs\/perfTest$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "dimacs\/perfTest$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dimacs\/perfTest$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dimacs\/perfTest$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dimacs\/perfTest$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dimacs\/perfTest$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "dimacs.Problem", "shortDescription" : "", "object" : "dimacs\/Problem$.html", "members_object" : [{"label" : "nil", "tail" : ": Problem", "member" : "dimacs.Problem.nil", "link" : "dimacs\/Problem$.html#nil:dimacs.Problem", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dimacs\/Problem$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dimacs\/Problem$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dimacs\/Problem$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dimacs\/Problem$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dimacs\/Problem$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dimacs\/Problem$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dimacs\/Problem$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/Problem$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/Problem$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/Problem$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dimacs\/Problem$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dimacs\/Problem$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dimacs\/Problem$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dimacs\/Problem$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "dimacs\/Problem$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dimacs\/Problem$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dimacs\/Problem$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dimacs\/Problem$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dimacs\/Problem$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "dimacs.Problem#<init>", "error" : "unsupported entity"}, {"label" : "numClauses", "tail" : ": Int", "member" : "dimacs.Problem.numClauses", "link" : "dimacs\/Problem.html#numClauses:Int", "kind" : "val"}, {"label" : "numVars", "tail" : ": Int", "member" : "dimacs.Problem.numVars", "link" : "dimacs\/Problem.html#numVars:Int", "kind" : "val"}, {"label" : "problemType", "tail" : ": String", "member" : "dimacs.Problem.problemType", "link" : "dimacs\/Problem.html#problemType:String", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "dimacs\/Problem.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dimacs\/Problem.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dimacs\/Problem.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dimacs\/Problem.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dimacs\/Problem.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dimacs\/Problem.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dimacs\/Problem.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dimacs\/Problem.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/Problem.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/Problem.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/Problem.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dimacs\/Problem.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dimacs\/Problem.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dimacs\/Problem.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dimacs\/Problem.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dimacs\/Problem.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dimacs\/Problem.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "dimacs\/Problem.html", "kind" : "case class"}, {"name" : "dimacs.QmVec", "shortDescription" : "", "object" : "dimacs\/QmVec$.html", "members_class" : [{"label" : "writeDimacs", "tail" : "(fileName: String, comment: Option[List[String]]): (Int, Int)", "member" : "dimacs.QmVec.writeDimacs", "link" : "dimacs\/QmVec.html#writeDimacs(fileName:String,comment:Option[List[String]]):(Int,Int)", "kind" : "def"}, {"label" : "writeDimacs", "tail" : "(fileName: String): (Int, Int)", "member" : "dimacs.QmVec.writeDimacs", "link" : "dimacs\/QmVec.html#writeDimacs(fileName:String):(Int,Int)", "kind" : "def"}, {"label" : "printVec", "tail" : "(): Unit", "member" : "dimacs.QmVec.printVec", "link" : "dimacs\/QmVec.html#printVec():Unit", "kind" : "def"}, {"label" : "qmReduce", "tail" : "(): Unit", "member" : "dimacs.QmVec.qmReduce", "link" : "dimacs\/QmVec.html#qmReduce():Unit", "kind" : "def"}, {"label" : "reducePosCountClausesIncremental", "tail" : "(posCount: Int, length: Int, rectified: ClauseAsList): RemoveAdd", "member" : "dimacs.QmVec.reducePosCountClausesIncremental", "link" : "dimacs\/QmVec.html#reducePosCountClausesIncremental(posCount:Int,length:Int,rectified:dimacs.QmVec.ClauseAsList):dimacs.RemoveAdd", "kind" : "def"}, {"label" : "reducePosCountClauses", "tail" : "(posCount: Int): RemoveAdd", "member" : "dimacs.QmVec.reducePosCountClauses", "link" : "dimacs\/QmVec.html#reducePosCountClauses(posCount:Int):dimacs.RemoveAdd", "kind" : "def"}, {"label" : "mapClauses", "tail" : "(consume: (ClauseAsList) => Unit): Unit", "member" : "dimacs.QmVec.mapClauses", "link" : "dimacs\/QmVec.html#mapClauses(consume:dimacs.QmVec.ClauseAsList=>Unit):Unit", "kind" : "def"}, {"label" : "removeClause1", "tail" : "(removeMe: ClauseAsList): Unit", "member" : "dimacs.QmVec.removeClause1", "link" : "dimacs\/QmVec.html#removeClause1(removeMe:dimacs.QmVec.ClauseAsList):Unit", "kind" : "def"}, {"label" : "removeClause", "tail" : "(designator: ClauseDesignator): Unit", "member" : "dimacs.QmVec.removeClause", "link" : "dimacs\/QmVec.html#removeClause(designator:dimacs.ClauseDesignator):Unit", "kind" : "def"}, {"label" : "addClause1", "tail" : "(addMe: ClauseAsList): Unit", "member" : "dimacs.QmVec.addClause1", "link" : "dimacs\/QmVec.html#addClause1(addMe:dimacs.QmVec.ClauseAsList):Unit", "kind" : "def"}, {"label" : "addClause", "tail" : "(designator: ClauseDesignator): Unit", "member" : "dimacs.QmVec.addClause", "link" : "dimacs\/QmVec.html#addClause(designator:dimacs.ClauseDesignator):Unit", "kind" : "def"}, {"label" : "hash", "tail" : ": HashMap[Int, LENGTHHASH]", "member" : "dimacs.QmVec.hash", "link" : "dimacs\/QmVec.html#hash:scala.collection.mutable.HashMap[Int,QmVec.this.LENGTHHASH]", "kind" : "val"}, {"label" : "LENGTHHASH", "tail" : "", "member" : "dimacs.QmVec.LENGTHHASH", "link" : "dimacs\/QmVec.html#LENGTHHASH=scala.collection.mutable.HashMap[Int,QmVec.this.RECTHASH]", "kind" : "type"}, {"label" : "RECTHASH", "tail" : "", "member" : "dimacs.QmVec.RECTHASH", "link" : "dimacs\/QmVec.html#RECTHASH=scala.collection.mutable.HashMap[dimacs.QmVec.ClauseAsList,Set[dimacs.QmVec.ClauseAsBitSet]]", "kind" : "type"}, {"member" : "dimacs.QmVec#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dimacs\/QmVec.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dimacs\/QmVec.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dimacs\/QmVec.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dimacs\/QmVec.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dimacs\/QmVec.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dimacs\/QmVec.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dimacs\/QmVec.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/QmVec.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/QmVec.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/QmVec.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dimacs\/QmVec.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dimacs\/QmVec.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dimacs\/QmVec.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dimacs\/QmVec.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "dimacs\/QmVec.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dimacs\/QmVec.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dimacs\/QmVec.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dimacs\/QmVec.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dimacs\/QmVec.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "foldUps", "tail" : "(ups: Iterable[RemoveAdd]): RemoveAdd", "member" : "dimacs.QmVec.foldUps", "link" : "dimacs\/QmVec$.html#foldUps(ups:Iterable[dimacs.RemoveAdd]):dimacs.RemoveAdd", "kind" : "def"}, {"label" : "maxClauses", "tail" : "(n: Int, k: Int): Long", "member" : "dimacs.QmVec.maxClauses", "link" : "dimacs\/QmVec$.html#maxClauses(n:Int,k:Int):Long", "kind" : "def"}, {"label" : "countPositive", "tail" : "(clause: ClauseAsList): Int", "member" : "dimacs.QmVec.countPositive", "link" : "dimacs\/QmVec$.html#countPositive(clause:dimacs.QmVec.ClauseAsList):Int", "kind" : "def"}, {"label" : "rectify", "tail" : "(clause: ClauseAsList): ClauseAsList", "member" : "dimacs.QmVec.rectify", "link" : "dimacs\/QmVec$.html#rectify(clause:dimacs.QmVec.ClauseAsList):dimacs.QmVec.ClauseAsList", "kind" : "def"}, {"label" : "equalAbsList", "tail" : "(clause1: ClauseAsList, clause2: ClauseAsList): Boolean", "member" : "dimacs.QmVec.equalAbsList", "link" : "dimacs\/QmVec$.html#equalAbsList(clause1:dimacs.QmVec.ClauseAsList,clause2:dimacs.QmVec.ClauseAsList):Boolean", "kind" : "def"}, {"label" : "equalAbs", "tail" : "(x: Int, y: Int): Boolean", "member" : "dimacs.QmVec.equalAbs", "link" : "dimacs\/QmVec$.html#equalAbs(x:Int,y:Int):Boolean", "kind" : "def"}, {"label" : "clauseLess", "tail" : "(clause1: ClauseAsList, clause2: ClauseAsList): Boolean", "member" : "dimacs.QmVec.clauseLess", "link" : "dimacs\/QmVec$.html#clauseLess(clause1:dimacs.QmVec.ClauseAsList,clause2:dimacs.QmVec.ClauseAsList):Boolean", "kind" : "def"}, {"label" : "absLess", "tail" : "(a: Int, b: Int): Boolean", "member" : "dimacs.QmVec.absLess", "link" : "dimacs\/QmVec$.html#absLess(a:Int,b:Int):Boolean", "kind" : "def"}, {"label" : "canonicalizeClause", "tail" : "(clause: Set[Int]): ClauseAsList", "member" : "dimacs.QmVec.canonicalizeClause", "link" : "dimacs\/QmVec$.html#canonicalizeClause(clause:Set[Int]):dimacs.QmVec.ClauseAsList", "kind" : "def"}, {"label" : "canonicalizeClause", "tail" : "(clause: ClauseAsList): ClauseAsList", "member" : "dimacs.QmVec.canonicalizeClause", "link" : "dimacs\/QmVec$.html#canonicalizeClause(clause:dimacs.QmVec.ClauseAsList):dimacs.QmVec.ClauseAsList", "kind" : "def"}, {"label" : "bitSetToClause", "tail" : "(rectified: ClauseAsList, b: ClauseAsBitSet): ClauseAsList", "member" : "dimacs.QmVec.bitSetToClause", "link" : "dimacs\/QmVec$.html#bitSetToClause(rectified:dimacs.QmVec.ClauseAsList,b:dimacs.QmVec.ClauseAsBitSet):dimacs.QmVec.ClauseAsList", "kind" : "def"}, {"label" : "clauseToBitSet", "tail" : "(clause: ClauseAsList): ClauseAsBitSet", "member" : "dimacs.QmVec.clauseToBitSet", "link" : "dimacs\/QmVec$.html#clauseToBitSet(clause:dimacs.QmVec.ClauseAsList):dimacs.QmVec.ClauseAsBitSet", "kind" : "def"}, {"label" : "apply", "tail" : "(clauses: CNF): QmVec", "member" : "dimacs.QmVec.apply", "link" : "dimacs\/QmVec$.html#apply(clauses:dimacs.QmVec.CNF):dimacs.QmVec", "kind" : "def"}, {"label" : "apply", "tail" : "(dimacs: DimacsFile): QmVec", "member" : "dimacs.QmVec.apply", "link" : "dimacs\/QmVec$.html#apply(dimacs:dimacs.DimacsFile):dimacs.QmVec", "kind" : "def"}, {"label" : "CNF", "tail" : "", "member" : "dimacs.QmVec.CNF", "link" : "dimacs\/QmVec$.html#CNF=List[dimacs.QmVec.ClauseAsList]", "kind" : "type"}, {"label" : "ClauseAsList", "tail" : "", "member" : "dimacs.QmVec.ClauseAsList", "link" : "dimacs\/QmVec$.html#ClauseAsList=List[Int]", "kind" : "type"}, {"label" : "ClauseAsBitSet", "tail" : "", "member" : "dimacs.QmVec.ClauseAsBitSet", "link" : "dimacs\/QmVec$.html#ClauseAsBitSet=scala.collection.immutable.BitSet", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dimacs\/QmVec$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dimacs\/QmVec$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dimacs\/QmVec$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dimacs\/QmVec$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dimacs\/QmVec$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dimacs\/QmVec$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dimacs\/QmVec$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/QmVec$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/QmVec$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/QmVec$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dimacs\/QmVec$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dimacs\/QmVec$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dimacs\/QmVec$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dimacs\/QmVec$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "dimacs\/QmVec$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dimacs\/QmVec$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dimacs\/QmVec$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dimacs\/QmVec$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dimacs\/QmVec$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "dimacs\/QmVec.html", "kind" : "class"}, {"name" : "dimacs.RemoveAdd", "shortDescription" : "", "object" : "dimacs\/RemoveAdd$.html", "members_object" : [{"label" : "nil", "tail" : ": RemoveAdd", "member" : "dimacs.RemoveAdd.nil", "link" : "dimacs\/RemoveAdd$.html#nil:dimacs.RemoveAdd", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dimacs\/RemoveAdd$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dimacs\/RemoveAdd$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dimacs\/RemoveAdd$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dimacs\/RemoveAdd$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dimacs\/RemoveAdd$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dimacs\/RemoveAdd$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dimacs\/RemoveAdd$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/RemoveAdd$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/RemoveAdd$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/RemoveAdd$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dimacs\/RemoveAdd$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dimacs\/RemoveAdd$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dimacs\/RemoveAdd$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dimacs\/RemoveAdd$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "dimacs\/RemoveAdd$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dimacs\/RemoveAdd$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dimacs\/RemoveAdd$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dimacs\/RemoveAdd$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dimacs\/RemoveAdd$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "dimacs.RemoveAdd#<init>", "error" : "unsupported entity"}, {"label" : "adds", "tail" : ": List[ClauseDesignator]", "member" : "dimacs.RemoveAdd.adds", "link" : "dimacs\/RemoveAdd.html#adds:List[dimacs.ClauseDesignator]", "kind" : "val"}, {"label" : "removes", "tail" : ": List[ClauseDesignator]", "member" : "dimacs.RemoveAdd.removes", "link" : "dimacs\/RemoveAdd.html#removes:List[dimacs.ClauseDesignator]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "dimacs\/RemoveAdd.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dimacs\/RemoveAdd.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dimacs\/RemoveAdd.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dimacs\/RemoveAdd.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dimacs\/RemoveAdd.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dimacs\/RemoveAdd.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dimacs\/RemoveAdd.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dimacs\/RemoveAdd.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/RemoveAdd.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/RemoveAdd.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dimacs\/RemoveAdd.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dimacs\/RemoveAdd.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dimacs\/RemoveAdd.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dimacs\/RemoveAdd.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "dimacs\/RemoveAdd.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dimacs\/RemoveAdd.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dimacs\/RemoveAdd.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "dimacs\/RemoveAdd.html", "kind" : "case class"}], "graphcolor" : [{"name" : "graphcolor.EuropeGraph", "shortDescription" : "", "object" : "graphcolor\/EuropeGraph$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "graphcolor.EuropeGraph.main", "link" : "graphcolor\/EuropeGraph$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "stateBiGraph", "tail" : ": Map[String, Set[String]]", "member" : "graphcolor.EuropeGraph.stateBiGraph", "link" : "graphcolor\/EuropeGraph$.html#stateBiGraph:Map[String,Set[String]]", "kind" : "val"}, {"label" : "stateUniGraph", "tail" : ": Map[String, Set[String]]", "member" : "graphcolor.EuropeGraph.stateUniGraph", "link" : "graphcolor\/EuropeGraph$.html#stateUniGraph:Map[String,Set[String]]", "kind" : "val"}, {"label" : "statePositions", "tail" : ": Map[String, (Double, Double)]", "member" : "graphcolor.EuropeGraph.statePositions", "link" : "graphcolor\/EuropeGraph$.html#statePositions:Map[String,(Double,Double)]", "kind" : "val"}, {"label" : "symbols", "tail" : ": Map[String, String]", "member" : "graphcolor.EuropeGraph.symbols", "link" : "graphcolor\/EuropeGraph$.html#symbols:Map[String,String]", "kind" : "val"}, {"label" : "allStates", "tail" : ": Set[String]", "member" : "graphcolor.EuropeGraph.allStates", "link" : "graphcolor\/EuropeGraph$.html#allStates:Set[String]", "kind" : "val"}, {"label" : "dotProgram", "tail" : ": String", "member" : "graphcolor.PoliticalMap.dotProgram", "link" : "graphcolor\/EuropeGraph$.html#dotProgram:String", "kind" : "val"}, {"label" : "checkBiMap", "tail" : "(all: Set[String], biGraph: Map[String, Set[String]]): Unit", "member" : "graphcolor.PoliticalMap.checkBiMap", "link" : "graphcolor\/EuropeGraph$.html#checkBiMap(all:Set[V],biGraph:Map[V,Set[V]]):Unit", "kind" : "def"}, {"label" : "checkUniMap", "tail" : "(all: Set[String], uniGraph: Map[String, Set[String]]): Unit", "member" : "graphcolor.PoliticalMap.checkUniMap", "link" : "graphcolor\/EuropeGraph$.html#checkUniMap(all:Set[V],uniGraph:Map[V,Set[V]]):Unit", "kind" : "def"}, {"label" : "biMapToUniMap", "tail" : "(biGraph: Map[String, Set[String]]): Map[String, Set[String]]", "member" : "graphcolor.PoliticalMap.biMapToUniMap", "link" : "graphcolor\/EuropeGraph$.html#biMapToUniMap(biGraph:Map[V,Set[V]]):Map[V,Set[V]]", "kind" : "def"}, {"label" : "uniMapToBiMap", "tail" : "(all: Set[String], uniGraph: Map[String, Set[String]]): Map[String, Set[String]]", "member" : "graphcolor.PoliticalMap.uniMapToBiMap", "link" : "graphcolor\/EuropeGraph$.html#uniMapToBiMap(all:Set[V],uniGraph:Map[V,Set[V]]):Map[V,Set[V]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "graphcolor\/EuropeGraph$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "graphcolor\/EuropeGraph$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "graphcolor\/EuropeGraph$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "graphcolor\/EuropeGraph$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "graphcolor\/EuropeGraph$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "graphcolor\/EuropeGraph$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "graphcolor\/EuropeGraph$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "graphcolor\/EuropeGraph$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "graphcolor\/EuropeGraph$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "graphcolor\/EuropeGraph$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "graphcolor\/EuropeGraph$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "graphcolor\/EuropeGraph$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "graphcolor\/EuropeGraph$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "graphcolor\/EuropeGraph$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "graphcolor\/EuropeGraph$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "graphcolor\/EuropeGraph$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "graphcolor\/EuropeGraph$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "graphcolor\/EuropeGraph$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "graphcolor\/EuropeGraph$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "graphcolor.GenericGraph", "shortDescription" : "", "object" : "graphcolor\/GenericGraph$.html", "members_object" : [{"label" : "biGraphToDot", "tail" : "(biGraph: Map[V, Set[V]], locations: Map[V, (Double, Double)], baseName: String)(symbols: (V) => V, colors: (V) => String, view: Boolean, verbose: Boolean): Int", "member" : "graphcolor.GenericGraph.biGraphToDot", "link" : "graphcolor\/GenericGraph$.html#biGraphToDot[V](biGraph:Map[V,Set[V]],locations:Map[V,(Double,Double)],baseName:String)(symbols:V=>V,colors:V=>String,view:Boolean,verbose:Boolean):Int", "kind" : "def"}, {"label" : "orderStates", "tail" : "(states: List[V], biGraph: Map[V, Set[V]]): List[V]", "member" : "graphcolor.GenericGraph.orderStates", "link" : "graphcolor\/GenericGraph$.html#orderStates[V](states:List[V],biGraph:Map[V,Set[V]]):List[V]", "kind" : "def"}, {"label" : "dotProgram", "tail" : ": String", "member" : "graphcolor.PoliticalMap.dotProgram", "link" : "graphcolor\/GenericGraph$.html#dotProgram:String", "kind" : "val"}, {"label" : "checkBiMap", "tail" : "(all: Set[Nothing], biGraph: Map[Nothing, Set[Nothing]]): Unit", "member" : "graphcolor.PoliticalMap.checkBiMap", "link" : "graphcolor\/GenericGraph$.html#checkBiMap(all:Set[V],biGraph:Map[V,Set[V]]):Unit", "kind" : "def"}, {"label" : "checkUniMap", "tail" : "(all: Set[Nothing], uniGraph: Map[Nothing, Set[Nothing]]): Unit", "member" : "graphcolor.PoliticalMap.checkUniMap", "link" : "graphcolor\/GenericGraph$.html#checkUniMap(all:Set[V],uniGraph:Map[V,Set[V]]):Unit", "kind" : "def"}, {"label" : "biMapToUniMap", "tail" : "(biGraph: Map[Nothing, Set[Nothing]]): Map[Nothing, Set[Nothing]]", "member" : "graphcolor.PoliticalMap.biMapToUniMap", "link" : "graphcolor\/GenericGraph$.html#biMapToUniMap(biGraph:Map[V,Set[V]]):Map[V,Set[V]]", "kind" : "def"}, {"label" : "uniMapToBiMap", "tail" : "(all: Set[Nothing], uniGraph: Map[Nothing, Set[Nothing]]): Map[Nothing, Set[Nothing]]", "member" : "graphcolor.PoliticalMap.uniMapToBiMap", "link" : "graphcolor\/GenericGraph$.html#uniMapToBiMap(all:Set[V],uniGraph:Map[V,Set[V]]):Map[V,Set[V]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "graphcolor\/GenericGraph$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "graphcolor\/GenericGraph$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "graphcolor\/GenericGraph$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "graphcolor\/GenericGraph$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "graphcolor\/GenericGraph$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "graphcolor\/GenericGraph$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "graphcolor\/GenericGraph$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "graphcolor\/GenericGraph$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "graphcolor\/GenericGraph$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "graphcolor\/GenericGraph$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "graphcolor\/GenericGraph$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "graphcolor\/GenericGraph$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "graphcolor\/GenericGraph$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "graphcolor\/GenericGraph$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "graphcolor\/GenericGraph$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "graphcolor\/GenericGraph$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "graphcolor\/GenericGraph$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "graphcolor\/GenericGraph$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "graphcolor\/GenericGraph$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "graphcolor.MapColoring", "shortDescription" : "", "object" : "graphcolor\/MapColoring$.html", "members_object" : [{"label" : "timedColorizeMap", "tail" : "(numNodes: Int, baseName: String, start: V, uniGraph: Map[V, Set[V]], biGraph: Map[V, Set[V]], differentColor: List[V], colors: Array[String], gnuFileCB: (String) => Unit, view: Boolean, verbose: Boolean): Map[V, String]", "member" : "graphcolor.MapColoring.timedColorizeMap", "link" : "graphcolor\/MapColoring$.html#timedColorizeMap[V](numNodes:Int,baseName:String,start:V,uniGraph:Map[V,Set[V]],biGraph:Map[V,Set[V]],differentColor:List[V],colors:Array[String],gnuFileCB:String=>Unit,view:Boolean,verbose:Boolean):Map[V,String]", "kind" : "def"}, {"label" : "timeColorizeGraphs", "tail" : "(maxNumNodes: Int, gnuFileCB: (String) => Unit): Unit", "member" : "graphcolor.MapColoring.timeColorizeGraphs", "link" : "graphcolor\/MapColoring$.html#timeColorizeGraphs[V](maxNumNodes:Int,gnuFileCB:String=>Unit):Unit", "kind" : "def"}, {"label" : "keepMins", "tail" : "(triples: Seq[(String, Int, Double)]): List[(String, Int, Double)]", "member" : "graphcolor.MapColoring.keepMins", "link" : "graphcolor\/MapColoring$.html#keepMins(triples:Seq[(String,Int,Double)]):List[(String,Int,Double)]", "kind" : "def"}, {"label" : "colorizeMap", "tail" : "(givenBiGraph: Map[V, Set[V]], palette: Array[String]): Map[V, String]", "member" : "graphcolor.MapColoring.colorizeMap", "link" : "graphcolor\/MapColoring$.html#colorizeMap[V](givenBiGraph:Map[V,Set[V]],palette:Array[String]):Map[V,String]", "kind" : "def"}, {"label" : "rewindSimpleVertices", "tail" : "(colors: Array[String], biGraph: Map[V, Set[V]], colorized: Map[V, String], unwind: List[(V, Set[V])]): Map[V, String]", "member" : "graphcolor.MapColoring.rewindSimpleVertices", "link" : "graphcolor\/MapColoring$.html#rewindSimpleVertices[V](colors:Array[String],biGraph:Map[V,Set[V]],colorized:Map[V,String],unwind:List[(V,Set[V])]):Map[V,String]", "kind" : "def"}, {"label" : "unwindSimpleVertices", "tail" : "(numCrayons: Int, biGraph: Map[V, Set[V]], unwind: List[(V, Set[V])]): (Map[V, Set[V]], Map[V, Set[V]], List[(V, Set[V])])", "member" : "graphcolor.MapColoring.unwindSimpleVertices", "link" : "graphcolor\/MapColoring$.html#unwindSimpleVertices[V](numCrayons:Int,biGraph:Map[V,Set[V]],unwind:List[(V,Set[V])]):(Map[V,Set[V]],Map[V,Set[V]],List[(V,Set[V])])", "kind" : "def"}, {"label" : "addEdges", "tail" : "(biGraph: Map[V, Set[V]], edges: List[(V, V)]): Map[V, Set[V]]", "member" : "graphcolor.MapColoring.addEdges", "link" : "graphcolor\/MapColoring$.html#addEdges[V](biGraph:Map[V,Set[V]],edges:List[(V,V)]):Map[V,Set[V]]", "kind" : "def"}, {"label" : "addEdge", "tail" : "(v1: V, v2: V, biGraph: Map[V, Set[V]]): Map[V, Set[V]]", "member" : "graphcolor.MapColoring.addEdge", "link" : "graphcolor\/MapColoring$.html#addEdge[V](v1:V,v2:V,biGraph:Map[V,Set[V]]):Map[V,Set[V]]", "kind" : "def"}, {"label" : "removeStates", "tail" : "(statesToRemove: List[V], gr: Map[V, Set[V]]): Map[V, Set[V]]", "member" : "graphcolor.MapColoring.removeStates", "link" : "graphcolor\/MapColoring$.html#removeStates[V](statesToRemove:List[V],gr:Map[V,Set[V]]):Map[V,Set[V]]", "kind" : "def"}, {"label" : "removeState", "tail" : "(stateToRemove: V, gr: Map[V, Set[V]]): Map[V, Set[V]]", "member" : "graphcolor.MapColoring.removeState", "link" : "graphcolor\/MapColoring$.html#removeState[V](stateToRemove:V,gr:Map[V,Set[V]]):Map[V,Set[V]]", "kind" : "def"}, {"label" : "assignColors", "tail" : "(colorization: Map[V, (Int, Int)], assignTrue: Assignment, assignFalse: Assignment, colors: Array[T]): Map[V, T]", "member" : "graphcolor.MapColoring.assignColors", "link" : "graphcolor\/MapColoring$.html#assignColors[V,T](colorization:Map[V,(Int,Int)],assignTrue:bdd.Assignment,assignFalse:bdd.Assignment,colors:Array[T]):Map[V,T]", "kind" : "def"}, {"label" : "politicalGraphToBdd", "tail" : "(seed: List[V], uniGraph: Map[V, Set[V]], biGraph: Map[V, Set[V]], numNodes: Int, consume: (Double, () => Double) => Unit, differentColor: List[V], fold: Int, verbose: Boolean): (Map[V, (Int, Int)], Bdd)", "member" : "graphcolor.MapColoring.politicalGraphToBdd", "link" : "graphcolor\/MapColoring$.html#politicalGraphToBdd[V](seed:List[V],uniGraph:Map[V,Set[V]],biGraph:Map[V,Set[V]],numNodes:Int,consume:(Double,()=>Double)=>Unit,differentColor:List[V],fold:Int,verbose:Boolean):(Map[V,(Int,Int)],bdd.Bdd)", "kind" : "def"}, {"label" : "breadthFirstOrder", "tail" : "(states: Set[V], uniGraph: Map[V, Set[V]]): List[V]", "member" : "graphcolor.MapColoring.breadthFirstOrder", "link" : "graphcolor\/MapColoring$.html#breadthFirstOrder[V](states:Set[V],uniGraph:Map[V,Set[V]]):List[V]", "kind" : "def"}, {"label" : "biGraphToUniGraph", "tail" : "(biGraph: Map[V, Set[V]]): Map[V, Set[V]]", "member" : "graphcolor.MapColoring.biGraphToUniGraph", "link" : "graphcolor\/MapColoring$.html#biGraphToUniGraph[V](biGraph:Map[V,Set[V]]):Map[V,Set[V]]", "kind" : "def"}, {"label" : "uniGraphToBiGraph", "tail" : "(uniGraph: Map[V, Set[V]]): Map[V, Set[V]]", "member" : "graphcolor.MapColoring.uniGraphToBiGraph", "link" : "graphcolor\/MapColoring$.html#uniGraphToBiGraph[V](uniGraph:Map[V,Set[V]]):Map[V,Set[V]]", "kind" : "def"}, {"label" : "makeStateToVarMap", "tail" : "(differentColor: List[V], allStates: List[V]): Map[V, (Int, Int)]", "member" : "graphcolor.MapColoring.makeStateToVarMap", "link" : "graphcolor\/MapColoring$.html#makeStateToVarMap[V](differentColor:List[V],allStates:List[V]):Map[V,(Int,Int)]", "kind" : "def"}, {"label" : "folders", "tail" : "(): Array[(String, FOLD_FUN[V])]", "member" : "graphcolor.MapColoring.folders", "link" : "graphcolor\/MapColoring$.html#folders[V]():Array[(String,graphcolor.MapColoring.FOLD_FUN[V])]", "kind" : "def"}, {"label" : "FOLD_FUN", "tail" : "", "member" : "graphcolor.MapColoring.FOLD_FUN", "link" : "graphcolor\/MapColoring$.html#FOLD_FUN[V]=(Seq[V],bdd.Bdd,V=>bdd.Bdd,(bdd.Bdd,bdd.Bdd)=>bdd.Bdd)=>bdd.Bdd", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "graphcolor\/MapColoring$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "graphcolor\/MapColoring$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "graphcolor\/MapColoring$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "graphcolor\/MapColoring$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "graphcolor\/MapColoring$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "graphcolor\/MapColoring$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "graphcolor\/MapColoring$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "graphcolor\/MapColoring$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "graphcolor\/MapColoring$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "graphcolor\/MapColoring$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "graphcolor\/MapColoring$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "graphcolor\/MapColoring$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "graphcolor\/MapColoring$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "graphcolor\/MapColoring$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "graphcolor\/MapColoring$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "graphcolor\/MapColoring$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "graphcolor\/MapColoring$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "graphcolor\/MapColoring$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "graphcolor\/MapColoring$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "graphcolor.PoliticalMap", "shortDescription" : "", "members_class" : [{"label" : "dotProgram", "tail" : ": String", "member" : "graphcolor.PoliticalMap.dotProgram", "link" : "graphcolor\/PoliticalMap.html#dotProgram:String", "kind" : "val"}, {"label" : "checkBiMap", "tail" : "(all: Set[V], biGraph: Map[V, Set[V]]): Unit", "member" : "graphcolor.PoliticalMap.checkBiMap", "link" : "graphcolor\/PoliticalMap.html#checkBiMap(all:Set[V],biGraph:Map[V,Set[V]]):Unit", "kind" : "def"}, {"label" : "checkUniMap", "tail" : "(all: Set[V], uniGraph: Map[V, Set[V]]): Unit", "member" : "graphcolor.PoliticalMap.checkUniMap", "link" : "graphcolor\/PoliticalMap.html#checkUniMap(all:Set[V],uniGraph:Map[V,Set[V]]):Unit", "kind" : "def"}, {"label" : "biMapToUniMap", "tail" : "(biGraph: Map[V, Set[V]]): Map[V, Set[V]]", "member" : "graphcolor.PoliticalMap.biMapToUniMap", "link" : "graphcolor\/PoliticalMap.html#biMapToUniMap(biGraph:Map[V,Set[V]]):Map[V,Set[V]]", "kind" : "def"}, {"label" : "uniMapToBiMap", "tail" : "(all: Set[V], uniGraph: Map[V, Set[V]]): Map[V, Set[V]]", "member" : "graphcolor.PoliticalMap.uniMapToBiMap", "link" : "graphcolor\/PoliticalMap.html#uniMapToBiMap(all:Set[V],uniGraph:Map[V,Set[V]]):Map[V,Set[V]]", "kind" : "def"}, {"member" : "graphcolor.PoliticalMap#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "graphcolor\/PoliticalMap.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "graphcolor\/PoliticalMap.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "graphcolor\/PoliticalMap.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "graphcolor\/PoliticalMap.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "graphcolor\/PoliticalMap.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "graphcolor\/PoliticalMap.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "graphcolor\/PoliticalMap.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "graphcolor\/PoliticalMap.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "graphcolor\/PoliticalMap.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "graphcolor\/PoliticalMap.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "graphcolor\/PoliticalMap.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "graphcolor\/PoliticalMap.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "graphcolor\/PoliticalMap.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "graphcolor\/PoliticalMap.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "graphcolor\/PoliticalMap.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "graphcolor\/PoliticalMap.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "graphcolor\/PoliticalMap.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "graphcolor\/PoliticalMap.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "graphcolor\/PoliticalMap.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "graphcolor\/PoliticalMap.html", "kind" : "class"}, {"name" : "graphcolor.sampleColoring", "shortDescription" : "", "object" : "graphcolor\/sampleColoring$.html", "members_object" : [{"label" : "main", "tail" : "(argv: Array[String]): Unit", "member" : "graphcolor.sampleColoring.main", "link" : "graphcolor\/sampleColoring$.html#main(argv:Array[String]):Unit", "kind" : "def"}, {"label" : "europeMapColoringTest", "tail" : "(): Int", "member" : "graphcolor.sampleColoring.europeMapColoringTest", "link" : "graphcolor\/sampleColoring$.html#europeMapColoringTest():Int", "kind" : "def"}, {"label" : "europeTimedMapColoringTest", "tail" : "(numRegions: Int, gnuFileCB: (String) => Unit, view: Boolean, verbose: Boolean): Int", "member" : "graphcolor.sampleColoring.europeTimedMapColoringTest", "link" : "graphcolor\/sampleColoring$.html#europeTimedMapColoringTest(numRegions:Int,gnuFileCB:String=>Unit,view:Boolean,verbose:Boolean):Int", "kind" : "def"}, {"label" : "usTimedMapColoringTest", "tail" : "(numRegions: Int, view: Boolean, verbose: Boolean): Int", "member" : "graphcolor.sampleColoring.usTimedMapColoringTest", "link" : "graphcolor\/sampleColoring$.html#usTimedMapColoringTest(numRegions:Int,view:Boolean,verbose:Boolean):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "graphcolor\/sampleColoring$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "graphcolor\/sampleColoring$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "graphcolor\/sampleColoring$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "graphcolor\/sampleColoring$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "graphcolor\/sampleColoring$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "graphcolor\/sampleColoring$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "graphcolor\/sampleColoring$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "graphcolor\/sampleColoring$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "graphcolor\/sampleColoring$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "graphcolor\/sampleColoring$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "graphcolor\/sampleColoring$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "graphcolor\/sampleColoring$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "graphcolor\/sampleColoring$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "graphcolor\/sampleColoring$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "graphcolor\/sampleColoring$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "graphcolor\/sampleColoring$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "graphcolor\/sampleColoring$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "graphcolor\/sampleColoring$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "graphcolor\/sampleColoring$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "graphcolor.USAgraph", "shortDescription" : "", "object" : "graphcolor\/USAgraph$.html", "members_object" : [{"label" : "stateBiGraph", "tail" : ": Map[String, Set[String]]", "member" : "graphcolor.USAgraph.stateBiGraph", "link" : "graphcolor\/USAgraph$.html#stateBiGraph:Map[String,Set[String]]", "kind" : "val"}, {"label" : "stateUniGraph", "tail" : ": Map[String, Set[String]]", "member" : "graphcolor.USAgraph.stateUniGraph", "link" : "graphcolor\/USAgraph$.html#stateUniGraph:Map[String,Set[String]]", "kind" : "val"}, {"label" : "symbols", "tail" : ": Map[String, String]", "member" : "graphcolor.USAgraph.symbols", "link" : "graphcolor\/USAgraph$.html#symbols:Map[String,String]", "kind" : "val"}, {"label" : "statePositions", "tail" : ": Map[String, (Double, Double)]", "member" : "graphcolor.USAgraph.statePositions", "link" : "graphcolor\/USAgraph$.html#statePositions:Map[String,(Double,Double)]", "kind" : "val"}, {"label" : "allStates", "tail" : ": Set[String]", "member" : "graphcolor.USAgraph.allStates", "link" : "graphcolor\/USAgraph$.html#allStates:Set[String]", "kind" : "val"}, {"label" : "dotProgram", "tail" : ": String", "member" : "graphcolor.PoliticalMap.dotProgram", "link" : "graphcolor\/USAgraph$.html#dotProgram:String", "kind" : "val"}, {"label" : "checkBiMap", "tail" : "(all: Set[String], biGraph: Map[String, Set[String]]): Unit", "member" : "graphcolor.PoliticalMap.checkBiMap", "link" : "graphcolor\/USAgraph$.html#checkBiMap(all:Set[V],biGraph:Map[V,Set[V]]):Unit", "kind" : "def"}, {"label" : "checkUniMap", "tail" : "(all: Set[String], uniGraph: Map[String, Set[String]]): Unit", "member" : "graphcolor.PoliticalMap.checkUniMap", "link" : "graphcolor\/USAgraph$.html#checkUniMap(all:Set[V],uniGraph:Map[V,Set[V]]):Unit", "kind" : "def"}, {"label" : "biMapToUniMap", "tail" : "(biGraph: Map[String, Set[String]]): Map[String, Set[String]]", "member" : "graphcolor.PoliticalMap.biMapToUniMap", "link" : "graphcolor\/USAgraph$.html#biMapToUniMap(biGraph:Map[V,Set[V]]):Map[V,Set[V]]", "kind" : "def"}, {"label" : "uniMapToBiMap", "tail" : "(all: Set[String], uniGraph: Map[String, Set[String]]): Map[String, Set[String]]", "member" : "graphcolor.PoliticalMap.uniMapToBiMap", "link" : "graphcolor\/USAgraph$.html#uniMapToBiMap(all:Set[V],uniGraph:Map[V,Set[V]]):Map[V,Set[V]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "graphcolor\/USAgraph$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "graphcolor\/USAgraph$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "graphcolor\/USAgraph$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "graphcolor\/USAgraph$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "graphcolor\/USAgraph$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "graphcolor\/USAgraph$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "graphcolor\/USAgraph$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "graphcolor\/USAgraph$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "graphcolor\/USAgraph$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "graphcolor\/USAgraph$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "graphcolor\/USAgraph$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "graphcolor\/USAgraph$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "graphcolor\/USAgraph$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "graphcolor\/USAgraph$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "graphcolor\/USAgraph$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "graphcolor\/USAgraph$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "graphcolor\/USAgraph$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "graphcolor\/USAgraph$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "graphcolor\/USAgraph$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};